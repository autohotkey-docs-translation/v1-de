<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Archivierte Änderungen | AutoHotkey v1</title>
<meta name="description" content="Diese Seite enthält einen Verlauf der Änderungen, die Chris Mallett im ursprünglichen Entwicklungszweig von AutoHotkey vorgenommen hat." />
<meta name="ahk:equiv-v2" content="ChangeLog.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<script src="static/content.js" type="text/javascript"></script>
<script src="static/ga4.js" type="text/javascript"></script>
</head>

<body>
<h1>Archivierte Änderungen</h1>
<p>Dieses Dokument enthält einen Verlauf der Änderungen, die Chris Mallett im ursprünglichen Entwicklungszweig von AutoHotkey vorgenommen hat.</p>
<p>Neuere Änderungen finden Sie unter <a href="AHKL_ChangeLog.htm">Änderungen &amp; Neue Features</a>.</p>

<h2 id="v1.0.48.05">1.0.48.05 - 25. September 2009</h2>
<p>Behoben: <a href="lib/PostMessage.htm">SendMessage und PostMessage</a> brachten das Skript zum Absturz, wenn wParam oder lParam weggelassen wird (fehlerhaft seit 1.0.48.04). [danke Lexikos]</p>

<h2 id="v1.0.48.04">1.0.48.04 - 25. September 2009</h2>
<p>Behoben: <a href="lib/StringSplit.htm">StringSplit</a> funktioniert nun korrekt in <a href="Functions.htm">Funktionen</a> innerhalb von <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a> (fehlerhaft seit 1.0.35.01). [danke engunneer &amp; Lexikos]</p>
<p>Behoben: <a href="lib/Send.htm#SendPlayDetail">SendPlay</a> wartet nicht mehr auf das Loslassen der WIN-Taste, bevor es einen "L"-Tastendruck sendet (fehlerhaft seit 1.0.48.01). [danke Lexikos]</p>
<p>Behoben: <a href="Variables.htm#EndChar">A_EndChar</a> ist nun gültig, wenn die <a href="Hotstrings.htm#b0">B0-Option</a> vorhanden ist, und leer, wenn kein <a href="Hotstrings.htm#EndChars">Endungszeichen</a> verfügbar ist (fehlerhaft seit 1.0.44.09). [danke Al2000]</p>
<p>Behoben: <a href="lib/FormatTime.htm">FormatTime</a> gibt nun eine gültige Tageszeit zurück, wenn der angegebene Monat außerhalb des Bereichs liegt (fehlerhaft seit 1.0.48.00). [danke silveredge78]</p>
<p>Behoben: <a href="lib/FileCreateDir.htm">FileCreateDir</a> unterstützt nun einen umgekehrten Schrägstrich am Anfang eines Pfades, wenn es nur der einzige umgekehrte Schrägstrich ist; z.B. \Verz. [danke jaco0646]</p>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl</a>/<a href="lib/GuiControlGet.htm">GuiControlGet</a>/<a href="lib/Gui.htm">Gui</a>/<a href="lib/PostMessage.htm">SendMessage</a> funktionieren nun zuverlässig, wenn sie eine Rückruffunktion von <a href="lib/RegisterCallback.htm">RegisterCallback()</a> oder <a href="lib/OnMessage.htm">OnMessage</a> auslösen. [danke Lexikos]</p>
<p>Behoben: <a href="lib/RegExMatch.htm">RegExMatch()</a> erzeugte zu wenige Ersetzungen, wenn nach einer Übereinstimmung mit einer leeren Zeichenkette eine Übereinstimmung mit einer nicht-leeren Zeichenkette erfolgte.</p>
<p>Geändert: <code>While()</code> wird nicht mehr als <a href="Functions.htm">Funktion</a>, sondern als <a href="lib/While.htm">Schleife</a> erkannt. [danke Crash&amp;Burn]</p>
<p>Verbessert: <a href="lib/URLDownloadToFile.htm">URLDownloadToFile</a> unterstützt nun FTP und Gopher. [danke Lexikos]</p>
<p>Verbessert: <a href="lib/FileAppend.htm#stdout">stdout/Sternchen-Modus</a> von FileAppend schreibt nun sofort in die Standardausgabe. [danke Lexikos]</p>
<p>Hinzugefügt: Volle Unterstützung für <code>if % Ausdruck</code>. [danke kenomby]</p>

<h2 id="v1.0.48.03">1.0.48.03 - 3. Mai 2009</h2>
<p>Behoben: <code><a href="lib/ListLines.htm">ListLines On</a></code> löscht nicht mehr den letzten Log-Eintrag im Zeilenverlauf. [danke Lexikos]</p>
<p>Behoben: <a href="lib/ListView.htm">ListView</a> reagiert nun ordnungsgemäß auf das Ziehen des Mauszeigers, während ein <a href="lib/SetTimer.htm">Timer</a> läuft. [danke Solar]</p>
<p>Behoben: Wenn ein <a href="Hotkeys.htm#keyup">Taste-Oben-Hotkey</a> erstellt wird, während seine Taste nach unten gedrückt wird, wird beim Loslassen der Taste nicht mehr der falsche Hotkey ausgelöst. [danke Peter &amp; engunneer]</p>

<h2 id="v1.0.48.02">1.0.48.02 - 19. April 2009</h2>
<p>Behoben: <a href="lib/Gosub.htm">Gosub</a> und <a href="lib/GroupActivate.htm">GroupActivate</a> wurden so geändert, dass, wenn eine Funktion eine <a href="Functions.htm#GosubPublic">externe/öffentliche Subroutine</a> aufruft, diese Subroutine alle dynamischen Variablen als globale Variablen behandelt und das Außerhalb-einer-Funktion-GUI-Verhalten hat. [danke kenomby &amp; Lexikos]</p>
<p>Verbessert: <a href="Variables.htm#True">True</a>/<a href="Variables.htm#False">False</a>/<a href="Variables.htm#EventInfo">A_EventInfo</a> sind in <a href="Variables.htm#Expressions">Ausdrücken</a> nun performanter, weil sie nicht mehr als Zeichenketten, sondern als Integer behandelt werden.</p>

<h2 id="v1.0.48.01">1.0.48.01 - 15. April 2009</h2>
<p>Geändert: In Windows Vista und höher werden Hotkeys, die <kbd>Win</kbd> enthalten (z.B. #a), nun darauf warten, bis LWin und RWin losgelassen werden, bevor sie einen Text senden, der einen "L"-Tastendruck enthält. Dadurch wird verhindert, dass so ein Hotkey den PC unbeabsichtigt sperrt. Dieses Verhalten gilt für alle Send-Modi, außer <a href="lib/Send.htm#SendPlayDetail">SendPlay</a> (weil es das nicht braucht) und <a href="lib/Send.htm#blind">Blind-Modus</a>.</p>
<p>Behoben: <a href="lib/LoopFile.htm#LoopFileExt">A_LoopFileExt</a> ist nun leer für alle Dateinamen, die keine Dateiendung haben, aber einen Punkt im Pfadnamen enthalten. [danke Yek-Toho-Tua].</p>
<p>Behoben: <a href="Variables.htm#AssignOp">Zuweisungen</a> von Integern, die 19 oder 20 Zeichen lang sind, funktionieren nun wie vor v1.0.48. [danke Laszlo &amp; Lexikos]</p>
<p>Behoben: <a href="Functions.htm#define">Funktionsdefinitionen</a> funktionieren nun ordnungsgemäß in einem <a href="lib/Block.htm">Block</a>. [danke rmarko]</p>
<p>Verbessert: <a href="Variables.htm#Index">A_Index</a> ist in <a href="Variables.htm#Expressions">Ausdrücken</a> nun performanter, weil es nicht mehr als Zeichenkette, sondern als Integer behandelt wird.</p>
<p>Verbessert: <code class="no-highlight"><a href="lib/IfIn.htm">if var [not] in/contains</a></code> ist nun performanter. [entwickelt von Lexikos]</p>
<p>Verbessert: <a href="lib/ListLines.htm">ListLines</a> hat nun eine Option zum Ein- und Ausschalten der Zeilenprotokollierung. [danke kenomby &amp; ruespe]</p>

<h2 id="v1.0.48.00">1.0.48 - 25. Februar 2009</h2>
<p><strong>Kompatibilität:</strong> In Variablen gespeicherte Floating-Point-Zahlen haben jetzt eine höhere Genauigkeit, was sich auf die Abwärtskompatibilität auswirken kann. Skripte, die auf winzige Unterschiede in der Genauigkeit angewiesen sind, müssen entweder überprüft und aktualisiert werden, oder können durch Nutzung von <code><a href="lib/SetFormat.htm">SetFormat Float</a></code> (z.B. <code>SetFormat, Float, 0.6</code>) <em>an beliebiger Stelle</em> im Skript performanter gemacht werden. <code>SetFormat Float</code> deaktiviert die höhere Genauigkeit, verzichtet aber teilweise auf die neue, schnellere Floating-Point-Performanz.</p>
<p><strong>Performanz:</strong> Das Hauptziel dieser Version ist Performanzerhöhung. Fast alle Skripte sollten schneller laufen, besonders solche, die häufig <a href="Variables.htm#Expressions">Ausdrücke</a> verwenden und Integerberechnungen/-vergleiche durchführen (bis zu dreimal so schnell). Damit ein Skript den vollen Nutzen daraus ziehen kann, sollte es auf SetFormat verzichten oder den <a href="lib/SetFormat.htm#Fast">Fast-Modus von SetFormat</a> verwenden.</p>
<h3 id="Performance_improvements">Performanzverbesserungen</h3>
<p><a href="Variables.htm#Expressions">Ausdrücke</a> und <a href="Functions.htm">Funktionsaufrufe</a> werden stärker kompiliert, um sie deutlich schneller zu machen (insbesondere komplexe Integer-Ausdrücke, einschließlich solcher mit <a href="Variables.htm#comma">Kommas</a>).</p>
<p>Binärzahlen werden bei Variablen zwischengespeichert, um Umwandlungen von/in Zeichenketten zu verhindern. Dies macht numerische Operationen mit Variablen deutlich schneller.</p>
<p>Direkt geschriebene Integer in Ausdrücken und Mathematik-/Vergleichsbefehlen werden mit Binärzahlen ersetzt, um sie schneller zu machen; z.B. <code>X+5</code> und <code>if x &gt; 5</code>.</p>
<p><a href="lib/Loop.htm">LOOPs</a>, <a href="lib/IfExpression.htm">IFs</a> und <a href="lib/Else.htm">ELSEs</a> mit Blöcken (geschweifte Klammern) sind schneller, weil sie die öffnende '{' überspringen. Dies hat den Nebeneffekt, dass '{' in <a href="lib/ListLines.htm">ListLines</a> weggelassen wird.</p>
<p>Die Performanz beim <a href="misc/Threads.htm">Erstellen eines Threads</a> wurde verbessert, um schnell ausführende Threads in <a href="lib/OnMessage.htm">OnMessage()</a>, <a href="lib/RegisterCallback.htm">RegisterCallback()</a> und <a href="lib/Gui.htm#Events">GUI-Ereignissen</a> zu unterstützen.</p>
<h3 id="Changes_that_might_affect_existing_scripts">Änderungen mit möglichem Einfluss auf bestehende Skripte (abgesehen vom oben genannten höherpräzisen Floating-Point)</h3>
<p>Wenn <code><a href="lib/SetFormat.htm#Integer">SetFormat, Integer, Hex</a></code> aktiviert ist, wird ein direkt geschriebener dezimaler Integer, der per Zuweisung an eine Variable übergeben wird, ab sofort auch in Hexadezimal umgewandelt. Normalerweise ist das nur ein Anzeigeproblem.</p>
<p>Um die Performanz von <a href="lib/OnMessage.htm">OnMessage()</a> zu verbessern, treffen die Meldungsnummer und HWND-Nummer als Standardnummern ein, anstatt bedingungslos in Hexadezimal angezeigt zu werden. Normalerweise ist das nur ein Anzeigeproblem.</p>
<p>Aus Performanzgründen verbrauchen Skripte nun etwas mehr Speicher (im Verhältnis zur Anzahl der Variablen und Ausdrücke).</p>
<p>Geändert und behoben: <code><a href="lib/IfIs.htm#time">if Var is time</a></code> und andere Verwendungen von YYYYMMDDHHMISS-Zeitstempeln behandeln nun Monate außerhalb des Bereichs von 1 bis 12 als ungültig. [danke Nick]</p>
<p>Geändert und verbessert: Ein <a href="Functions.htm#DynCall">dynamischer Funktionsaufruf</a> ermöglicht nun die Übergabe von mehr Parametern als von einer Funktion definiert – in diesem Fall werden die Parameter zwar ausgewertet, aber verworfen. [entwickelt von Lexikos]</p>
<h3 id="Other_improvements">Sonstige Verbesserungen</h3>
<p>Hinzugefügt: Die <a href="lib/IsFunc.htm">IsFunc()</a>-Funktion kennzeichnet, ob eine Funktion <a href="Functions.htm#DynCall">dynamisch aufgerufen</a> wurde. [entwickelt von Lexikos]</p>
<p>Hinzugefügt: Die <a href="lib/While.htm">While-Schleife</a> führt ihre Befehle wiederholt aus, bis die Auswertung ihres <a href="Variables.htm#Expressions">Ausdrucks</a> False ergibt. [entwickelt von Lexikos]</p>
<p>Hinzugefügt: <a href="Functions.htm#AssumeStatic">Assume-Static-Modus</a> für Funktionen. [entwickelt von Lexikos]</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#IsPaused">A_IsPaused</a> und <a href="Variables.htm#IsCritical">A_IsCritical</a>. [entwickelt von Lexikos]</p>
<p>Verbessert: <a href="lib/NumPut.htm">NumPut()</a> unterstützt wie <a href="lib/DllCall.htm#unsigned">DllCall()</a> ab sofort UInt64. [danke Sean]</p>
<p>Verbessert: Mausradunterstützung. <a href="Hotkeys.htm#Wheel">WheelLeft und WheelRight</a> können nun als Hotkeys oder in <a href="lib/Send.htm">Send</a>, <a href="lib/Click.htm">Click</a> etc. verwendet werden. WheelLeft und WheelRight funktionieren aber nicht in Betriebssystemen älter als Windows Vista. [entwickelt von Lexikos]</p>
<p>Der Kompressor zum <a href="Scripts.htm#ahk2exe">Kompilieren eines Skripts</a> wurde von UPX 3.00 auf 3.03 aktualisiert.</p>
<h3 id="Fixes">Fehlerbehebungen</h3>
<p>Behoben: Der Zeitlimit-Parameter von <a href="lib/MsgBox.htm#Timeout">MsgBox</a> kann nun auch verwendet werden, wenn der Text-Parameter einen Ausdruck mit Kommas enthält.</p>
<p>Behoben: <code><a href="lib/Menu.htm#Delete">Menu, Delete, Menüpunkt-als-Untermenü</a></code> stört nicht mehr das zugeordnete Untermenü. [danke animeaime &amp; Lexikos]</p>
<p>Behoben: Das <a href="lib/GuiControls.htm#Hotkey">GUI-Hotkey-Steuerelement</a> gibt nun auch bei toten Tasten einen verwendbaren Hotkey-Namen zurück (z.B. "^" statt Zirkumflex). [danke DerRaphael]</p>
<p>Behoben: <a href="lib/RegDelete.htm">RegDelete</a> löscht nicht mehr den kompletten RootSchlüssel, wenn UnterSchlüssel leer ist. [danke Icarus]</p>
<p>Behoben: <a href="lib/LoopReg.htm">Registry-Schleifen</a> unterstützen nun Unterschlüsselnamen länger als 259 (selten). In früheren Versionen wurden solche Unterschlüssel übersprungen oder brachten das Skript zum Absturz. [danke Krzysztof Sliwinski &amp; Eggi]</p>
<p>Behoben: FileSelectFolder hat nun <a href="lib/FileSelectFolder.htm#NewDialog">eine Option</a>, um es kompatibel mit BartPE/WinPE zu machen. [danke markreflex]</p>
<p>Behoben: <a href="misc/WinTitle.htm#ahk_id">Fenster-/Steuerelement-IDs (HWNDs)</a> starteten in seltenen Fällen fälschlicherweise mit 0xFFFFFFFF statt mit 0x. [danke Micahs]</p>
<p>Behoben: <a href="lib/Send.htm">Send-Befehle</a> können nun die Down/Up-Modifikatoren mit dem "}"-Zeichen kombinieren. [danke neovars]</p>

<h2 id="v1.0.47.06">1.0.47.06 - 9. März 2008</h2>
<p>Behoben: Es kommt nicht mehr zu Abstürzen, wenn eine <a href="Functions.htm">Funktion</a> simultan mit einem optionalen <a href="Functions.htm#ByRef">ByRef-Parameter</a> aufgerufen wird, der von einem <a href="misc/Threads.htm">Thread</a> weggelassen wird und vom anderen nicht. [danke DeathByNukes]</p>
<p>Behoben: <code><a href="lib/Menu.htm#MainWindow">Menu, Tray, MainWindow</a></code> aktiviert nun die Menüpunkte im View-Menü des versteckten Hauptfensters des Skripts. [danke Lexikos]</p>
<p>Hinzugefügt: <a href="Functions.htm#DynCall">Dynamischer Funktionsaufruf</a>. [entwickelt von Lexikos]</p>

<h2 id="v1.0.47.05">1.0.47.05 - 21. November 2007</h2>
<p>Behoben: <a href="lib/Sort.htm">Sort-Befehl</a>: 1) Die <a href="lib/Sort.htm#callback">F-Option</a> funktioniert nun korrekt, wenn sie die letzte Option in der Liste ist; 2) Wenn das Trennzeichen CRLF ist, erkennt die <a href="lib/Sort.htm#unique">U-Option</a> nun das letzte Element als Duplikat, selbst wenn es nicht mit CRLF endet; 3) Die U-Option setzt kein Trennzeichen mehr an das Ende, wenn das letzte Element ein Duplikat ist. [danke Roland]</p>
<p>Behoben: <a href="lib/RegExMatch.htm">RegExMatch()</a> und <a href="lib/RegExReplace.htm">RegExReplace()</a> geben nun korrekte Werte zurück, wenn Heuhaufen und AusgabeVar dieselben Variablen sind. [danke Superfraggle]</p>
<p>Behoben: Es kann nun eine Variable als Parameter übergeben werden, der <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> zugewiesen wurde. [danke Joy2DWorld &amp; Lexikos]</p>
<p>Aktualisiert: RegEx/PCRE von 7.0 auf 7.4. Eine Zusammenfassung der wichtigsten Änderungen finden Sie unter <a href="http://www.pcre.org/news.txt">www.pcre.org/news.txt</a>. Alle Details zu den Änderungen und Fehlerbehebungen finden Sie unter <a href="http://www.pcre.org/changelog.txt">www.pcre.org/changelog.txt</a>.</p>
<p>Hinzugefügt: Das <a href="lib/GuiControls.htm#Tab2">Tab2</a>-GUI-Steuerelement behebt seltene Neuzeichnungsprobleme im originalen Tab-Steuerelement (z.B. beim Aktivieren eines GUI-Fensters durch Anklicken des Scrollbalkens eines Steuerelements). Das originale Tab-Steuerelement bleibt aus Gründen der Abwärtskompatibilität erhalten, weil "Tab2" sein Tab-Steuerelement hinsichtlich der Tabulatornavigation hinter den darin befindlichen Steuerelementen einordnet. [danke Xander]</p>

<h2 id="v1.0.47.04">1.0.47.04 - 28. August 2007</h2>
<p>Behoben: <a href="Hotkeys.htm#keyup">Taste-Oben-Hotkeys</a> wie <code>a up::</code> blockieren nicht mehr das Drücken der A-Taste, es sei denn, die <a href="lib/_IfWinActive.htm">#IfWin-Kriterien</a> des Hotkeys sind erfüllt. [danke Roland]</p>
<p>Behoben: <code><a href="lib/Math.htm#Round">Round(Var, NegativeZahl)</a></code> wurde in seltenen Fällen um 1 verringert. [danke Icarus]</p>
<p>Behoben: Es kommt nicht mehr zu Abstürzen, wenn Skripte mit einem Syntaxfehler enden, der eine verwaiste IF-Anweisung enthält (fehlerhaft seit 1.0.47.00). [danke msgbox vom deutschen Forum]</p>
<p>Entfernt: Fehlerdialogfenster "GetClipboardData". Stattdessen wird eine leere Zeichenkette abgerufen, wenn die Daten innerhalb der <a href="lib/_ClipboardTimeout.htm">#ClipboardTimeout</a>-Periode nicht zugreifbar sind. [danke ManaUser &amp; Sean]</p>
<p>Geändert: <a href="lib/GuiControls.htm#CheckBox">CheckBox</a>- und <a href="lib/GuiControls.htm#Radio">Radio</a>-Steuerelemente verwenden nun standardmäßig <a href="lib/Gui.htm#Wrap">"kein automatischer Zeilenumbruch"</a>, wenn keine Breite, Höhe oder Zeilenumbruchzeichen angegeben sind. Dies behebt Anzeigeprobleme bei ungewöhnlichen DPI-Einstellungen. [danke Boskoop]</p>

<h2 id="v1.0.47.03">1.0.47.03 - 1. August 2007</h2>
<p>Behoben: <a href="Variables.htm#Expressions">Ausdrücke</a> können nun direkt geschriebene, negative Hexadezimalzahlen enthalten, die mit einem "E" enden; z.B. fn(-0xe). [danke Laszlo]</p>
<p>Behoben: Die <a href="lib/Block.htm">Blocksyntax</a> erlaubt nun einen <a href="Functions.htm">Funktionsaufruf</a> direkt rechts von "}". [danke Roland]</p>

<h2 id="v1.0.47.02">1.0.47.02 - 19. Juli 2007</h2>
<p>Behoben: Die <a href="lib/GuiControls.htm#EditNum">Number-Option</a> des Edit-Steuerelements zeigt nun ordnungsgemäß eine Sprechblase an, wenn der Benutzer etwas anderes als eine Zahl eingibt. [danke tfcahm]</p>
<p>Behoben: WM_TIMER wird nicht mehr blockiert, es sei denn, es wird an das versteckte Hauptfenster des Skripts gesendet. [danke tfcahm]</p>
<p>Behoben: <a href="Hotkeys.htm#wildcard">Platzhalter-Hotkeys</a> erhalten nicht mehr das <a href="Hotkeys.htm#Tilde">Tilde-Verhalten</a>, wenn der gleiche Hotkey mit einem Tilde-Zeichen im Skript vorkommt. [danke Lexikos]</p>
<p>Behoben: <a href="Functions.htm#DeclareInit">Deklarationsinitialisierungen</a> behalten keine Leerraumzeichen mehr am Ende von direkt geschriebenen Zahlen. Zudem ermöglichen sie ab sofort Leerzeichen zwischen einem schließenden Anführungszeichen und dem nächsten Komma. [danke Hardeep]</p>

<h2 id="v1.0.47.01">1.0.47.01 - 8. Juli 2007</h2>
<p>Behoben: <a href="lib/RunAs.htm">RunAs</a> verursachte einen Absturz oder verhielt sich falsch, wenn eine Domäne angegeben ist. [danke Markus Frohnmaier]</p>
<p>Geändert: <a href="Variables.htm#Operators">Vergleichsoperatoren</a> geben nun einen Integer zurück, selbst wenn die Eingabewerte im Floating-Point-Format sind; z.B. würde <code>1.0 &lt; 2.0</code> nicht 1.0, sondern 1 zurückgeben. [danke Lexikos]</p>

<h2 id="v1.0.47.00">1.0.47 - 19. Juni 2007</h2>
<p>Hinzugefügt: <a href="Functions.htm#lib">Funktionsbibliotheken</a> werden ab sofort unterstützt, mit denen ein Skript eine Funktion aus einer externen Datei aufrufen kann, ohne <a href="lib/_Include.htm">#Include</a> verwenden zu müssen.</p>
<p>Hinzugefügt: <a href="lib/RegisterCallback.htm">RegisterCallback()</a> erstellt eine Maschinencode-Adresse, die, wenn aufgerufen, den Aufruf an eine Funktion im Skript weiterleitet. [entwickelt von Jonathan Rennison (JGR)]</p>
<p>Hinzugefügt: <a href="lib/NumGet.htm">NumGet()</a> und <a href="lib/NumPut.htm">NumPut()</a> können Binärzahlen viel schneller abrufen/speichern als Extract/InsertInteger.</p>
<p>Verbessert: <a href="lib/Sort.htm#callback">Sort</a> hat nun eine Option, um benutzerdefiniertes Sortieren nach den Kriterien in einer Rückruffunktion durchzuführen. [danke Laszlo]</p>
<p>Verbessert: <a href="lib/OnMessage.htm">OnMessage()</a> hat nun eine Option, um mehr als einen <a href="misc/Threads.htm">Thread</a> gleichzeitig zu erlauben. [danke JGR]</p>
<p>Verbessert: Critical hat nun eine Option, um das <a href="lib/Critical.htm#Interval">Meldungsüberprüfintervall</a> zu ändern, was die Zuverlässigkeit in einigen Fällen verbessern könnte. [danke Majkinetor und JGR]</p>
<p>Geändert: <a href="lib/Critical.htm">Critical</a> setzt nun <a href="lib/SetBatchLines.htm">SetBatchLines -1</a> in Kraft.</p>
<p>Geändert: Fehlermeldungen von <a href="lib/_ErrorStdOut.htm">#ErrorStdOut</a> enthalten nun ein Leerzeichen vor dem Doppelpunkt. [danke Toralf]</p>
<p>Behoben: <a href="lib/OnMessage.htm">OnMessage()-Funktionen</a>, die eine eigene lokale Variable zurückgeben, geben nun die Zahl in dieser Variable zurück, nicht 0.</p>
<p>Behoben: Interne Variablen, die auf die Registry zugreifen (z.B. A_AppData, A_Desktop, A_MyDocuments, A_ProgramFiles), verursachen keinen Absturz mehr. [danke Tekl]</p>

<h2 id="v1.0.46.17">1.0.46.17 - 31. Mai 2007</h2>
<p>Behoben: <a href="Variables.htm#UserName">A_UserName</a> (fehlerhaft seit 1.0.46.16).</p>

<h2 id="v1.0.46.16">1.0.46.16 - 30. Mai 2007</h2>
<p>Behoben: <code><a href="lib/GuiControls.htm#Tab">Gui, Tab, TabName</a></code> nach vorherigem <code>Gui Tab</code>. [danke Toralf]</p>
<p>Verbessert: SetTimer behandelt <a href="lib/SetTimer.htm#Period">negative Perioden</a> ab sofort als "nur einmal ausführen". [danke Majkinetor]</p>
<p>Hinzugefügt: <a href="lib/GuiControlGet.htm#Hwnd">GuiControlGet Hwnd</a> ist eine modulare/dynamische Methode, um die HWND-Nummer eines Steuerelements abzurufen. [danke Majkinetor]</p>
<p>Hinzugefügt: Die internen Variablen <a href="Variables.htm#ThisLabel">A_ThisLabel</a> und <a href="Variables.htm#ThisFunc">A_ThisFunc</a> enthalten die Namen des/der aktuell ausgeführten Labels/Funktion. [danke Titan &amp; Majkinetor]</p>

<h2 id="v1.0.46.15">1.0.46.15 - 9. Mai 2007</h2>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl</a>, <a href="lib/GuiControlGet.htm">GuiControlGet</a> und <code>Gui <a href="lib/ListView.htm#GuiLV">ListView</a>/<a href="lib/TreeView.htm#GuiTV">TreeView</a></code> unterstützen nun <a href="Functions.htm#static">statische Variablen</a> und <a href="Functions.htm#ByRef">ByRefs</a>, die auf globale/statische Variablen verweisen. [danke Peter]</p>
<p>Behoben: <a href="lib/FileInstall.htm">FileInstall</a> bewirkt nicht länger, dass der <a href="lib/Random.htm">Random</a>-Befehl seine Zufallsgenerierung in <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a> verliert. [danke Velocity]</p>
<p>Verbessert: Die Größe von <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a> wurde um ca. 16 KB reduziert (wegen UPX 3.0). [danke atnbueno für die Entdeckung der optimalen Befehlszeilenoptionen]</p>

<h2 id="v1.0.46.14">1.0.46.14 - 2. Mai 2007</h2>
<p>Hinzugefügt: Der Installer hat nun das requireAdministrator-Flag, um ein Warndialogfenster in Windows Vista zu verhindern. [danke Roussi Nikolov]</p>

<h2 id="v1.0.46.13">1.0.46.13 - 1. Mai 2007</h2>
<p>Behoben: <a href="Hotkeys.htm">Hotkeys</a> wie <code>*x::</code> werden nun auch ausgelöst, wenn <strong>x</strong> ein Hotkey ist, dessen Auslösung via <a href="lib/_IfWinActive.htm">#IfWin</a> unterdrückt wurde. [danke Joy2DWorld &amp; Engunneer]</p>
<p>Verbessert: <a href="Functions.htm#optional">Optionale Parameter</a> akzeptieren nun direkt geschriebene bzw. in Anführungszeichen gesetzte Zeichenketten als Standardwerte.</p>
<p>Verbessert: <a href="Functions.htm#ByRef">ByRef-Parameter</a> können nun <a href="Functions.htm#optional">optional</a> sein (d.h. sie können Standardwerte akzeptieren). [danke Corrupt]</p>

<h2 id="v1.0.46.12">1.0.46.12 - 24. April 2007</h2>
<p>Behoben: In der wissenschaftlichen Schreibweise werden nun auch direkt geschriebene Zahlen erkannt, die mit einer 0 beginnen (z.B. 0.15e+1). [danke Laszlo]</p>

<h2 id="v1.0.46.11">1.0.46.11 - 23. April 2007</h2>
<p>Behoben: <a href="Functions.htm">Funktionsaufrufe</a> können nun das erste Element in bestimmten <a href="Variables.htm#comma">kommagetrennten Ausdrücken</a> sein. [danke Majkinetor]</p>
<p>Behoben: FensterTitel wie <code class="no-highlight">ahk_id %StrlmntHwnd%</code> in <a href="lib/ControlGet.htm">ControlGet FindString/Choice/List</a>, und <a href="lib/Control.htm">Control Add/Delete/Choose</a>. [danke Freighter &amp; PhiLho]</p>
<p>Verbessert: Die wissenschaftliche Schreibweise unterstützt nun Floating-Point-Zahlen; z.B. 1.2e-5 (der Dezimalpunkt ist zwingend erforderlich). Zudem hat "<a href="lib/SetFormat.htm#sci">SetFormat Float</a>" nun eine Option, um die Ausgabe in wissenschaftlicher Schreibweise darzustellen. [danke Laszlo]</p>

<h2 id="v1.0.46.10">1.0.46.10 - 22. März 2007</h2>
<p>Behoben: <a href="lib/StringSplit.htm">StringSplit</a> erstellt nun innerhalb von Assume-Local-<a href="Functions.htm">Funktionen</a> ein lokales <a href="misc/Arrays.htm">Array</a>, selbst wenn AusgabeArray0 global statt lokal vorhanden ist. [danke KZ]</p>
<p>Verbessert: Die <a href="lib/ListView.htm#ItemChanged">Elementänderungsbenachrichtigung ("I") von ListView</a> zeigt nun via ErrorLevel an, ob das Element aus-/abgewählt, fokussiert/unfokussiert und/oder ein-/ausgeschaltet ist. [danke foom]</p>
<p>Hinzugefügt: Eine zusätzliche Sicherheitsstufe für <a href="Scripts.htm#ahk2exe">kompilierte Skripte</a>. Es wird empfohlen, Skripte mit sensiblen Daten oder Quellcode via <a href="Scripts.htm#ahk2exeCmd">/NoDecompile-Option</a> neu zu kompilieren.</p>

<h2 id="v1.0.46.09">1.0.46.09 - 4. März 2007</h2>
<p>Behoben: Tief in Ausdrücken befindliches <code><a href="lib/SetExpression.htm">:=</a></code>, das verwendet wird, um einer <a href="Functions.htm#Local">lokalen Variable</a> das Ergebnis einer rekursiven <a href="Functions.htm">Funktion</a> zuzuweisen (fehlerhaft seit 1.0.46.06). [danke Laszlo]</p>
<p>Behoben: Bestimmte <a href="Variables.htm#ternary">ternäre Ausdrücke</a> können nun an <a href="Functions.htm#ByRef">ByRef-Parameter</a> übergeben werden. [danke Titan]</p>
<p>Behoben: <code><a href="lib/GuiControlGet.htm">GuiControlGet</a>, AusgabeVar, Pos</code> macht AusgabeVar nicht mehr leer. [danke PhiLho]</p>
<p>Geändert und behoben: Die Fortsetzungsbereichsoption <a href="Scripts.htm#CommentOption">Comments</a> erzwingt nicht mehr das automatische Inkrafttreten der <a href="Scripts.htm#LTrim">LTrim</a>-Option. [danke Titan]</p>
<p>Geändert: <a href="https://learn.microsoft.com/cpp/build/reference/tsaware-create-terminal-server-aware-application">Terminal-Server-Awareness-Flag</a> wurde bei AutoHotkey.exe und kompilierten Skripten wieder "deaktiviert". Diese Änderung verbessert die Flexibilität und Abwärtskompatibilität (siehe <a href="https://www.autohotkey.com/board/topic/14700-">Diskussion</a> im Forum).</p>

<h2 id="v1.0.46.08">1.0.46.08 - 7. Februar 2007</h2>
<p>Behoben: <a href="Variables.htm#ComSpec">ComSpec</a> und <a href="Concepts.htm#environment-variables">Umgebungsvariablen</a> funktionieren nun zuverlässiger in Windows 9x (fehlerhaft seit v1.0.46.07). [danke Loriss]</p>
<p>Geändert: Wenn AutoHotkey.exe gestartet wird, ohne dass ein Skript angegeben wurde, wird nun AutoHotkey.ahk im <a href="Variables.htm#MyDocuments">Dokumente</a>-Ordner ausgeführt (oder bei Nachfrage erstellt). Die einzige Ausnahme ist, wenn AutoHotkey.ini im Arbeitsverzeichnis vorhanden ist, dann wird das alte Verhalten zum Ausführen dieser Datei verwendet.</p>
<p>Verbessert: <a href="lib/DllCall.htm">DllCall</a> unterstützt nun einen Integer anstelle des Funktionsnamens, der als Adresse einer Funktion zum Aufrufen interpretiert wird. [danke Sean]</p>

<h2 id="v1.0.46.07">1.0.46.07 - 23. Januar 2007</h2>
<p>Behoben: Falsch benannte <a href="misc/Arrays.htm">dynamische Variablen</a> auf der linken Seite einer Gleichheitszeichen-Zuweisung verursachen keinen Absturz mehr (fehlerhaft seit v1.0.45). [danke PhiLho]</p>
<p>Behoben: Die "Option 2" von <a href="lib/FileMoveDir.htm">FileMoveDir</a> funktioniert nun wie vorgesehen, wenn das Verzeichnis sowohl umbenannt als auch verschoben wurde. [danke bugmenot]</p>
<p>Behoben: Eine Variable kann nun per Referenz (<a href="Functions.htm#ByRef">ByRef</a>) übergeben werden, wenn derselbe Ausdruck von leer auf nicht-leer geändert wurde (in Abwesenheit von <a href="lib/_NoEnv.htm">#NoEnv</a>). [danke Joy2DWorld]</p>
<p>Geändert: <a href="lib/DllCall.htm#LastError">A_LastError</a> von DllCall spiegelt nun nur noch die vom Skript durchgeführten Änderungen wider, nicht mehr die von AutoHotkey selbst. [danke Azerty]</p>

<h2 id="v1.0.46.06">1.0.46.06 - 16. Januar 2007</h2>
<p>Aktualisiert: PCRE von 6.7 auf 7.0, das kleine Fehlerbehebungen und Verbesserungen für <a href="misc/RegEx-QuickRef.htm">reguläre Ausdrücke</a> beinhaltet. Eine der wichtigsten Verbesserungen ist die "`a"-Option, mit der alle Zeilenumbruchvarianten erkannt werden können (nämlich `r, `n oder `r`n). Entsprechend bedeutet die \R-Escapesequenz "ein einzelnes Zeilenumbruchzeichen beliebiger Art". Siehe auch: <a href="http://www.pcre.org/changelog.txt">Ausführliches PCRE-Changelog</a></p>
<p>Geändert und behoben: Alle <a href="lib/Control.htm">Steuerelement-Befehle</a> und <a href="lib/StatusBarWait.htm">StatusBarWait</a> berücksichtigen nun <a href="lib/SetTitleMatchMode.htm#RegEx">SetTitleMatchMode RegEx</a> wie dokumentiert.</p>
<p>Geändert: <a href="lib/RegExReplace.htm">RegExReplace()</a> gibt bei Misserfolg nun die originale/unveränderte Zeichenkette statt "" zurück.</p>
<p>Geändert: <a href="https://learn.microsoft.com/cpp/build/reference/tsaware-create-terminal-server-aware-application">Terminal-Server-Awareness-Flag</a> bei AutoHotkey.exe und <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a> aktiviert.</p>
<p>Verbessert: Höhere Performanz beim <a href="Variables.htm#AssignOp">Zuweisen</a> von langen Zeichenketten, die von <a href="Functions.htm">benutzerdefinierten Funktionen</a> zurückgegeben werden. [danke Laszlo]</p>

<h2 id="v1.0.46.05">1.0.46.05 - 4. Januar 2007</h2>
<p>Behoben: Der <a href="lib/Input.htm">Input-Befehl</a> verhindert nicht länger, dass benannte Endungstasten wie {F9} beim Gedrückthalten der UMSCHALT-Taste funktionieren (fehlerhaft seit v1.0.45). [danke Halweg]</p>
<p>Behoben: "<a href="lib/Gui.htm#Show">Gui Show</a>" kann nun das GUI-Fenster fokussieren, wenn das Tray-Menü sowohl zum Neuladen des Skripts als auch zum Anzeigen des GUI-Fensters verwendet wird. [danke Rnon]</p>
<p>Behoben: Einige Typen von <a href="Variables.htm#AssignOp">Zuweisungen (:=)</a> konnten nicht an einen <a href="Functions.htm#ByRef">ByRef</a>-Parameter übergeben werden. [danke Laszlo]</p>

<h2 id="v1.0.46.04">1.0.46.04 - 2. Januar 2007</h2>
<p>Behoben: Das Ergebnis einer <a href="Variables.htm#AssignOp">Zuweisung (:=)</a> konnte nicht an einen <a href="Functions.htm#ByRef">ByRef</a>-Parameter übergeben werden. [danke Titan]</p>

<h2 id="v1.0.46.03">1.0.46.03 - 18. Dezember 2006</h2>
<p>Behoben: Die Floating-Point-Sortierung von <a href="lib/ListView.htm">ListView</a> erzeugt nun die korrekte Reihenfolge. [danke oldbrother/Goyyah/Laszlo]</p>

<h2 id="v1.0.46.02">1.0.46.02 - 17. Dezember 2006</h2>
<p>Behoben: <a href="Concepts.htm#environment-variables">Umgebungsvariablen</a> funktionieren nun korrekt als Eingabevariablen bei verschiedenen Befehlen wie <a href="lib/StringLen.htm">StringLen</a> und <a href="lib/StringReplace.htm">StringReplace</a> (fehlerhaft seit 1.0.44.14). [danke Camarade_Tux]</p>

<h2 id="v1.0.46.01">1.0.46.01 - 15. Dezember 2006</h2>
<p class="note"><strong>HINWEIS:</strong> Obwohl diese Version ausgiebig getestet wurde, wurden mehrere Low-Level-Verbesserungen vorgenommen. Wenn Sie wichtige Skripte haben, ist es ratsam, diese erneut zu testen und/oder einige Wochen zu warten, bis eventuelle Bugs behoben sind.</p>
<p>Behoben: Kommagetrennte <a href="Functions.htm#DeclareInit">Deklarationsinitialisierungen</a> wie <code>local x = 1, y = 2</code> funktionieren nun auch, wenn sie direkt unter einer If/Else/Loop-Anweisung sind.</p>
<p>Behoben: Wenn bei <a href="Variables.htm#comma">kommagetrennten Ausdrücken</a> das ganz linke Element eine Zuweisung ist, erfolgt es nicht nach, sondern vor den anderen. [danke Laszlo]</p>
<p>Geändert und behoben: Alle von <a href="Functions.htm">Funktionsaufrufen</a> vorgenommenen Änderungen an <a href="Variables.htm#ref">dynamischen Variablennamen</a>, <a href="Concepts.htm#environment-variables">Umgebungsvariablen</a> und <a href="Variables.htm#BuiltIn">internen Variablen</a> (z.B. <a href="misc/Clipboard.htm">Clipboard</a>) sind nun immer sichtbar für nachfolgende Teile des Ausdrucks, der diese aufgerufen hat.</p>
<p>Geändert: Wenn direkt nach einem <a href="Variables.htm#comma">Mehrfachanweisungskomma</a> eine Variable und ein Gleichheitszeichen erfolgt, wird das Gleichheitszeichen automatisch als <a href="lib/SetExpression.htm">Doppelpunkt-Gleich-Zuweisung (:=)</a> behandelt. Zum Beispiel enthält Folgendes nur Zuweisungen: <code>x:=1, y=2, a=b=c</code>.</p>
<p>Geändert: <a href="Variables.htm#comma">Kommagetrennte Ausdrücke</a> haben nun folgende Auswirkungen: 1) Der "<strong>/=</strong>"-Operator ganz links ist nun eine <a href="Variables.htm#divide">echte Division</a>, nicht mehr <a href="lib/EnvDiv.htm">EnvDiv</a>; 2) Leere Werte werden in mathematischen Ausdrücken nicht mehr als 0 behandelt (d.h. sie liefern leere Ergebnisse).</p>
<p>Verbessert: <a href="Variables.htm#Expressions">Ausdrücke</a> sind um 5 bis 20&nbsp;% performanter (abhängig vom Typ).</p>
<p>Verbessert: <a href="Variables.htm#AssignOp">Neue Zuweisungsoperatoren wie <strong>.=</strong></a> unterstützen nun die <a href="misc/Clipboard.htm">Clipboard-Variable</a> (auch in <a href="Variables.htm#comma">kommagetrennten Ausdrücken</a>).</p>
<p>Verbessert: Der <a href="Variables.htm#AssignOp">"<strong>.=</strong>"-Operator</a> benötigt kein Leerzeichen mehr auf der linken Seite.</p>
<p>Verbessert: GUI-Steuerelemente akzeptieren nun <a href="Functions.htm#static">statische Variablen</a> als ihre <a href="lib/Gui.htm#var">zugeordneten Variablen</a> (vorher waren nur globale Variablen möglich).</p>
<p>Hinzugefügt: <a href="lib/Gui.htm#HwndOutputVar">HwndAusgabeVar</a>-Option für <code>Gui Add</code>, die die HWND-Nummer eines Steuerelements in AusgabeVar speichert. [danke Corrupt &amp; Toralf]</p>

<h2 id="v1.0.46.00">1.0.46 - 29. November 2006</h2>
<p class="note"><strong>HINWEIS:</strong> Obwohl diese Version ausgiebig getestet wurde und voraussichtlich keine bestehenden Skripte unbrauchbar machen wird, wurden mehrere Low-Level-Verbesserungen vorgenommen. Wenn Sie wichtige Skripte haben, ist es ratsam, diese erneut zu testen und/oder einige Wochen zu warten, bis eventuelle Bugs behoben sind.</p>
<p>Hinzugefügt: <a href="lib/SubStr.htm">SubStr()</a>, das eine bestimmte Anzahl von Zeichen an einer bestimmten Position in der Zeichenkette abrufen kann.</p>
<p>Hinzugefügt: Neue Zuweisungsoperatoren <a href="Variables.htm#AssignOp">//=, <strong>.</strong>=, |=, &amp;=, ^=, &gt;&gt;= und &lt;&lt;=</a>, die überall in Ausdrücken verwendet werden können. Zum Beispiel fügt <code>Var .= "abc"</code> die Zeichenkette "abc" an den aktuellen Inhalt der <em>Variable</em> an.</p>
<p>Hinzugefügt: Die Operatoren <a href="Variables.htm#AssignOp">:=, ++, --, +=, -=, *= und /=</a> werden nun vollständig in Ausdrücken unterstützt (vorher konnten sie nur als Operator ganz links in der Zeile verwendet werden). Alle <a href="Variables.htm#AssignOp">Zuweisungsoperatoren</a> (insbesondere <a href="Variables.htm#IncDec">++ und --</a>) verhalten sich wie in C, wenn ihr Ergebnis von einem anderen Operator verwendet wird.</p>
<p>Hinzugefügt: <a href="Variables.htm#ternary">Ternärer Operator (?:)</a> als Kurzschreibweise für eine <a href="lib/IfExpression.htm">if-else-Anweisung</a>. Zum Beispiel würde <code>var := x&gt;y ? 2 : 3</code> den Wert 2 zuweisen, wenn x größer als y ist; andernfalls würde es den Wert 3 zuweisen.</p>
<p>Hinzugefügt: Ab sofort werden <a href="Variables.htm#comma">kommagetrennte Ausdrücke</a> unterstützt, die eine einzelne Zeile mit mehreren Zuweisungen, Funktionsaufrufen und sonstige Ausdrücken ermöglichen. [danke PhiLho &amp; Titan]</p>
<p>Verbessert: <a href="Functions.htm#DeclareInit">Variablendeklarationen</a> unterstützen nun Initialisierungen auf derselben Zeile. Hinweis: Die Initialisierung einer <a href="Functions.htm#static">statischen Variable</a> erfolgt nur einmal vor Beginn der Skriptausführung.</p>
<p>Verbessert: <a href="Scripts.htm#continuation">Zeilenfortsetzung</a> unterstützt nun alle Ausdrucksoperatoren. Zum Beispiel würde eine Zeile, die mit "?" oder "+" beginnt, automatisch mit der darüber liegenden Zeile verbunden.</p>
<p>Verbessert: Die Operatoren <a href="Variables.htm#concat">"<strong>.</strong>"</a> und <a href="Variables.htm#concat">"<strong>.=</strong>"</a> sind nun performanter, so dass sie genauso schnell sind wie die Prozentzeichen-Methode zum Anfügen einer Zeichenkette.</p>
<p>Verbessert: Ausdrücke unterstützen nun mehr Typen von <a href="Variables.htm#unary">aufeinanderfolgenden unären Operatoren</a> wie <strong>!!</strong>Var. [danke Laszlo]</p>
<p>Geändert: <a href="lib/Critical.htm">Critical</a> überprüft Meldungen nicht mehr so oft (20&nbsp;ms statt 10&nbsp;ms), was die Zuverlässigkeit von häufig aufgerufenen <a href="lib/OnMessage.htm">OnMessage-Funktionen</a> verbessert. [danke Majkinetor]</p>
<p>Geändert: Eine Variable mit dem Namen "?" ist aufgrund des neuen <a href="Variables.htm#ternary">ternären Operators</a> in Ausdrücken nicht mehr gültig.</p>
<p>Behoben: <a href="Hotkeys.htm">Hotkeys</a> unterstützen nun <code>:::</code> (einen Doppelpunkt als Hotkey) und <code>: &amp; x::</code> (einen Doppelpunkt als <a href="Hotkeys.htm#combo">Hotkey-Präfix</a>).</p>
<p>Behoben: Der Installer entfernt nun psapi.dll aus dem AutoHotkey-Ordner (außer in Windows NT4). Diese Änderung verhindert einen Konflikt mit dem Internet Explorer 7. [Danke an alle, die das gemeldet haben]</p>

<h2 id="v1.0.45.04">1.0.45.04 - 15. November 2006</h2>
<p>Behoben: In Windows 9x kommt es nicht länger zum Absturz, wenn ein Skript gerade nicht läuft (z.B. wegen eines Syntaxfehlers) (fehlerhaft seit v1.0.45). [danke rogerg]</p>
<p>Geändert: <a href="lib/Control.htm">Control Style|ExStyle</a> meldet nun ErrorLevel 0 statt 1, wenn die angeforderte Style-Änderung bereits durchgeführt wurde.</p>
<p>Verbessert: <a href="lib/_Include.htm">#Include</a> unterstützt nun <a href="Variables.htm#AppData">%A_AppData%</a> und <a href="Variables.htm#AppDataCommon">%A_AppDataCommon%</a>. [danke Tekl]</p>

<h2 id="v1.0.45.03">1.0.45.03 - 12. November 2006</h2>
<p>Behoben: <a href="lib/LoopFile.htm">Datei-Schleifen</a> verursachen keinen Absturz mehr, wenn sie beim rekursiven Durchwandern auf einen Pfad stoßen, der länger als 259 Zeichen ist. Darüber hinaus werden solche Pfade und Dateien nun von Datei-Schleifen, <a href="lib/FileSetAttrib.htm">FileSetAttrib</a> und <a href="lib/FileSetTime.htm">FileSetTime</a> ignoriert (übersprungen). [danke PhilR]</p>
<p>Behoben: <a href="Functions.htm">Funktionen</a> können sich nun selbst aufrufen und das Ergebnis einer ihrer <a href="Functions.htm#Local">lokalen Variablen</a> zuweisen (fehlerhaft seit v1.0.45). [danke bjennings]</p>
<p>Behoben: Es kommt nicht mehr zu Abstürzen, wenn Skripte <a href="misc/RegEx-QuickRef.htm">reguläre Ausdrücke</a> mit Kompilierungsfehlern enthalten. [danke PhiLho]</p>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl</a> konvertiert <a href="lib/GuiControls.htm#CheckBox">CheckBoxen</a> nicht mehr unaufgefordert in den dritten Zustand. [danke JBensimon]</p>
<p>Geändert: <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a> sendet nun "AutoHotkey" statt einer leeren Zeichenkette als User-Agent an den Server. [danke jaco0646]</p>
<p>Verbessert: <a href="Scripts.htm#continuation">Fortsetzungsbereiche</a> unterstützen nun Semikolon-Kommentare innerhalb des Bereichs mithilfe des Optionswortes <em>Comments</em>.</p>

<h2 id="v1.0.45.02">1.0.45.02 - 8. November 2006</h2>
<p>Behoben: <a href="lib/StringLower.htm">StringUpper</a> und <a href="lib/StringLower.htm">StringLower</a> funktionieren nun auch, wenn AusgabeVar die Zwischenablage (Clipboard) ist (fehlerhaft seit v1.0.45). [danke songsoverruins]</p>
<p>Behoben: Die Hotkeys ~Alt, ~Control und ~Shift werden nun beim Drücken und nicht mehr beim Loslassen ausgelöst (fehlerhaft seit v1.0.44).<br>
Hintergrund: Wenn das Tilde-Zeichen nicht angegeben ist, werden ALT/STRG/UMSCHALT beim Loslassen ausgelöst, um die Übernahme der linken und rechten Taste zu verhindern. Aber ein bestimmter linker/rechter Hotkey wie LAlt oder RShift wird beim Drücken ausgelöst.</p>

<h2 id="v1.0.45.01">1.0.45.01 - 7. November 2006</h2>
<p>Behoben: <a href="lib/FileReadLine.htm">FileReadLine</a> und <a href="lib/FileSelectFile.htm">FileSelectFile</a> verursachten einen Absturz oder verhielten sich falsch, wenn sie von anderen <a href="misc/Threads.htm">Threads</a> unterbrochen werden (fehlerhaft seit v1.0.45). [danke toralf]</p>
<p>Behoben: <a href="lib/RegExMatch.htm">RegExMatch()</a> setzt nun bei Nichtübereinstimmung benannte Teilsuchmuster korrekt auf "" im Ausgabe-Array. [danke PhiLho]</p>
<p>Behoben: Die "J"-Option von <a href="lib/RegExMatch.htm">RegExMatch()</a> schreibt nun doppelte benannte Teilsuchmuster korrekt in das Ausgabe-Array. [danke PhiLho]</p>
<p>Geändert: <a href="lib/SetWorkingDir.htm">SetWorkingDir</a> und <a href="lib/_Include.htm">#Include VerzName</a> funktionieren nun auch mit Stammverzeichnissen wie C: ohne umgekehrten Schrägstrich.</p>
<p>Verbessert: <a href="lib/DllCall.htm">DllCall()</a> zeigt nun ein Warndialogfenster an, wenn die aufgerufene Funktion etwas in eine Variable mit 0 Kapazität schreibt.</p>

<h2 id="v1.0.45.00">1.0.45 - 4. November 2006</h2>
<p class="note"><strong>Hinweis:</strong> Obwohl diese Version ausgiebig getestet wurde und voraussichtlich keine bestehenden Skripte unbrauchbar machen wird, wurden mehrere performanzbezogene Low-Level-Verbesserungen vorgenommen. Wenn Sie wichtige Skripte haben, ist es ratsam, diese erneut zu testen und/oder einige Wochen zu warten, bis eventuelle Bugs behoben sind.</p>
<p>Hinzugefügt: <a href="misc/RegEx-QuickRef.htm">Reguläre Ausdrücke</a> werden nun via <a href="lib/RegExMatch.htm">RegExMatch()</a>, <a href="lib/RegExReplace.htm">RegExReplace()</a> und <a href="lib/SetTitleMatchMode.htm#RegEx">SetTitleMatchMode RegEx</a> unterstützt. [danke Philip Hazel &amp; PhiLho]</p>
<p>Verbessert: <a href="lib/StringReplace.htm">StringReplace</a> ist nun performanter und speichersparender.</p>
<p>Verbessert: Bei Ausdrücken und Funktionen, die eine lange Zeichenkette enthalten, ist der <a href="lib/SetExpression.htm">Doppelpunkt-Gleich-Operator (:=)</a> nun performanter.</p>
<p>Verbessert: <a href="lib/ControlClick.htm">ControlClick</a> hat nun eine neue Option "NA", die das Aktivieren des Zielfensters verhindert (dieser Modus verbessert in einigen Fällen auch die Zuverlässigkeit). Darüber hinaus ist nun dokumentiert, dass <a href="lib/SetControlDelay.htm">SetControlDelay -1</a> die Zuverlässigkeit von ControlClick in einigen Fällen verbessern kann. [danke nnesori]</p>
<p>Geändert: <a href="lib/GuiControls.htm#Button">GUI-Schaltflächen</a> verwenden nun standardmäßig <a href="lib/Gui.htm#Wrap">"keinen Zeilenumbruch"</a>, wenn keine Breite, Höhe oder Zeilenumbruchzeichen angegeben sind. Dies kann Probleme bei der Darstellung von Schaltflächen in bestimmten Desktop-Themen beheben.</p>
<p>Behoben: "<a href="lib/Transform.htm#HTML">Transform HTML</a>" bei folgenden Zeichen: &amp;`n&gt;&lt;</p>
<p>Behoben: Zeilen, die mit "if not is" beginnen (z.B. "if not <strong>Ist</strong>Fertig"), werden nicht mehr fehlinterpretiert.</p>
<p>Behoben: "<a href="lib/Gui.htm#Show">Gui Show</a>" kann ein Fenster nun vertikal nach unten verschieben, und zwar dorthin, wo sich aktuell dessen unterste Pixelreihe befindet.</p>
<p>Behoben: <a href="lib/GroupActivate.htm">GroupActivate</a> kann nun als einzige Zeile unterhalb von IF oder ELSE verwendet werden.</p>
<p>Behoben: Der <a href="lib/Input.htm">Input-Befehl</a> kann nun zwischen Endungstasten, die von geschweiften Klammern umschlossen sind, und ihren UMSCHALT-modifizierten (oder unmodifizierten) Gegenstücken unterscheiden; z.B. '{' vs. '['. [danke Laszlo]</p>

<span id="Older_Changes"></span>
<h2 id="v1.0.44.14">1.0.44.14 - 2. Oktober 2006</h2>
<p class="note"><strong>Hinweis:</strong> Obwohl diese Version ausgiebig getestet wurde und voraussichtlich keine bestehenden Skripte unbrauchbar machen wird, wurden mehrere performanzbezogene Low-Level-Verbesserungen vorgenommen. Wenn Sie wichtige Skripte haben, ist es ratsam, diese erneut zu testen und/oder einige Wochen zu warten, bis eventuelle Bugs behoben sind.</p>
<p>Behoben: <a href="Variables.htm#loop">Schleifenvariablen</a> wie A_Index, auf die in mehr als einem Parameter einer Zeile zugegriffen wird. Die Ungenauigkeit trat nur auf, wenn einer dieser Parameter eine <a href="Functions.htm">Funktion</a> aufrief, die direkt aus dem Körper einer Schleife zurückkehrte. [danke NumEric]</p>
<p>Geändert: <a href="lib/ListVars.htm">ListVars</a> zeigt nun <a href="Functions.htm#ByRef">ByRef-Parameter</a> mit ihrem eigenen Namen an, nicht mehr mit dem Namen des Aufrufers.</p>
<p>Geändert: Der <a href="lib/Input.htm">Input-Befehl</a> hat unter Windows 9x keine Wirkung (nicht einmal ErrorLevel und AusgabeVar werden gesetzt).</p>
<p>Geändert: Das Limit für die Anzahl der <a href="lib/Gui.htm#Font">GUI-Schriftarten</a> wurde von 100 auf 200 erhöht. [danke philou]</p>
<p>Geändert: <a href="Functions.htm#StrLen">StrLen()</a>/<a href="lib/StringLen.htm">StringLen</a> und die interne Behandlung von Zeichenketten wurden geändert, um die Längenberechnung von Zeichenketten möglichst zu vermeiden. Obwohl dies die Performanz verbessert (insbesondere bei langen Zeichenketten), sollten Skripte, die mit <a href="lib/DllCall.htm">DllCall</a> eine Zeichenkette per <a href="Variables.htm#amp">Adressoperator (&amp;)</a> statt als <a href="lib/DllCall.htm#str">Str-Parameter</a> übergeben, <a href="lib/VarSetCapacity.htm#neg1">VarSetCapacity(Var, -1)</a> aufrufen, um die intern gespeicherte Länge zu korrigieren (falls sie sich geändert hat).</p>
<p>Geändert: Performanz geringfügig verbessert (zusätzlich zur StrLen-Verbesserung).</p>

<h2 id="v1.0.44.13">1.0.44.13 - 20. September 2006</h2>
<p>Behoben: <a href="lib/ControlGetPos.htm">ControlGetPos</a> und <a href="lib/ControlMove.htm">ControlMove</a> funktionieren jetzt mit <code class="no-highlight">ahk_id %StrlmntHWND%</code>. [danke Hardeep]</p>
<p>Behoben: <a href="lib/_CommentFlag.htm">#CommentFlag</a> wirkt sich nun auch auf die Zeile darunter aus. [danke PhiLho]</p>
<p>Geändert: <a href="Variables.htm#OSVersion">A_OSVersion</a> gibt nun "WIN_VISTA" statt "" für Windows Vista zurück.</p>
<p>Hinzugefügt: Optionen zum Festlegen der <a href="lib/Gui.htm#MinSize">minimalen/maximalen Größe</a> von GUI-Fenstern; zum Beispiel: <code>Gui +MinSize320x240 +MaxSize640x480</code></p>

<h2 id="v1.0.44.12">1.0.44.12 - 13. September 2006</h2>
<p>Behoben: <a href="lib/SetTimer.htm">Timer</a> interferieren nicht mehr mit Doppelklicks in <a href="lib/FileSelectFile.htm">FileSelectFile</a>. [danke DJAnonimo]</p>
<p>Behoben: Der <a href="lib/_InstallMouseHook.htm">Maus-Hook</a> verursacht beim Drücken einer Schaltfläche in der Titelleiste eines GUI-Fensters keine Verzögerung mehr. [danke Tekl]</p>
<p>Verbessert: <a href="lib/Gui.htm">GUI-Fenster</a> haben jetzt CS_DBLCLKS, damit <a href="lib/OnMessage.htm">OnMessage()</a> Doppelklicks über WM_LBUTTONDBLCLK, WM_RBUTTONDBLCLK, und WM_MBUTTONDBLCLK überwachen kann. [danke Hardeep]</p>
<p>Verbessert: ListView unterstützt nun eine <a href="lib/ListView.htm#Logical">logische Sortierung</a>, die Ziffern als Zahlen statt als bloße Zeichen behandelt. [danke Tekl &amp; Hacker]</p>

<h2 id="v1.0.44.11">1.0.44.11 - 9. September 2006</h2>
<p>Behoben: <a href="lib/FileSelectFolder.htm">FileSelectFolder</a> und <a href="lib/TreeView.htm">TreeView</a> reagieren nun korrekt auf Mausklicks, wenn <a href="lib/SetTimer.htm">Timer</a> laufen.</p>
<p>Behoben: <a href="lib/OnMessage.htm">OnMessage()</a> ist nun in der Lage, bestimmte Meldungen wie WM_NOTIFY konsistent zu überwachen. [danke numEric]</p>
<p>Behoben: Direkt geschriebene bzw. in Anführungszeichen gesetzte Zeichenketten können nun <code class="no-highlight">`%</code> enthalten.</p>
<p>Behoben: <a href="Scripts.htm#continuation">Fortsetzungsbereiche</a> unterstützen nun <a href="lib/_EscapeChar.htm">#EscapeChar</a>, <a href="lib/_EscapeChar.htm#DerefChar">#DerefChar</a> und <a href="lib/_EscapeChar.htm#Delimiter">#Delimiter</a>. [danke Laszlo]</p>
<p>Geändert: <a href="lib/GuiControls.htm#GroupBox">GroupBox</a> verwendet nun standardmäßig "keinen Zeilenumbruch". Dies kann mit <code class="no-highlight">+Wrap</code> überschrieben werden.</p>
<p>Geändert/verbessert: Der <a href="Variables.htm#pow">Operator **</a> und <a href="lib/Transform.htm">Transform Pow</a> unterstützen nun auch negative Basen, wenn der Exponent nicht gebrochen ist. [danke Laszlo]</p>
<p>Verbessert: <a href="lib/Gui.htm">GUI</a>-Reaktionsfähigkeit während eines <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a>-Vorgangs (insbesondere bei langsamen Downloads).</p>

<h2 id="v1.0.44.10">1.0.44.10 - 27. August 2006</h2>
<p>Behoben: <a href="lib/OnMessage.htm">OnMessage()</a>, wenn es innerhalb einer Überwachungsfunktion aufgerufen wird, um eine andere Überwachung zu deaktivieren. [danke Hardeep]</p>
<p>Geändert/behoben: Die TransN-Option von <a href="lib/ImageSearch.htm">ImageSearch</a> verwendet nun RGB statt BGR, wie dokumentiert. [danke Tom Lorimor]</p>
<p>Behoben: Der Installer verzichtet nun auf das Verb "Run" für .ahk-Dateien. Standardmäßig wird jetzt das Verb "Open" verwendet (mit dem neuen Anzeigenamen "Run Script"). [danke numEric]</p>

<h2 id="v1.0.44.09">1.0.44.09 - 9. August 2006</h2>
<p>Behoben: <a href="Hotkeys.htm#prefixdollar">Hook-Hotkeys</a> wie $^b werden nicht mehr doppelt ausgelöst, wenn ein ähnlicher <a href="Hotkeys.htm#keyup">Taste-Oben-Hotkey</a> existiert (wie <code>#b up::</code>). [danke Newbie]</p>
<p>Behoben: Ein Backspace zu viel in <a href="Hotstrings.htm#Asterisk">Sternchen-Hotstrings</a>, deren vorletztes Zeichen eine tote Taste ist. [danke Henrique]</p>
<p>Behoben: <a href="lib/Gui.htm#Color">Gui Color</a> funktioniert nun auch, wenn die Hintergrundfarbe zuvor auf "Default" geändert wurde. [danke Hardeep]</p>
<p>Geändert: <code>if var <a href="lib/IfIs.htm">is</a> xdigit</code> toleriert jetzt ein 0x-Präfix. [danke Titan]</p>
<p>Hinzufügt: <a href="lib/Gui.htm#PlusLabel">Gui +LabelMyGui</a> zur Unterstützung benutzerdefinierter Labelnamen (z.B. "MeineGuiClose" anstelle von "2GuiClose"). Dies ermöglicht auch, dass mehrere GUI-Fenster denselben Satz von Labels verwenden können. [danke Tekl]</p>

<h2 id="v1.0.44.08">1.0.44.08 - 25. Juli 2006</h2>
<p>Behoben: <a href="lib/Gui.htm#Show">Gui Show</a> entmaximiert ein Fenster nur noch, wenn die Optionen dies erfordern. [danke foom]</p>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl +/-Left/Right</a> bei Button-, CheckBox- und Radio-Steuerelementen. [danke Hardeep]</p>
<p>Behoben: Bei der Erstellung des <a href="lib/GuiControls.htm#UpDown">UpDown</a>-Steuerelements wird sein Buddy nur noch breiter gemacht, wenn der Buddy keine explizite Breite hat. [danke Thalon]</p>
<p>Verbessert: <a href="lib/MsgBox.htm">MsgBox</a>/<a href="lib/IfMsgBox.htm">IfMsgBox</a> unterstützt nun die Schaltflächengruppe "Abbrechen / Wiederholen / Weiter" sowie eine Hilfe-Schaltfläche. [danke jballi]</p>

<h2 id="v1.0.44.07">1.0.44.07 - 17. Juni 2006</h2>
<p>Behoben: Kein Stapelüberlauf mehr, wenn eine <a href="lib/LoopReg.htm">Registry-Schleife</a> tief verschachtelte Unterschlüssel durchläuft. [danke Eggi]</p>
<p>Behoben: Der <a href="lib/Hotkey.htm">Hotkey-Befehl</a> meldet nun ErrorLevel 0 statt 51 bei Erfolg für Joystick-Hotkeys. [danke Roland]</p>
<p>Geändert: <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> schließt nun Formate aus, die den MS-Word-Editor von Outlook dazu veranlassen, Fehlerdialogfenster anzuzeigen. [danke deanhill1971]</p>
<p>Geändert: <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a> wurde verbessert, um die Datei vom Remote-Server statt aus dem Cache abzurufen. Es gibt eine neue Option, um dies zu überschreiben. [danke olfen]</p>
<p>Verbessert: <a href="misc/Remap.htm">Neubelegung</a> unterstützt nun auch Zieltasten, die nicht auf der Tastatur vorhanden sind (z.B. <code>F1::ð</code> in Englisch). [danke DavidT]</p>

<h2 id="v1.0.44.06">1.0.44.06 - 8. Juni 2006</h2>
<p>Behoben: <a href="misc/Remap.htm">Neubelegungen mit Modifikatoren als Zieltasten</a>, wie z.B. <code>F1::Control</code> (fehlerhaft seit v1.0.44.05). [danke formarx]</p>

<h2 id="v1.0.44.05">1.0.44.05 - 7. Juni 2006</h2>
<p>Behoben: Mausbewegungen lagen bei Koordinaten nahe 0 um 1 Pixel daneben (fehlerhaft seit v1.0.43). [danke numEric]</p>
<p>Geändert: <a href="misc/Remap.htm">Neubelegungen mit Modifikatoren als Zieltasten</a> (z.B. <code>F1::Control</code>) wurden verbessert, um die Modifikatoren während anderer <a href="lib/Send.htm">Sends</a> loszulassen.</p>

<h2 id="v1.0.44.04">1.0.44.04 - 31. Mai 2006</h2>
<p>Behoben: Warndialogfenster bzgl. Doppelpunktpaaren beim Start bestimmter Skripte. (fehlerhaft seit v1.0.44.03)</p>
<p>Behoben: <a href="Hotkeys.htm#combo">Kombinations-Hotkeys</a> wie <code>a &amp; b::</code> funktionieren nun auch, wenn <code>b &amp; a::</code> und <code>b &amp; a up::</code> ebenfalls vorhanden sind.</p>
<p>Behoben: Buddylose <a href="lib/GuiControls.htm#UpDown">UpDown</a>-Steuerelemente funktionieren nun auch, wenn ein <a href="lib/GuiControls.htm#StatusBar">StatusBar</a>-Steuerelement vorhanden ist. [danke Titan]</p>

<h2 id="v1.0.44.03">1.0.44.03 - 29. Mai 2006</h2>
<p>Behoben: <a href="Functions.htm#FileExist">FileExist()</a> gibt nun "X" statt "" für Dateien zurück, deren Attribute alle undefiniert sind. [danke Peter]</p>
<p>Behoben: <a href="lib/GuiControls.htm#Tab">Tab-Steuerelemente</a>: Das erste <a href="lib/GuiControls.htm#Text">Text-Steuerelement</a>, das einem neuen Tab hinzugefügt wird, wird nun automatisch richtig positioniert, auch wenn das zuvor hinzugefügte Steuerelement ein Text-Steuerelement auf einem anderen Tab war.</p>
<p>Behoben: <a href="lib/ImageSearch.htm">ImageSearch</a>: Eine transparente Farbe wie TransBlack ist im Variationsmodus nun genauso effektiv wie im Nicht-Variationsmodus. [danke Troz]</p>
<p>Behoben: <a href="lib/GetKeyState.htm">GetKeyState</a> und <a href="lib/KeyWait.htm">KeyWait</a> akzeptieren nun auch Zeichen, die in der aktuellen Tastaturbelegung nicht vorhanden sind (für den Fall, dass sich die Tastaturbelegung nach dem Start des Skripts ändert).</p>
<p>Behoben: <a href="Hotkeys.htm">Hotkeys</a>, die in der aktuellen Tastaturbelegung nicht existieren (wie z.B. <code>^!ä::</code> in Englisch), führen zu einer Warnmeldung und beenden den <a href="Scripts.htm#auto">automatischen Ausführungsbereich</a>. [danke Androgen Belkin]</p>
<p>Geändert: <a href="lib/ControlSend.htm">ControlSend</a>, <a href="lib/Send.htm">Send</a>, <a href="Hotstrings.htm">Hotstrings</a>, <a href="lib/Input.htm">Input</a> und <a href="Hotkeys.htm#AltGr">AltGr</a>-Behandlung wurden so verbessert, dass sie nun die Sprache des Zielfensters verwenden, nicht mehr die des Skripts. Wenn Sie nur eine Tastaturbelegung auf Ihrem System verwenden, sollte dies keinerlei Auswirkungen haben. [danke Androgen Belkin]</p>
<p>Verbessert: <a href="lib/VarSetCapacity.htm#neg1">VarSetCapacity()</a> interpretiert eine Kapazität von -1 nun als "aktualisiere die intern gespeicherte Länge dieser Variable". Dies ist in Situationen nützlich, wo eine Variable indirekt geändert wurde, z.B. durch Übergabe ihrer <a href="Variables.htm#amp">Adresse</a> via <a href="lib/DllCall.htm">DllCall()</a>.</p>

<h2 id="v1.0.44.02">1.0.44.02 - 20. Mai 2006</h2>
<p>Behoben: Hotkeys, die <a href="Hotkeys.htm#combo"><code>&amp;</code></a> und <a href="Hotkeys.htm#Tilde"><code>~</code></a> zusammen verwenden (z.B. <code>~a &amp; b::</code> und <code>~LButton &amp; RButton::</code>) (fehlerhaft seit v1.0.44). [danke SlimlinE &amp; Spike]</p>

<h2 id="v1.0.44.01">1.0.44.01 - 15. Mai 2006</h2>
<p>Behoben: <a href="lib/GuiControls.htm#StatusBar">StatusBar</a> schnappte sich <a href="lib/GuiControls.htm#UpDown">UpDowns</a>, die nach ihm hinzugefügt wurden. [danke Tekl]</p>
<p>Geändert: <a href="Functions.htm#Round">Round()</a> zeigt nun genau N Dezimalstellen an, anstatt <a href="lib/SetFormat.htm">SetFormat</a> zu berücksichtigen.</p>

<h2 id="v1.0.44.00">1.0.44 - 14. Mai 2006</h2>
<p>Behoben: <a href="misc/Clipboard.htm#OnClipboardChange">OnClipboardChange</a> funktioniert jetzt auch, wenn das Skript eine MsgBox oder ein anderes Dialogfenster anzeigt.</p>
<p>Behoben: <a href="lib/FileCreateDir.htm">FileCreateDir</a> meldet nicht mehr ErrorLevel 1, wenn das angegebene Verzeichnis mit <code class="no-highlight">\</code> endet. [danke Wesley]</p>
<p>Behoben: Die <a href="Hotkeys.htm">Hotkeys</a> <code>Control::</code>, <code>Shift::</code> und <code>Alt::</code> werden nun beim Loslassen der Taste ausgelöst, nicht mehr beim Drücken der Taste (fehlerhaft seit v1.0.41).</p>
<p>Behoben: Das <a href="lib/Menu.htm#Icon">Laden</a> von Symbol Nr. 1 aus nicht standardisierten Dateitypen wie .bin.</p>
<p>Behoben: Bei der <a href="lib/ListView.htm">ListView</a>-Erstellung wird nun die von <a href="lib/Gui.htm#Font">Gui Font</a> gesetzte Textfarbe berücksichtigt.</p>
<p>Geändert/behoben: Bei Verwendung des <a href="Hotkeys.htm#Tilde">Hotkey-Tilde-Präfixes (~)</a> werden Hotkeys wie ~Esc und Esc nun als Duplikate behandelt, d.h. es ist nicht mehr möglich, in einem Skript sowohl ~Esc als auch Esc zu definieren, es sei denn, sie haben unterschiedliche <a href="lib/_IfWinActive.htm">#IfWin-Kriterien</a> (in diesem Fall funktionieren ~Esc und Esc nun korrekt). [danke jballi]</p>
<p>Geändert/verbessert: <a href="lib/ListView.htm">ListViews</a>: 1) standardmäßig ist die neue Option <a href="lib/ListView.htm#WantF2">WantF2</a> wirksam, die einen F2-Tastendruck zum Editieren der aktuellen Zeile veranlasst (sofern nicht <a href="lib/ListView.htm#ReadOnly">ReadOnly</a>); 2) <code>LV_Modify(Row, "<a href="lib/ListView.htm#Vis">Vis</a>")</code> wurde hinzugefügt, um eine Zeile in den sichtbaren Bereich zu scrollen; 3) <a href="lib/ListView.htm#Drag">Zieh­benachrichtigungen</a> treten auch ohne AltSubmit auf; 4) <a href="lib/ListView.htm#ItemChanged">Zeilenänderungs­benachrichtigungen</a> setzen A_EventInfo auf die Zeilennummer; 5) ErrorLevel spiegelt nicht mehr <a href="Variables.htm#EventInfo">A_EventInfo</a> in Fällen, wo es nie dokumentiert war, dies zu tun (dasselbe gilt für <a href="lib/Gui.htm#GuiContextMenu">GuiContextMenu</a>).</p>
<p>Verbessert: In <a href="lib/GuiControls.htm#Edit">Edit-Steuerelementen</a> wird nun der gesamte Text markiert, wenn <kbd>Strg</kbd>+<kbd>A</kbd> gedrückt wird. Dies kann mit <code class="no-highlight">-WantCtrlA</code> deaktiviert werden.</p>
<p>Hinzugefügt: Neue GUI-Steuerelemente <a href="lib/TreeView.htm">TreeView</a> und <a href="lib/GuiControls.htm#StatusBar">StatusBar</a>.</p>

<h2 id="v1.0.43.11">1.0.43.11 - 1. Mai 2006</h2>
<p>Behoben: In Windows 9x war <a href="Variables.htm#WorkingDir">%A_WorkingDir%</a> manchmal leer. [danke Points]</p>
<p>Verbessert: <a href="lib/BlockInput.htm#MouseMove">BlockInput</a> hat nun einen neuen Modus, der nur die physische Mausbewegung blockiert, keine Tastendrücke oder Mausklicks.</p>

<h2 id="v1.0.43.10">1.0.43.10 - 28. April 2006</h2>
<p>Verbessert: <a href="lib/PixelGetColor.htm">PixelGetColor</a> hat nun zwei alternative Modi, die in einer breiteren Palette von Fenstern und Vollbildanwendungen funktionieren. [danke TDMedia]</p>
<p>Verbessert: Bei <a href="lib/StringMid.htm">StringMid</a> kann nun <em>Anzahl</em> weggelassen werden, um alle Zeichen abzurufen. [danke kapege.de]</p>
<p>Verbessert: <a href="lib/FileSelectFile.htm">FileSelectFile</a> unterstützt nun spezielle Ordner wie z.B. Arbeitsplatz via <a href="misc/CLSID-List.htm">CLSID-Zeichenketten</a> (<a href="lib/FileSelectFolder.htm">FileSelectFolder</a> und <a href="lib/Run.htm">Run</a> unterstützen dies bereits).</p>

<h2 id="v1.0.43.09">1.0.43.09 - 25. April 2006</h2>
<p>Behoben: <a href="lib/Send.htm#SendInputDetail">SendInput</a> fällt nicht mehr auf <a href="lib/Send.htm#SendEvent">SendEvent</a> zurück, nur weil ein anderes Skript einen Maus-Hook hat. Nur ein anderer <a href="lib/_InstallKeybdHook.htm">Tastatur-Hook</a> sollte dies tun. [danke baby-luck]</p>
<p>Behoben: <a href="lib/ListView.htm#LV_GetCount">LV_GetCount()</a> funktioniert nun auch, wenn das "C" im Namen kleingeschrieben ist.</p>
<p>Geändert: <a href="lib/FileSelectFile.htm">FileSelectFile</a> navigiert bzw. folgt nun Verknüpfungen (.lnk-Dateien), anstatt sie auszuwählen. Es gibt auch eine neue Option, um dies zu überschreiben. [danke Veovis &amp; PhiLho]</p>
<p>Hinzugefügt: Mit <a href="lib/Gui.htm#LastFoundExist">Gui +LastFoundExist</a> kann festgestellt werden, ob ein GUI-Fenster vorhanden ist. [danke Tekl &amp; Evl]</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#AppData">A_AppData</a>, <a href="Variables.htm#AppDataCommon">A_AppDataCommon</a> und <a href="Variables.htm#Temp">A_Temp</a> (A_Temp ist der Ordner für temporäre Dateien).</p>

<h2 id="v1.0.43.08">1.0.43.08 - 17. April 2006</h2>
<p>Geändert: <a href="lib/Send.htm#SendInputDetail">SendInput</a> verwendet nun <code><a href="lib/SetKeyDelay.htm">SetKeyDelay</a> -1, 0</code>, wenn es auf den <a href="lib/Send.htm#SendEvent">SendEvent-Modus</a> zurückfällt (es sei denn, die Tastenverzögerung von SendEvent ist <code>-1,-1</code>, dann wird <code>-1,-1</code> verwendet).</p>
<p>Hinzugefügt: Direktive <a href="lib/_NoEnv.htm">#NoEnv</a>, die aus folgenden Gründen für neue Skripte empfohlen wird:</p>
<ol>
  <li>Sie erhöht deutlich die Performanz, wann immer leere Variablen in einem Ausdruck oder Befehl verwendet werden. Sie erhöht auch die Performanz von <a href="lib/DllCall.htm">DllCall</a>, wenn anführungszeichenlose Parametertypen verwendet werden (z.B. Int statt "Int").</li>
  <li>Sie verhindert Skriptbugs, die durch <a href="Concepts.htm#environment-variables">Umgebungsvariablen</a> verursacht werden, deren Namen unerwartet mit den vom Skript verwendeten Variablen übereinstimmen.</li>
  <li>Eine zukünftige Version von AutoHotkey, z.B. 1.1, könnte dieses Verhalten zum Standard machen (obwohl eine solche Änderung frühestens in einem Jahr zu erwarten ist).</li>
</ol>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#ComSpec">ComSpec</a> und <a href="Variables.htm#ProgramFiles">ProgramFiles</a>, die den Umstieg auf <a href="lib/_NoEnv.htm">#NoEnv</a> erleichtern sollen.</p>
<p>Hinzugefügt: Befehl <a href="lib/EnvGet.htm">EnvGet</a>, mit dem eine Umgebungsvariable abgerufen werden kann.</p>

<h2 id="v1.0.43.07">1.0.43.07 - 12. April 2006</h2>
<p>Behoben: <code><a href="lib/Menu.htm">Menu</a>, Tray, Icon</code> war nicht in der Lage, Symbol Nr. 1 aus den Dateitypen cpl/scr/drv/ocx/vbx/acm/bpl zu laden (fehlerhaft seit v1.0.43.03). Ebenso wurden alle symbolfähigen Funktionen verbessert, um diese Dateitypen zu unterstützen. [danke Winkie &amp; PhiLho]</p>
<p>Behoben: Die folgenden Legacy-Befehle akzeptieren nun <a href="Functions.htm">Funktionsaufrufe</a> mit Kommas: EnvAdd/Sub, LeftClick(Drag), RightClick(Drag). [danke Titan]</p>

<h2 id="v1.0.43.06">1.0.43.06 - 9. April 2006</h2>
<p>Geändert: <a href="misc/WinTitle.htm#ahk_id">ahk_id</a> arbeitet nun direkt mit der angegebenen HWND-Nummer, wenn es sich um ein Steuerelement (oder untergeordnetes Fenster) handelt. Zuvor arbeitete es mit dem obersten Untersteuerelement, wenn dieses Steuerelement Untersteuerelemente hatte.</p>
<p>Verbessert: <a href="lib/PostMessage.htm">Post/SendMessage</a> unterstützt nun auch Zeichenketten, die vom Empfänger in <a href="Variables.htm#amp">Adressvariablen</a> geschrieben werden (z.B. <code>PostMessage, Mld, &amp;MeineVar</code>).</p>
<p>Verbessert: Unterstützung für Steuerelement-HWND als Alternative zu Steuerelement-ClassNN: 1) <a href="lib/MouseGetPos.htm">MouseGetPos</a>-Option hinzugefügt, um Steuerelement-HWND abzurufen; 2) <a href="lib/WinGet.htm">WinGet ControlListHwnd</a> hinzugefügt, um eine Liste von Steuerelement-HWNDs abzurufen; 3) <a href="lib/ControlGet.htm#Hwnd">ControlGet Hwnd</a> hinzugefügt, um die HWND über die ClassNN oder den Text eines Steuerelements abzurufen.</p>
<p>Hinzugefügt: <a href="lib/GuiControlGet.htm">GuiControlGet FocusV</a>, mit dem der Variablenname statt ClassNN des fokussierten Steuerelements abgerufen werden kann.</p>

<h2 id="v1.0.43.05">1.0.43.05 - 7. April 2006</h2>
<p>Behoben/verbessert: Unterstützung für .ICL-Dateien (Symbolbibliotheken), die seit v1.0.43.03 fehlerhaft war. [danke Tekl]</p>
<p>Geändert: Groß-/Kleinschreibung-Sensitivität in <a href="Hotkeys.htm">Hotkey-Namen</a> wurde auf das Verhalten vor 1.0.43.03 zurückgesetzt: ANSI-Großbuchstaben wie Ä und Ü und die entsprechenden Kleinbuchstaben werden als unterschiedliche Hotkeys behandelt. [danke copa017]</p>

<h2 id="v1.0.43.04">1.0.43.04 - 4. April 2006</h2>
<p>Behoben: Crash von Zeichen über Chr(127) in <a href="Hotstrings.htm">Hotstring-Abkürzungen</a> und den Sprachabhängige-Suche-von-rechts-Modus von <a href="Functions.htm#InStr">InStr()</a> und <a href="lib/StringGetPos.htm">StringGetPos</a> (fehlerhaft seit v1.0.43.03). [danke PhiLho &amp; brotherS]</p>

<h2 id="v1.0.43.03">1.0.43.03 - 3. April 2006</h2>
<p>Behoben: <a href="lib/Menu.htm#distort">Verformung</a> von 16x16-Symbolen, die mit <a href="Scripts.htm#ahk2exe">ahk2exe</a> oder <code><a href="lib/Menu.htm">Menu</a>, Tray, Icon</code> geladen werden. [danke Tekl]</p>
<p>Behoben: Die folgenden Elemente ignorieren nun <a href="lib/_MaxMem.htm">#MaxMem</a> wie dokumentiert: <a href="lib/VarSetCapacity.htm">VarSetCapacity()</a>, <a href="lib/FileRead.htm">FileRead</a>, <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> und <a href="lib/ControlGet.htm#List">ControlGet (ListView)</a>. [danke Dippy46]</p>
<p>Geändert: Die folgenden Elemente verwenden nun die <a href="lib/StringCaseSense.htm#Locale">sprachabhängige Groß-/Kleinschreibung-Nichtsensitivität</a> anstelle der "nur A-Z"-Nichtsensitivität: <a href="Hotkeys.htm">Hotkey-Namen</a>, <a href="Hotstrings.htm">Hotstring-Abkürzungen</a>, <a href="lib/Menu.htm">Menünamen</a>, <a href="lib/Input.htm">Inputs VergleichListe</a> und <a href="lib/GuiControls.htm#TabCmd">Gui Tab</a>.</p>
<p>Geändert: Der <a href="Variables.htm#equal">Gleichheitsoperator in Ausdrücken (=)</a> und die nicht-Groß-/Kleinschreibung-abhängige <a href="Functions.htm#InStr">InStr</a>-Funktion verwenden nun die sprachabhängige Groß-/Kleinschreibung-Nichtsensitivität, wenn <a href="lib/StringCaseSense.htm#Locale">StringCaseSense</a> "Locale" oder "On" ist.</p>
<p>Verbessert: <a href="lib/StringCaseSense.htm">StringCaseSense</a> hat die neue Option Locale, die Zeichenkettenvergleiche nicht-Groß-/Kleinschreibung-sensitiv macht, gemäß den aktuellen Sprach- und Regionseinstellungen des Benutzers. Zum Beispiel behandeln die meisten englischen und westeuropäischen Sprach- und Regionseinstellungen die Großbuchstaben A bis Z, einschließlich ANSI-Großbuchstaben wie Ä und Ü, und die entsprechenden Kleinbuchstaben als identisch. [danke Boskoop &amp; PhiLho]</p>
<p>Verbessert: Der <a href="lib/Sort.htm">Sort-Befehl</a> und die <a href="lib/ListView.htm#Case">ListView-Sortierung</a> haben nun eine Option für sprachabhängige Groß-/Kleinschreibung-Nichtsensitivität.</p>
<p>Verbessert: Die Mausrad-Hotkeys (WheelDown/Up) melden nun die Anzahl der Drehungen in <a href="Hotkeys.htm#Wheel">A_EventInfo</a>, was eine Unterscheidung zwischen schnell und langsam ermöglicht. [danke evl]</p>
<p>Verbessert: <a href="lib/FileRead.htm">FileRead</a> hat eine neue Option, mit der nur der führende Teil einer Datei gelesen werden kann. [danke Dippy46]</p>

<h2 id="v1.0.43.02">1.0.43.02 - 30. März 2006</h2>
<p>Behoben: <a href="Hotstrings.htm#raw">Raw-Modus-Hotstrings</a> senden nicht mehr die zusätzliche Zeichenkette {Raw} (fehlerhaft seit v1.0.43). [danke stom2006]</p>
<p>Geändert: <a href="lib/SendMode.htm">SendMode</a>: 1) InputThenEvent in Input umbenannt; 2) InputThenPlay hinzugefügt, das das gleiche Verhalten wie das vorherige "Input" hat. Dies wurde getan, weil <a href="lib/Send.htm#SendEvent">SendEvent</a> weniger wahrscheinlich Kompatibilitätsprobleme verursacht als <a href="lib/Send.htm#SendPlayDetail">SendPlay</a>.</p>

<h2 id="v1.0.43.01">1.0.43.01 - 29. März 2006</h2>
<p>Behoben: Mausklick an nicht spezifizierten Koordinaten in bestimmten Anwendungen; z.B. <code>Send {LButton}</code> (fehlerhaft seit v1.0.43). [danke incith]</p>
<p>Behoben: <a href="Hotkeys.htm#Tilde">Tilde-Hotkeys</a>. Wenn sie einen Hook entfernen, bleibt ihre eigene Taste nicht mehr dauerhaft gedrückt (z.B. <a href="scripts/MouseGestures.htm">Mausgesten-Skript</a> und <code>~LCtrl::Hotkey, RButton, Off</code>). [danke Stefan Taubenberger]</p>

<h2 id="v1.0.43.00">1.0.43 - 25. März 2006</h2>
<p class="note"><strong>Hinweis:</strong> Obwohl diese Version ausgiebig getestet wurde und voraussichtlich keine bestehenden Skripte unbrauchbar machen wird, wurden einige Änderungen am Senden von Tastendrücken und Mausklicks vorgenommen. Wenn Sie wichtige Skripte haben, die auf solche Features angewiesen sind, ist es ratsam, diese erneut zu testen oder zwei Wochen zu warten, bis eventuelle Bugs behoben sind.</p>
<p>Behoben: <a href="Hotkeys.htm#AltGr">AltGr-Hotkeys</a>, die <a href="lib/Send.htm">Send</a> verwenden, wie z.B. <code>&lt;^&gt;!m::Send ^c</code>. Außerdem wurden AltGr-Neubelegungen wie <code>F1::RAlt</code> behoben [danke foxer]</p>
<p>Behoben: <a href="lib/VarSetCapacity.htm">VarSetCapacity</a> war nicht in der Lage, den Speicher für einen <a href="Functions.htm#ByRef">ByRef-Parameter</a> freizugeben. [danke Corrupt]</p>
<p>Behoben: Die Hotstring-Option <a href="Hotstrings.htm#b0">b0</a> zeigt nun das Endungszeichen an der Stelle an, wo Sie es eingegeben haben, nicht am Ende des Ersatzes.</p>
<p>Verbessert: <a href="Hotstrings.htm#auto">Automatisch-ersetzende Hotstrings</a> sind nun schneller und zuverlässiger, da sie standardmäßig den <a href="lib/Send.htm#SendInputDetail">SendInput-Modus</a> verwenden. Es gibt auch eine <a href="Hotstrings.htm#SendMode">neue Hotstring-Option</a>, um den Send-Modus zu ändern.</p>
<p>Verbessert: Mausklicks/-ziehvorgänge sind nun zuverlässiger in Fällen, wo der Benutzer den Mauszeiger während des Ereignisses physisch bewegt.</p>
<p>Hinzugefügt: Befehle <a href="lib/Click.htm">Click</a> und <a href="lib/Send.htm#Click">Send {Click}</a>, die einfacher zu benutzen sind als MouseClick. Sie kompensieren auch den Fall, wo die linke/rechte Maustaste via Systemsteuerung vertauscht wurde.</p>
<p>Hinzugefügt: Befehl <a href="lib/SendMode.htm">SendMode</a>, mit dem <a href="lib/Send.htm">Send</a> gleichbedeutend mit <a href="lib/Send.htm#SendInputDetail">SendInput</a> oder <a href="lib/Send.htm#SendPlayDetail">SendPlay</a> gemacht werden kann, anstatt mit <a href="lib/Send.htm#SendEvent">SendEvent</a> (Standard). Er sorgt auch dafür, dass <a href="lib/Click.htm">Click</a> und MouseMove/Click/Drag den angegebenen Modus verwenden.</p>
<p>Hinzugefügt: Zwei neue Methoden zum Senden von Tastendrücken und Mausklicks: <a href="lib/Send.htm#SendInputDetail">SendInput</a> und <a href="lib/Send.htm#SendPlayDetail">SendPlay</a>. Diese sind in der Regel schneller und zuverlässiger. Außerdem ermöglicht <a href="lib/Send.htm#SendPlayDetail">SendPlay</a>, dass Tastendrücke und <a href="Hotstrings.htm">Hotstrings</a> von einer breiteren Palette von Spielen akzeptiert werden.</p>

<h2 id="v1.0.42.07">1.0.42.07 - 9. März 2006</h2>
<p>Behoben: Kein Absturz mehr, wenn Funktionen ByRef-Parameter <a href="Functions.htm#recurse">rekursiv</a> übergeben. [danke PhiLho]</p>

<h2 id="v1.0.42.06">1.0.42.06 - 7. März 2006</h2>
<p>Behoben: Kein Absturz mehr durch <a href="Variables.htm#ScriptDir">A_ScriptDir</a> (fehlerhaft seit v1.0.42.01).</p>
<p>Behoben: <a href="lib/Run.htm">Run/RunWait</a> übergibt nicht länger ein zusätzliches Leerzeichen am Ende der Parameterliste beim Starten von Verknüpfungen. [danke arbe]</p>

<h2 id="v1.0.42.05">1.0.42.05 - 6. März 2006</h2>
<p>Diese Version ist identisch zur vorherigen Version, außer dass ihre EXE und BIN aufgrund eines Compilerfehlers ca. 1% größer waren als sie sein sollten.</p>

<h2 id="v1.0.42.04">1.0.42.04 - 6. März 2006</h2>
<p>Behoben: <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> funktioniert nun korrekt, wenn es mit Anwendungen wie Word und Excel verwendet wird (fehlerhaft seit der vorherigen Version). [danke Roussi Nikolov]</p>
<p>Behoben: <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> bewirkt nicht länger, dass Lesezeichen in MS Word erscheinen. [danke Laszlo &amp; 02clams]</p>
<p>Behoben: <a href="Variables.htm#TimeIdlePhysical">A_TimeIdlePhysical</a> wurde durch simulierte AltGr-Tastendrücke unterbrochen. [danke skrommel]</p>
<p>Behoben: <a href="lib/Send.htm#blind">Send {Blind}</a> führt nicht mehr dazu, dass Win/Strg/Alt/Umschalt hängen bleibt, wenn der Benutzer diese Taste inmitten eines Sends loslässt.</p>
<p>Verbessert: Der <a href="lib/Send.htm">Send-Befehl</a> wird nicht mehr nach jedem Großbuchstaben die Umschalttaste drücken und loslassen (z.B. <code>Send ABC</code>).</p>
<p>Verbessert: <a href="lib/SoundSet.htm">SoundSet</a> und <a href="lib/SoundGet.htm">SoundGet</a> unterstützen nun den Komponententyp "Headphones". [danke Tobias Winkler]</p>

<h2 id="v1.0.42.03">1.0.42.03 - 20. Februar 2006</h2>
<p>Behoben: Kein Absturz mehr durch <a href="lib/WinActivate.htm">WinActivate</a> unter bestimmten, seltenen Umständen. [danke twhyman]</p>
<p>Geändert: <a href="Hotstrings.htm#NoMouse">Hotstrings</a> erfordern nun standardmäßig den <a href="lib/_InstallMouseHook.htm">Maus-Hook</a> (siehe nächsten Punkt). Dies kann mit <a href="lib/_Hotstring.htm">#Hotstring NoMouse</a> verhindert werden.</p>
<p>Verbessert: <a href="Hotstrings.htm#NoMouse">Hotstrings</a> berücksichtigen nun auch Mausklicks. Dadurch kann ein Hotstring ausgelöst werden, wenn der Klick des Benutzers ein neues Steuerelement fokussiert oder den Textcursor verschiebt.</p>
<p>Verbessert: Der <a href="lib/Random.htm">Random</a>-Befehl kann nun einen neuen Seed setzen. [danke Laszlo]</p>
<p>Verbessert: <a href="lib/_ClipboardTimeout.htm">#ClipboardTimeout</a> versucht nun erneut, Daten zu lesen, wenn der erste Versuch fehlschlägt. Vorher wurde nur versucht, die Zwischenablage erneut zu öffnen.</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#LastError">A_LastError</a> für <a href="lib/DllCall.htm#LastError">DllCall</a> und <a href="lib/Run.htm#LastError">Run/RunWait</a>. Sie enthält das Ergebnis der Systemfunktion GetLastError().</p>

<h2 id="v1.0.42.02">1.0.42.02 - 17. Februar 2006</h2>
<p>Behoben: <a href="lib/GuiControls.htm#UpDown">UpDown-Steuerelemente</a> verbinden sich nun mit dem korrekten Steuerelement, wenn sie sich innerhalb eines <a href="lib/GuiControls.htm#Tab">Tab-Steuerelements</a> befinden, das eine <a href="lib/ListView.htm">ListView</a> enthält. [danke Thalon]</p>
<p>Verbessert: Der <a href="lib/Hotkey.htm">Hotkey-Befehl</a> hat nun eine "Off"-Option (wird in der Regel verwendet, um einen Hotkey vorerst im deaktivierten Zustand zu erstellen).</p>
<p>Verbessert: <a href="Variables.htm#Cursor">A_Cursor</a> stört nicht mehr beim Doppelklick. [danke Shimanov]</p>

<h2 id="v1.0.42.01">1.0.42.01 - 15. Februar 2006</h2>
<p>Behoben: Die folgenden Variablen funktionieren nun korrekt, wenn sie mit anderen Zeichenketten verkettet werden: <a href="Variables.htm#DetectHiddenWindows">A_DetectHiddenWindows</a>, <a href="Variables.htm#DetectHiddenText">A_DetectHiddenText</a>, <a href="Variables.htm#AutoTrim">A_AutoTrim</a> und <a href="Variables.htm#StringCaseSense">A_StringCaseSense</a>. [danke jballi]</p>
<p>Behoben: <a href="lib/KeyWait.htm">KeyWait</a> und <a href="lib/GetKeyState.htm">GetKeyState</a> funktionieren nun korrekt in den Subroutinen von <a href="Hotkeys.htm#prefixdollar">Hook-Hotkeys</a> (fehlerhaft seit v1.0.39) [danke Laszlo &amp; TobStro]. Zum Beispiel:</p>
<pre>~LControl::
if not GetKeyState("LControl")
    ToolTip LControl ist nicht wie erwartet unten (dieser Bug betraf nur einige Systeme).
return</pre>

<h2 id="v1.0.42.00">1.0.42 - 10. Februar 2006</h2>
<p>Behoben: <a href="Variables.htm#Expressions">Ausdrücke</a> wie "If not Installed" werden nicht mehr als "If not in List" fehlinterpretiert. [danke Toralf]</p>
<p>Behoben: Einige ungewöhnliche Situationen, in denen ein Hotkey unnötigerweise den <a href="lib/_InstallKeybdHook.htm">Tastatur-Hook</a> erforderte.</p>
<p>Behoben: <a href="KeyList.htm#vk">vkNNN-Hotkeys</a> werden nun vom Hook behandelt, wenn dieses VK auch als <a href="Hotkeys.htm#prefix">Präfix</a> für andere Hotkeys verwendet wird.</p>
<p>Behoben: <a href="lib/_IfWinActive.htm">#IfWin</a>s automatische Deaktivierung von Präfixtasten funktioniert nun korrekt, wenn <a href="lib/Suspend.htm">Suspend</a> eingeschaltet ist.</p>
<p>Behoben: Kleinere Hotkey-Probleme unter Windows 95/98/Me: 1) Das <a href="Hotkeys.htm#wildcard">Platzhalterpräfix (*)</a> wird ignoriert und solche Hotkeys werden aktiviert statt deaktiviert; 2) Nicht-Platzhalter-Hotkeys, die Teil eines Platzhalter-Hotkeys sind, werden aktiviert statt deaktiviert; 3) Ein <a href="Hotkeys.htm#LeftRight">Links/Rechts-Hotkey</a> wie <code>&gt;#x::</code> wird als <kbd>Win</kbd>+<kbd>X</kbd> aktiviert, nicht einfach als <kbd>X</kbd>.</p>
<p>Geändert: Der <a href="lib/Hotkey.htm">Hotkey-Befehl</a> erstellt nun eine neue <a href="lib/Hotkey.htm#variant">Variante</a> (falls erforderlich), anstatt einen bestehenden Hotkey mit diesem Namen immer zu aktualisieren. Dies betrifft nur Skripte, die die <a href="lib/_IfWinActive.htm">#IfWin</a>-Direktive von v1.0.41 verwenden.</p>
<p>Geändert: <a href="Hotkeys.htm">Hotkeys</a> erkennen nun, dass <code>^!c::</code> dasselbe ist wie <code>!^c::</code> (unterschiedliche Reihenfolge der Symbole). Dies betrifft auch den <a href="lib/Hotkey.htm">Hotkey-Befehl</a>.</p>
<p>Verbessert: Der Hotkey-Befehl unterstützt nun <a href="lib/Hotkey.htm#UseErrorLevel">UseErrorLevel</a> und kontextabhängige Hotkeys (via <a href="lib/Hotkey.htm#IfWin">Hotkey IfWinActive/Exist</a>).</p>
<p>Verbessert: <a href="lib/_IfWinActive.htm">#IfWinActive/Exist</a> unterstützt nun Windows 9x. Außerdem wird der <a href="lib/_InstallKeybdHook.htm">Tastatur-Hook</a> jetzt nach Möglichkeit vermieden. Darüber hinaus setzt #IfWin jetzt das <a href="misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a>.</p>
<p>Verbessert: Die folgenden Befehle unterstützen nun TListBox/TComboBox und möglicherweise andere: <a href="lib/Control.htm">Control</a> (Add/Delete/Choose/ChooseString); und <a href="lib/ControlGet.htm">ControlGet</a> (FindString/Choice/List).</p>
<p>Hinzugefügt: Unterstützung für Hotkey- und Hotstring-<a href="lib/_IfWinActive.htm#variant">Varianten</a> (Duplikate). Solche Hotkeys führen je nach aktivem oder existierendem Fenster eine andere (oder gar keine) Aktion aus.</p>

<h2 id="v1.0.41.02">1.0.41.02 - 1. Februar 2006</h2>
<p>Geändert: <a href="lib/GuiControl.htm#Move">GuiControl Move</a> verursacht weniger Flackern beim Vergrößern/Verkleinern oder Verschieben von Steuerelementen [danke Serenity]. Dies kann jedoch unter Umständen zu Artefakten (fehlerhafte Darstellungen) beim Zeichnen bestimmter Steuerelemente führen. <strong>In diesem Fall sollten Sie Ihre Skripte aktualisieren und stattdessen <a href="lib/GuiControl.htm#MoveDraw">GuiControl MoveDraw</a> verwenden.</strong></p>

<h2 id="v1.0.41.01">1.0.41.01 - 31. Januar 2006</h2>
<p>Behoben: <a href="Hotkeys.htm#AltGr">AltGr-Hotkeys</a>, die AltGr-Zeichen senden, wie z.B. <code>&lt;^&gt;!a::Send \</code> in Deutsch. [danke AGU]</p>
<p>Behoben: <a href="lib/Gui.htm#Options">Gui +Disable/AlwaysOnTop</a> funktioniert jetzt auch, wenn andere Optionen in derselben Zeile vorhanden sind. [danke evl]</p>
<p>Verbessert: Die Syntax unterstützt nun Befehle in derselben Zeile wie eine <a href="lib/Block.htm#otb">geschweifte Startklammer</a>. [danke segfault]</p>

<h2 id="v1.0.41.00">1.0.41 - 19. Januar 2006</h2>
<p>Behoben: <a href="lib/Transform.htm">Transform HTML</a> funktioniert wieder wie gewohnt (fehlerhaft seit v1.0.40.02). [danke Rabiator]</p>
<p>Verbessert: Die Syntax unterstützt nun den <a href="lib/Block.htm#otb">One True Brace (OTB) Style</a> bei IFs, ELSEs, Funktionen und normalen Schleifen.</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#AhkPath">A_AhkPath</a>, die den vollständigen Pfad und Namen von AutoHotkey.exe enthält (falls vorhanden).</p>
<p>Hinzugefügt: Direktiven <a href="lib/_IfWinActive.htm">#IfWinActive/Exist</a>, mit denen bestimmte Hotkeys und Hotstrings nur für bestimmte Fenster aktiviert werden können.</p>

<h2 id="v1.0.40.12">1.0.40.12 - 11. Januar 2006</h2>
<p>Behoben: Kein Speicherleck mehr, wenn <a href="lib/GuiControl.htm">GuiControl</a> bestimmte Bildtypen in ein <a href="lib/GuiControls.htm#Picture">Picture-Steuerelement</a> lädt. [danke beardboy]</p>
<p>Behoben: <a href="lib/ToolTip.htm">ToolTip</a> erschien nicht wieder, nachdem es extern via <kbd>Alt</kbd>+<kbd>F4</kbd>, <a href="lib/WinClose.htm">WinClose</a>, etc. zerstört wurde.</p>

<h2 id="v1.0.40.11">1.0.40.11 - 12. Dezember 2005</h2>
<p>Behoben: <code><a href="lib/GuiControl.htm">GuiControl</a>, %Var%</code>, wenn Var leer ist oder nur eine Fensternummer enthält. Es aktualisiert nun den Inhalt des Steuerelements, anstatt nichts zu tun. [danke MisterW]</p>
<p>Verbessert: Skripte im UTF-8-Format können jetzt geladen werden (BOM-Bytes "EF BB BF" am Anfang der Datei). [danke D. J. Rausch]</p>

<h2 id="v1.0.40.10">1.0.40.10 - 1. Dezember 2005</h2>
<p>Verbessert: <a href="lib/ImageSearch.htm">ImageSearch</a> und <a href="lib/PixelSearch.htm#fast">PixelSearch im schnellen Modus</a> unterstützen nun 256-Farben-Bildschirme (8-Bit).</p>

<h2 id="v1.0.40.09">1.0.40.09 - 21. November 2005</h2>
<p>Behoben: <a href="Hotkeys.htm">Hotkeys</a> wie z.B. <code>^q::</code> lösen beim Loslassen den Hotkey "*q up" aus, anstatt zum zweiten Mal den Hotkey ^q.</p>

<h2 id="v1.0.40.08">1.0.40.08 - 16. November 2005</h2>
<p>Behoben: <a href="lib/GuiControls.htm#ComboBox">ComboBox</a>-Steuerelemente geben nun die korrekte Auswahl zurück, wenn: 1) <a href="lib/GuiControl.htm">GuiControl</a> das Eingabefeld verändert hat; oder 2) der Benutzer einen vorhandenen Listeneintrag manuell in eine AltSubmit-ComboBox eingegeben hat. [danke Tekl]</p>

<h2 id="v1.0.40.07">1.0.40.07 - 16. November 2005</h2>
<p>Behoben: Kein Speicherleck mehr, wenn ein Skript eine <a href="Functions.htm">Funktion</a> rekursiv aufruft. [danke Laszlo]</p>

<h2 id="v1.0.40.06">1.0.40.06 - 10. November 2005</h2>
<p>Behoben: Kein Absturz durch <a href="Functions.htm#Abs">Abs()</a> mehr, wenn es mit einer leeren Zeichenkette aufgerufen wird. [danke Laszlo]</p>
<p>Behoben: Die Zahl -0x8000000000000000 in <a href="Variables.htm#Expressions">Ausdrücken</a>. [danke Laszlo]</p>

<h2 id="v1.0.40.05">1.0.40.05 - 4. November 2005</h2>
<p>Behoben: <a href="Functions.htm#Ceil">Ceil()</a>, <a href="Functions.htm#Floor">Floor()</a> und <a href="lib/Transform.htm">Transform Ceil/Floor</a> liefern jetzt für alle Eingabewerte das richtige Ergebnis. [danke Litmus Red]</p>
<p>Behoben: Bei einer <a href="misc/Remap.htm">Neubelegung</a> kann nun <kbd>Enter</kbd> als Zieltaste verwendet werden. [danke jocamero]</p>
<p>Geändert: <a href="misc/WinTitle.htm#ahk_id">ahk_id</a> funktioniert nun auch mit versteckten untergeordneten Fenstern (Steuerelementen), ohne dass <a href="lib/DetectHiddenWindows.htm">DetectHiddenWindows</a> benötigt wird.</p>
<p>Verbessert: <a href="lib/PostMessage.htm">Post/SendMessage</a> akzeptiert nun direkt geschriebene bzw. in Anführungszeichen gesetzte Zeichenketten für wParam/lParam.</p>

<h2 id="v1.0.40.04">1.0.40.04 - 2. November 2005</h2>
<p>Behoben: <a href="lib/WinGetText.htm">WinGetText</a> und <a href="lib/ControlGetText.htm">ControlGetText</a> funktionieren nun mit Anwendungen, die nicht korrekt auf WM_GETTEXT reagieren (z.B. AIM). [danke Yarbuck]</p>
<p>Geändert: Das Programm richtet nun alle Daten an 32-Bit-Grenzen aus, was Probleme bzgl. <a href="lib/DllCall.htm#struct">DllCall-Strukturen</a> behebt. [danke Shimanov]</p>

<h2 id="v1.0.40.03">1.0.40.03 - 26. Oktober 2005</h2>
<p>Da eine andere Lösung notwendig ist, wurde die 1-Pixel-Erhöhung für <a href="lib/GuiControls.htm#CheckBox">CheckBox</a>- und <a href="lib/GuiControls.htm#Radio">Radio</a>-Steuerelementen in v1.0.40.01 rückgängig gemacht.</p>

<h2 id="v1.0.40.02">1.0.40.02 - 24. Oktober 2005</h2>
<p>Behoben: <a href="lib/Transform.htm#Unicode">Transform Unicode</a> ist nun in der Lage, eine Unicode-Zeichenkette zu erzeugen, deren erstes Byte Null ist. [danke Shimanov &amp; Laudrin]</p>
<p>Die Größe von <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a> wurde um 20 KB reduziert, indem der Compiler die Codegröße in Abschnitten, die die Skriptperformanz nicht beeinträchtigen, minimiert.</p>

<h2 id="v1.0.40.01">1.0.40.01 - 21. Oktober 2005</h2>
<p>Behoben: Die Titelleisten von skripteigenen Fenstern reagieren nun korrekt auf Links- und Rechtsklicks, die von <a href="Hotkeys.htm">Hotkeys</a> des Skripts erzeugt werden. [danke Shimanov]</p>
<p>Behoben: <a href="lib/OnMessage.htm">OnMessage</a> war nicht in der Lage, bestimmte Meldungen wie WM_GETMINMAXINFO konsistent zu überwachen.</p>
<p>Geändert: <a href="lib/Critical.htm">Critical</a> wird bei MsgBox und anderen Dialogfenstern vorübergehend ausgeschaltet.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/Thread.htm">Thread NoTimers</a>, mit dem verhindert werden kann, dass ein Thread durch Timer unterbrochen wird.</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Behoben: <a href="lib/Gui.htm#GuiContextMenu">GuiContextMenu</a>s A_GuiControl enthält nun den korrekten Wert für Text- und Picture-Steuerelemente, die sich innerhalb eines GroupBox- oder Tab-Steuerelements befinden.</p>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl</a> zeichnet nun Picture-Steuerelemente und transparente Text-Steuerelemente korrekt neu, wenn sie mit neuem Inhalt gefüllt werden.</p>
<p>Verbessert: Die Breite von automatisch skalierten <a href="lib/GuiControls.htm#CheckBox">CheckBox</a>- und <a href="lib/GuiControls.htm#Radio">Radio</a>-Steuerelementen wurde um 1 Pixel erhöht, um einen Zeilenumbruch bei bestimmten Desktop-Designs zu verhindern.</p>

<h2 id="v1.0.40.00">1.0.40 - 11. Oktober 2005</h2>
<p>Behoben: Die <a href="lib/_InstallMouseHook.htm">Maus</a>- und <a href="lib/_InstallKeybdHook.htm">Tastatur</a>-Hooks von v1.0.39 verhalten sich nun korrekt, wenn sie nicht aktiviert werden können.</p>
<p>Geändert: Der <a href="lib/Send.htm">Send-Befehl</a> für russische und andere Tastaturbelegungen kann nun mehr ASCII-Zeichen (z.B. die Buchstaben A bis Z) erzeugen. Dies hat keinen Einfluss auf westeuropäische und englische Belegungen.</p>
<p>Geändert: <a href="Hotkeys.htm">Hotkeys</a>, die Teil eines Platzhalter-Hotkeys sind, haben nun Vorrang. Wenn z.B. die Hotkeys *x und ^x vorhanden sind, wird beim Drücken von ^x nun ^x statt *x ausgelöst.</p>
<p>Verbessert: Die Syntax erlaubt es nun, dass Doppelpunktpaare nicht mehr mit einem <a href="misc/EscapeChar.htm">Escapezeichen</a> versehen werden müssen.</p>
<p>Verbessert: Send und ControlSend haben nun die Option <a href="lib/Send.htm#blind">{Blind}</a>, die Strg/Alt/Umschalt/Win gedrückt lässt, wenn sie auf diese Weise gestartet wurden.</p>
<p>Hinzugefügt: Eine <a href="misc/Remap.htm">neue Neubelegungsmethode</a>, die einfacher und mächtiger als die alten Methoden ist. Zum Beispiel:</p>
<pre>a::b  <em>; Die A-Taste verhält sich wie die B-Taste.</em>
CapsLock::Ctrl  <em>; Die Feststelltaste verhält sich wie die STRG-Taste.</em>
XButton1::LButton  <em>; Die vierte Maustaste verhält sich wie die linke Maustaste.</em>
RCtrl::RWin  <em>; Die rechte STRG-Taste verhält sich wie die rechte WIN-Taste.</em></pre>

<h2 id="v1.0.39.00">1.0.39 - 3. Oktober 2005</h2>
<p class="note"><strong>Hinweis:</strong> Die letzte Änderung unten kann Einfluss auf Skripte haben, die den <a href="lib/_InstallKeybdHook.htm">Tastatur</a>- oder <a href="lib/_InstallMouseHook.htm">Maus</a>-Hook verwenden. Wenn Sie wichtige Skripte haben, die darauf angewiesen sind, ist es ratsam, diese erneut zu testen oder zwei Wochen zu warten, bis eventuelle Bugs behoben sind.</p>
<p>Behoben: <a href="Scripts.htm#continuation">Fortsetzungsbereiche</a> konnten keine Zeilen enthalten, die nur aus Leer- und Tabulatorzeichen bestanden. [danke JSLover]</p>
<p>Behoben: Hotkeys wie <code>LButton &amp; LCtrl::</code> installieren nun automatisch den <a href="lib/_InstallMouseHook.htm">Maus-Hook</a>. [danke JSLover]</p>
<p>Hinzugefügt: Ein dedizierter Thread zur Unterstützung der <a href="lib/_InstallKeybdHook.htm">Tastatur</a>- und <a href="lib/_InstallMouseHook.htm">Maus</a>-Hooks. Dies beseitigt Maus-/Tastaturverzögerungen bei langen Operationen wie <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a>. Dies verhindert auch, dass die Tasten "dauerhaft gedrückt bleiben". Der neue Thread verbraucht lediglich 36 KB Speicher und existiert nur in Skripten, die die Hooks verwenden.</p>

<h2 id="v1.0.38.06">1.0.38.06 - 27. September 2005</h2>
<p class="note"><strong>Hinweis:</strong> Es wurden einige Optimierungen an den <a href="lib/_InstallKeybdHook.htm">Tastatur</a>- und <a href="lib/_InstallMouseHook.htm">Maus</a>-Hooks vorgenommen. Wenn Sie wichtige Skripte haben, die darauf angewiesen sind, ist es ratsam, diese erneut zu testen oder zwei Wochen zu warten, bis eventuelle Bugs behoben sind.</p>
<p>Behoben: <a href="Scripts.htm#continuation">Fortsetzungszeilen</a>, die mit "AND" und "OR" beginnen, funktionieren nun auch, wenn das nächste Zeichen eines der Zeichen <code>()!~*&amp;-+</code> ist. [danke Decarlo110]</p>
<p>Behoben: Hotkeys/Labels wie <code>(::</code> und <code>(MeinLabel):</code> werden nicht mehr als <a href="Scripts.htm#continuation">Fortsetzungsbereiche</a> fehlinterpretiert. [danke whismerhill]</p>

<h2 id="v1.0.38.05">1.0.38.05 - 23. September 2005</h2>
<p>Behoben: <a href="lib/Menu.htm#Show">Menu Show</a> (fehlerhaft seit der vorherigen Version) ruft nun die Subroutine des ausgewählten Menüpunkts auf, bevor der Befehl unterhalb von Menu Show ausgeführt wird. [danke Roussi]</p>
<p>Geändert: <a href="lib/Sleep.htm">Sleep -1</a> und Sleep 0 prüfen nun auch unter Windows 9x die Meldungswarteschlange wie unter anderen Betriebssystemen.</p>

<h2 id="v1.0.38.04">1.0.38.04 - 21. September 2005</h2>
<p>Behoben: Kein möglicher Absturz mehr durch die <a href="Hotstrings.htm#z">Hotstring-Reset-Option (Z)</a>. [danke arbe]</p>
<p>Verbessert: <a href="misc/Threads.htm">Threads</a> haben eine geringere Chance, unterbrochen zu werden, bevor auch nur eine einzige Zeile ausgeführt werden kann. [danke Paul Haines]</p>
<p>Hinzugefügt: Befehl <a href="lib/Critical.htm">Critical</a>, mit dem verhindert werden kann, dass der <a href="misc/Threads.htm">aktuelle Thread</a> von anderen Threads unterbrochen werden kann. Außerdem puffert er eingehende Ereignisse, bis der kritische Thread endet.</p>

<h2 id="v1.0.38.03">1.0.38.03 - 12. September 2005</h2>
<p>Behoben: <a href="Hotkeys.htm#keyup">Taste-Oben-Hotkeys</a>. Wenn sowohl eine Platzhalter- als auch eine Nicht-Platzhalter-Version desselben Hotkeys vorhanden ist, funktioniert dies auch dann, wenn der Nicht-Platzhalter-Unten-Hotkey vor dem Nicht-Platzhalter-Oben-Hotkey definiert ist. [danke Paul Haines]</p>
<p>Verbessert: <a href="lib/GuiControls.htm#Edit">Edit-Steuerelemente</a> haben nun die Option "WantTab", die es ermöglicht, beim Drücken der TAB-Taste ein Tabulatorzeichen zu erzeugen.</p>

<h2 id="v1.0.38.02">1.0.38.02 - 8. September 2005</h2>
<p>Behoben: <a href="lib/WinSet.htm#Region">WinSet Region</a> war nicht in der Lage, eine negative X-Koordinate zu akzeptieren.</p>
<p>Behoben: <a href="lib/GuiControls.htm#Radio">Radio-Steuerelemente</a> starten nun eine neue Radio-Gruppe pro neuem <a href="lib/GuiControls.htm#Tab">Tab-Steuerelement</a> oder Tab. [danke Toralf]</p>
<p>Geändert: <a href="KeyList.htm#vk">VK-Hotkeys</a> wie <code>^VK24::</code> vermeiden nun nach Möglichkeit die Verwendung des <a href="lib/_InstallKeybdHook.htm">Tastatur-Hooks</a>. Als Nebeneffekt werden solche Hotkeys nun von jeder Taste ausgelöst, die die angegebene virtuelle Taste hat (z.B. sowohl Home als auch NumpadHome für VK24). [danke Orion]</p>
<p>Verbessert: Der <a href="lib/Hotkey.htm">Hotkey-Befehl</a> hat nun die Option "On", um in einem Schritt das Label eines Hotkeys zu ändern und ihn zu aktivieren. [danke Toralf]</p>
<p>Verbessert: "<a href="lib/GuiControl.htm">GuiControl</a> Disable/Enable/Hide/Show" erkennt nun 1 oder 0 als optionales Suffix, um Skripte zu vereinfachen. [danke Toralf]</p>

<h2 id="v1.0.38.01">1.0.38.01 - 5. September 2005</h2>
<p>Behoben: <a href="lib/Gui.htm#GuiContextMenu">GuiContextMenu</a>s A_GuiControl enthält nun einen Wert, wenn der Benutzer einen Rechtsklick auf ein Text-, Picture- oder Tab-Steuerelement macht.</p>
<p>Geändert: <a href="lib/OnMessage.htm">OnMessage()</a> empfängt LPARAM nun als vorzeichenlose Zahl, nicht mehr als vorzeichenfähige Zahl.</p>

<h2 id="v1.0.38.00">1.0.38 - 3. September 2005</h2>
<p>Behoben: Der <a href="lib/Input.htm">Input-Befehl</a> erfasst nun korrekt Tastendrücke, die von einem Hotkey oder Hotstring gesendet werden, für den der Benutzer physisch <kbd>Umschalt</kbd>, <kbd>Strg</kbd>, <kbd>Alt</kbd> oder <kbd>Win</kbd> gedrückt hält. [danke wildfire]</p>
<p>Geändert: <a href="lib/GuiControl.htm#Text">GuiControl Text</a> setzt nun den Text des Eingabefeldes einer <a href="lib/GuiControls.htm#ComboBox">ComboBox</a>, nicht mehr neue Einträge für ihre Auswahlliste. Bitte passen Sie Ihre Skripte entsprechend an.</p>
<p>Verbessert: <a href="lib/FileMoveDir.htm">FileMoveDir</a> hat eine neue Option zum bedingungslosen Überschreiben des Zielordners.</p>
<p>Hinzugefügt: Interne Funktion <a href="Functions.htm#IsLabel">IsLabel()</a>, mit der man prüfen kann, ob ein Label existiert, bevor man es via Gosub anspringt. [danke Tekl]</p>
<p>Hinzugefügt: Interne Funktion <a href="lib/OnMessage.htm">OnMessage()</a>, mit der benutzerdefinierte Meldungen empfangen und Systemmeldungen überwacht werden können.</p>
<p>Hinzugefügt: Ein <a href="scripts/WinLIRC.htm">WinLIRC-Client-Skript</a>, das auf Signale von einer Fernbedienung reagiert. <a href="https://sourceforge.net/projects/winlirc/">WinLIRC</a> ist ein Open-Source-Tool, das die Infrarotsignale von Fernbedienungen beliebiger Marken erfasst.</p>

<h2 id="v1.0.37.07">1.0.37.07 - 27. August 2005</h2>
<p>Behoben: Das benutzerdefinierte Symbol eines <a href="lib/Gui.htm">GUI-Fensters</a> stört nicht mehr, wenn <code><a href="lib/Menu.htm">Menu</a>, Tray, Icon</code> ein neues Symbol lädt. [danke Tekl]</p>
<p>Behoben: Die <a href="Hotstrings.htm">Hotstring</a>-Option "O" (Endungszeichen weglassen) funktioniert nun auch, wenn "B0" (kein Backspace) aktiv ist. [danke Tekl]</p>
<p>Verbessert: <a href="Hotkeys.htm#alttab">AltTab-Hotkeys</a> unterstützen nun <kbd>Esc</kbd> als Mittel zum Abbrechen des Vorgangs. [danke catweazle]</p>

<h2 id="v1.0.37.06">1.0.37.06 - 21. August 2005</h2>
<p>Behoben: Automatisch-ersetzende Platzhalter-<a href="Hotstrings.htm">Hotstrings</a>, deren letztes Zeichen durch eine tote Taste erzeugt wird (z.B. <code>:*:jsá::</code>). [danke jordi]</p>
<p>Behoben: Das Tray-Symbol wird nun grün, wenn ein pausierter <a href="misc/Threads.htm">Thread</a> durch einen neuen Thread unterbrochen wird.</p>
<p>Geändert/verbessert: Der <a href="lib/Pause.htm">Pause-Befehl</a>: 1) <code>Pause Off</code> hat nun immer Einfluss auf den Thread direkt unter dem aktuellen Thread, nicht mehr auf den nächstmöglichen pausierten Thread; 2) <code>Pause Toggle</code> und <code>Pause</code> pausieren nun immer den aktuellen Thread, wenn der Thread darunter nicht pausiert ist; 3) Eine Option hinzugefügt, um den darunter liegenden statt aktuellen Thread zu pausieren. [danke Decarlo110]</p>
<p>Verbessert: Der Menüpunkt "Pause Script" funktioniert nun auch, wenn das Skript im Leerlauf ist (was die Ausführung von <a href="lib/SetTimer.htm">Timern</a> verhindert). [danke Rajat]</p>
<p>Verbessert: <a href="lib/SoundSet.htm">SoundSet</a> und <a href="lib/SoundGet.htm">SoundGet</a> unterstützen nun N/A für <em>KomponenteTyp</em> und numerische Werte für <em>ReglerTyp</em>. Es gibt auch ein <a href="lib/SoundSet.htm#Ex">Beispielskript</a>, um den Leistungsumfang Ihrer Soundkarte zu ermitteln.</p>

<h2 id="v1.0.37.05">1.0.37.05 - 16. August 2005</h2>
<p>Behoben: Hotkeys wie <code>^!a::</code> werden nicht mehr doppelt ausgelöst, wenn <code>a &amp; b::</code> ein Hotkey ist. Behoben wurde auch, dass Hotkeys wie <code>^!a::</code> ohne <code class="no-highlight">$</code> funktionieren, wenn "a" eine Präfixtaste wie <code>a &amp; b::</code> ist. [danke t0nyk0]</p>
<p>Behoben: Die Hotkeys <code>LButton::</code> und <code>RButton::</code> stören nicht mehr das Kontextmenü des Edit-Steuerelements. [danke Tekl]</p>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl ChooseString</a> ignoriert nicht mehr die ersten beiden Einträge in einer ListBox/ComboBox/DDL. [danke Tekl]</p>

<h2 id="v1.0.37.04">1.0.37.04 - 30. Juli 2005</h2>
<p>Behoben: Keine schwerwiegenden Bugs mehr im <a href="lib/Send.htm">Send-Befehl</a> und in anderen Tastatur-Features, die mit der vorherigen Version eingeführt wurden.</p>

<h2 id="v1.0.37.03">1.0.37.03 - 30. Juli 2005</h2>
<p>Behoben: Kleinere Probleme, wenn sich die Sprache/Tastaturbelegung eines Skripts ändert, während es ausgeführt wird. Dies wirkt sich auf <a href="Hotkeys.htm">Hotkeys</a>, <a href="Hotstrings.htm">Hotstrings</a>, <a href="lib/Send.htm">Send</a> und eventuell andere Bereiche aus.</p>
<p>Behoben: Das <a href="lib/GuiControls.htm#Hotkey">Hotkey-Steuerelement</a> funktioniert nun für NumLock und NumpadDiv (vorher wurde SC145 und SC135 zurückgegeben).</p>
<p>Verbessert: <a href="lib/GuiControls.htm#Tab">Gui Tab</a> hat nun einen Modus für exakte Übereinstimmung. [danke Tekl]</p>
<p>Verbessert: <a href="Hotkeys.htm">Hotkeys</a> erkennen nun die folgenden Symbole als gültige Tastennamen: <code class="no-highlight">#!^+$&lt;&gt;*~</code> [danke Tekl]</p>

<h2 id="v1.0.37.02">1.0.37.02 - 25. Juli 2005</h2>
<p>Behoben: <a href="Hotkeys.htm#keyup">Taste-Oben-Hotkeys</a> wie <code>LButton Up::</code> stören keine Nicht-Hotkey-Ereignisse wie <kbd>Umschalt</kbd>+Linksklick mehr. [danke Icfu]</p>

<h2 id="v1.0.37.01">1.0.37.01 - 22. Juli 2005</h2>
<p>Behoben: <a href="lib/ControlGet.htm#List">ControlGet List</a> funktioniert nun für ListViews in der List/Icon-Ansicht. [danke Rajat]</p>

<h2 id="v1.0.37.00">1.0.37 - 21. Juli 2005</h2>
<p>Behoben: <a href="lib/WinGetText.htm">WinGetText</a> und <a href="lib/WinGet.htm#ControlList">WinGet ControlList</a> waren nicht in der Lage, ihre Ausgabe in <a href="misc/Clipboard.htm">Clipboard</a> zu schreiben.</p>
<p>Behoben: <a href="misc/Clipboard.htm">Clipboard</a> konnte nicht mehr als einmal in derselben Zeile abgerufen werden.</p>
<p>Behoben: <a href="lib/ListView.htm#LV_ModifyCol">LV_ModifyCol()</a> akzeptiert nun Spaltenbreiten im Floating-Point-Format. [danke Toralf]</p>
<p>Verbessert: <a href="lib/StatusBarWait.htm">StatusBarWait</a> setzt das Warten nun auch dann fort, wenn die Leiste vorübergehend nicht mehr reagiert.</p>
<p>Verbessert: <a href="lib/ControlGet.htm#List">ControlGet List</a> hat nun die Möglichkeit, Texte und andere Informationen aus ListViews wie dem Explorer abzurufen.</p>

<h2 id="v1.0.36.07">1.0.36.07 - 18. Juli 2005</h2>
<p>Behoben: <a href="Hotkeys.htm#keyup">Tilde-Taste-Oben-Hotkeys</a> funktionieren nun mit <kbd>Win</kbd>/<kbd>Alt</kbd> wie z.B. <code>~LWin up::</code>.</p>
<p>Behoben: Bitweises NICHT funktioniert nun mit einer Floating-Point-Zahl wie z.B. <code>~1.0</code>.</p>
<p>Verbessert: <a href="lib/VarSetCapacity.htm">VarSetCapacity</a> hat nun die Möglichkeit, den Speicher einer Variable mit Nullen zu füllen.</p>
<p>Verbessert: <a href="lib/DllCall.htm">DllCall</a> unterstützt nun Gdi32.dll als Standard-DLL.</p>
<p>Hinzugefügt: <a href="Variables.htm#amp">Operatoren &amp; und *</a> für den Umgang mit Speicheradressen und Binärdaten.</p>
<p>Hinzugefügt: Dokumentation für DllCall, die zeigt, wie man <a href="lib/DllCall.htm#struct">Strukturen</a> verwendet.</p>

<h2 id="v1.0.36.06">1.0.36.06 - 12. Juli 2005</h2>
<p>Behoben: AltGr-Probleme: 1) Der <a href="lib/Send.htm">Send-Befehl</a> konnte keine großgeschriebenen AltGr-Zeichen erzeugen (fehlerhaft seit v1.0.35); 2) STRG-Taste bei Hotkeys wie <code>^!t::Send a</code> blieb hängen, wenn sie via AltGr ausgelöst wurden; 3) möglicherweise noch andere AltGr-Probleme. [danke Henrique Peron]</p>
<p>Behoben: Probleme beim Zeichnen von <a href="lib/ListView.htm">ListViews</a> innerhalb eines <a href="lib/GuiControls.htm#Tab">Tab-Steuerelements</a>. [danke beardboy]</p>

<h2 id="v1.0.36.05">1.0.36.05 - 9. Juli 2005</h2>
<p>Behoben: <a href="lib/ToolTip.htm">ToolTip</a> war seit v1.0.36.03 auf Betriebssystemen älter als XP fehlerhaft.</p>

<h2 id="v1.0.36.04">1.0.36.04 - 7. Juli 2005</h2>
<p>Behoben: <a href="lib/ListView.htm">ListViews</a>: 1) Es war nicht möglich, aus der Kachelansicht zu wechseln; 2) Das Ereignis "H" (HotTrack) wird nicht mehr empfangen, da seine hohe Frequenz die Verarbeitung wichtigerer <a href="lib/ListView.htm#notify">Ereignisse</a> durch ein Skript behindert hat. [danke Toralf]</p>

<h2 id="v1.0.36.03">1.0.36.03 - 6. Juli 2005</h2>
<p>Verbessert: <a href="lib/FileSelectFolder.htm">FileSelectFolder</a> unterstützt nun einen Startordner, der die Aufwärtsnavigation nicht einschränkt.</p>
<p>Verbessert: <a href="lib/SetTimer.htm">SetTimer</a> unterstützt nun ein Intervall von bis zu 49,7 Tagen statt wie bisher 24,8 Tagen. [danke MIchael]</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Behoben: <a href="lib/ListView.htm#AltSubmit">AltSubmit ListView</a> störte das <a href="lib/Gui.htm#GuiContextMenu">Kontextmenü</a>.</p>
<p>Behoben: Die automatische Größenanpassung von <a href="lib/ListView.htm#LV_ModifyCol">LV_ModifyCol()</a> hat keinen Effekt mehr, wenn die ListView nicht in der Report-Ansicht ist (um eine Traumatisierung der ListView zu vermeiden). [danke Toralf]</p>
<p>Verbessert: <a href="lib/ListView.htm">ListViews</a>: 1) A_EventInfo enthält die fokussierte Zeile für mehr <a href="lib/ListView.htm#notify">Ereignistypen</a>; 2) <code><a href="lib/ListView.htm#LV_GetCount">LV_GetCount</a>("Col")</code> ruft die Anzahl der Spalten ab; 3) "Tile" als Große-Symbole-Ansicht hinzugefügt (nur XP). [danke Toralf]</p>

<h2 id="v1.0.36.02">1.0.36.02 - 3. Juli 2005</h2>
<p>Behoben: <a href="Hotstrings.htm">Hotstrings</a> funktionieren nun, wenn das Skript ein Eingabefenster anzeigt.</p>
<p>Behoben: <a href="Hotkeys.htm#keyup">Tilde-Taste-Oben-Hotkeys</a> wie z.B. <code>~5 up::</code> vermeiden nun doppelte Zeichenausgabe.</p>
<p>Geändert: Zeilenvorschübe (`n) und andere unsichtbare Zeichen sind in Variablennamen nicht mehr erlaubt.</p>
<p>Verbessert: Das Stack-Limit wurde von 1 auf 4 MB erhöht, was eine tiefere Rekursion von Funktionen und Subroutinen ermöglicht. Hinweis: Dies erhöht nicht den Speicherbedarf eines normalen Skripts. [danke Rubens]</p>
<p>Verbessert: Zugriffsgeschwindigkeit auf leere Variablen wurde verdoppelt (die langsam sind, weil geprüft werden muss, ob es sich um <a href="Concepts.htm#environment-variables">Umgebungsvariablen</a> handelt).</p>
<p>Verbessert: Alle fensterspezifischen Befehle unterstützen nun <a href="misc/WinTitle.htm#multi">mehrere Kriterien</a> (z.B. Titel+Klasse), um die Suche einzugrenzen.</p>
<p>Hinzugefügt: Interne Variable <a href="lib/LoopFile.htm#LoopFileExt">A_LoopFileExt</a>, die die Endung der Schleifendatei enthält.</p>

<h2 id="v1.0.36.01">1.0.36.01 - 28. Juni 2005</h2>
<p>Behoben: <a href="lib/FileCopy.htm">FileCopy</a> und <a href="lib/FileMove.htm">FileMove</a> vermeiden nun das Löschen einer Datei, die auf sich selbst kopiert/verschoben wird. In einem solchen Fall wertet FileCopy dies immer noch als Fehler, während FileMove dies nun als Erfolg wertet. [danke mario_a]</p>
<p>Behoben: <a href="Scripts.htm#continuation">Fortsetzungsbereiche</a>: Akzente und Kommas nach dem Wort Join ändern nicht mehr das Verhalten von Akzenten und Kommas im Bereich selbst. [danke Nemroth]</p>
<p>Hinzugefügt: <a href="lib/WinSet.htm#Top">WinSet Top</a>, mit dem versucht werden kann, ein Fenster an den Anfang des Stapels zu setzen, ohne es zu aktivieren. [danke catweazle]</p>

<h2 id="v1.0.36.00">1.0.36 - 27. Juni 2005</h2>
<p>Behoben: Doppelter Syntaxfehler für einen fehlerhaften <a href="Functions.htm">Funktionsaufruf</a> in einem <a href="lib/Block.htm">Block</a>.</p>
<p>Verbessert: <a href="lib/Process.htm#Exist">Process Exist</a> ruft nun die PID des Skripts selbst ab, wenn keine anderen Parameter angegeben sind. [danke Junyx]</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Hinzugefügt: <a href="lib/Gui.htm#GuiContextMenu">GuiContextMenu</a>, das die Anzeige von benutzerdefinierten Gui-Kontextmenüs erleichtert.</p>
<p>Hinzugefügt: <a href="lib/Gui.htm#Delimiter">Gui +Delimiter`n</a>, um das Trennzeichen zwischen Feldern zu ändern.</p>
<p>Hinzugefügt: <a href="Variables.htm#EventInfo">A_EventInfo</a>, das von <a href="misc/Clipboard.htm#OnClipboardChange">OnClipboardChange</a>, <a href="lib/GuiControls.htm#ListBox">ListBox</a>, <a href="lib/Gui.htm#GuiSize">GuiSize</a> und <a href="lib/Gui.htm#GuiDropFiles">GuiDropFiles</a> verwendet werden kann.</p>
<p>Hinzugefügt: <a href="Variables.htm#GuiEvent">A_GuiEvent</a> als ein Synonym für A_GuiControlEvent.</p>
<p>Hinzugefügt: <a href="lib/GuiControls.htm#LBRedraw">+/-Redraw</a>, um das Füllen einer ListBox zu beschleunigen.</p>
<p>Hinzugefügt: Neues Steuerelement <a href="lib/ListView.htm">ListView</a>, das eine tabellarische Ansicht von Zeilen und Spalten ist. Es bietet interne Sortierung und Unterstützung für die Anzeige von Symbolen.</p>

<h2 id="v1.0.35.16">1.0.35.16 - 20. Juni 2005</h2>
<p>Behoben: <a href="lib/_Include.htm">#Include</a> war nicht in der Lage, escapezeichenversehene Semikolons in <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a> zu erkennen.</p>
<p>Verbessert: <a href="lib/Menu.htm">Kontextmenüs</a> reaktivieren nun das zuvor aktive Fenster, bevor der Menü-Thread gestartet wird. [danke thomasl]</p>

<h2 id="v1.0.35.15">1.0.35.15 - 20. Juni 2005</h2>
<p>Verbessert: <a href="lib/Menu.htm">Kontextmenüs</a> reaktivieren nun das zuvor aktive Fenster, wenn das Menü geschlossen wird. [danke thomasl]</p>

<h2 id="v1.0.35.14">1.0.35.14 - 20. Juni 2005</h2>
<p>Behoben: <a href="lib/Menu.htm">Kontextmenüs</a> konnten nicht mit <kbd>Esc</kbd> oder durch Klicken außerhalb des Menüs geschlossen werden (fehlerhaft seit v1.0.35.12). [danke Paulo]</p>

<h2 id="v1.0.35.13">1.0.35.13 - 19. Juni 2005</h2>
<p>Behoben: Kein Absturz mehr, wenn ein <a href="Scripts.htm#ahk2exe">kompiliertes Skript</a> bestimmte unübliche Hotkeys enthält, wie z.B. <code>End &amp; a::</code>. [danke TheLeO]</p>

<h2 id="v1.0.35.12">1.0.35.12 - 18. Juni 2005</h2>
<p>Behoben: Kein Absturz mehr, wenn das Skript eine <a href="Functions.htm#BuiltIn">interne Funktion</a> überschreibt (fehlerhaft seit v1.0.35.11). [danke B_fisher]</p>
<p>Behoben: <a href="lib/IfExist.htm">IfExist</a> und <a href="Functions.htm#FileExist">FileExist()</a> funktionieren nun mit Volumenamen im <code class="no-highlight">\\?\Volume{...}</code>-Format.</p>
<p>Geändert: <a href="lib/Menu.htm">Kontextmenüs</a> außer TRAY vermeiden nun die Aktivierung des Hauptfensters des Skripts.</p>

<h2 id="v1.0.35.11">1.0.35.11 - 16. Juni 2005</h2>
<p>Verbessert: <a href="lib/_Include.htm">#Include</a> kann nun ein neues Arbeitsverzeichnis für nachfolgende Instanzen von #Include und <a href="lib/FileInstall.htm">FileInstall</a> festlegen. Außerdem ist #Include jetzt in der Lage, <a href="Variables.htm#ScriptDir">%A_ScriptDir%</a> aufzulösen. [danke Dmitry]</p>
<p>Verbessert: <a href="lib/FileInstall.htm">FileInstall</a> holt die Datei nun immer von <a href="Variables.htm#ScriptDir">A_ScriptDir</a> statt von <a href="Variables.htm#WorkingDir">A_WorkingDir</a>, wenn kein absoluter Pfad angegeben ist.</p>

<h2 id="v1.0.35.10">1.0.35.10 - 12. Juni 2005</h2>
<p>Behoben: <a href="Hotstrings.htm">Hotstrings</a> und <a href="lib/Input.htm">Input</a>: Das Drücken von <kbd>Strg</kbd>+<kbd>Alt</kbd> als Ersatz für <kbd>AltGr</kbd> wird nicht mehr gestört. [danke Laszlo]</p>
<p>Behoben: <a href="Variables.htm#TimeSinceThisHotkey">A_TimeSinceThisHotkey</a> wird nun nicht mehr von <a href="lib/Gui.htm#DefaultWin">GUI-Threads</a> verändert.</p>
<p>Hinzugefügt: Label <a href="misc/Clipboard.htm#OnClipboardChange">OnClipboardChange</a>, das jedes Mal automatisch gestartet wird, wenn sich die Zwischenablage ändert. [danke ApplePie]</p>

<h2 id="v1.0.35.09">1.0.35.09 - 10. Juni 2005</h2>
<p>Behoben: Die Steuerelemente <a href="lib/GuiControls.htm#MonthCal">MonthCal</a> und <a href="lib/GuiControls.htm#DateTime">DateTime</a>: Ein g-Label interferiert nicht mehr mit den Pfeilschaltflächen des Kalenders. [danke guivho]</p>
<p>Behoben: Beim Senden von AltGr-Zeichen lösen die automatischen LControl-Ereignisse von AltGr keine Hotkeys mehr aus. [danke Laszlo]</p>
<p>Geändert: AltSubmit-<a href="lib/GuiControls.htm#MonthCal">MonthCal</a>-Steuerelemente haben nun ein anderes Verhalten, um Defizite auszugleichen. Bitte passen Sie Ihre Skripte entsprechend an.</p>

<h2 id="v1.0.35.08">1.0.35.08 - 9. Juni 2005</h2>
<p>Behoben: Die erste Zeile eines Skripts konnte nicht <code>/*</code> sein (fehlerhaft seit 1.0.35.06). [danke Harmless]</p>

<h2 id="v1.0.35.07">1.0.35.07 - 8. Juni 2005</h2>
<p>Behoben: Hotkeys mit Strg (^), die AltGr-Zeichen wie z.B. <code>{</code> in Deutsch senden, funktionieren wieder korrekt. (fehlerhaft seit v1.0.35). [danke Hajos]</p>

<h2 id="v1.0.35.06">1.0.35.06 - 8. Juni 2005</h2>
<p>Behoben: <a href="lib/Send.htm">Send</a> unter <strong>NT4</strong> sendet AltGr-Tasten wie z.B. <code class="no-highlight">\</code> in Französisch wieder korrekt (fehlerhaft seit v1.0.35). [danke Nemroth]</p>
<p>Behoben: <code><a href="lib/SetNumScrollCapsLockState.htm">SetCapsLockState</a> Off</code>, wenn das Betriebssystem das Ausschalten von <kbd>Feststell</kbd> nur mit <kbd>Umschalt</kbd> erlaubt. [danke Teddy]</p>
<p>Verbessert: <a href="Scripts.htm#continuation">Zusammenführung von Zeilen</a>: 1) Eine Zeile, die mit <code>.</code> beginnt, wird automatisch mit der Zeile darüber verbunden. 2) Kommentare und Leerzeilen können zwischen den Fortsetzungszeilen stehen, ohne dass die Zusammenführung beeinträchtigt wird.</p>
<p>Hinzugefügt: Direktive <a href="Scripts.htm#LTrim">#LTrim</a>, um mehrere Fortsetzungsbereiche die LTrim-Einstellung verwenden zu lassen.</p>

<h2 id="v1.0.35.05">1.0.35.05 - 6. Juni 2005</h2>
<p>Behoben: <a href="lib/Gui.htm#OwnDialogs">Gui +OwnDialogs</a> wird nicht mehr durch Gui Show und andere Unterbefehle ausgeschaltet.</p>
<p>Behoben: <a href="Scripts.htm#ahk2exe">ahk2exe</a> ignoriert nicht mehr den letzten Parameter, wenn /out, /icon und /pass angegeben sind. [danke Rajat]</p>

<h2 id="v1.0.35.04">1.0.35.04 - 5. Juni 2005</h2>
<p>Behoben: <a href="Variables.htm#Expressions">Ausdrücke</a>: Operatoren ohne Leerzeichen drumherum, wie z.B. <code>x*y*z</code>, liefern nun immer korrekte Ergebnisse. [danke Mark Kantor]</p>

<h2 id="v1.0.35.03">1.0.35.03 - 4. Juni 2005</h2>
<p>Behoben: <a href="lib/GuiControls.htm#DateTime">DateTime</a>- und <a href="lib/GuiControls.htm#MonthCal">MonthCal</a>-Steuerelemente konnten nicht auf Betriebssystemen älter als XP erstellt werden.</p>
<p>Hinzugefügt: eine neue Methode zum <a href="Scripts.htm#continuation">Aufteilen langer Zeilen</a>: Eine Zeile, die mit "and", "or", ||, &amp;&amp; oder einem Komma beginnt, wird automatisch mit der Zeile direkt darüber zusammengeführt.</p>

<h2 id="v1.0.35.02">1.0.35.02 - 3. Juni 2005</h2>
<p>Behoben: Break/Continue-Syntaxfehler und andere Bugs bzgl. <a href="Scripts.htm#ahk2exe">kompilierter Skripte</a>, die mit v1.0.35.01 eingeführt wurden. [danke ranomore]</p>

<h2 id="v1.0.35.01">1.0.35.01 - 3. Juni 2005</h2>
<p>Behoben: <code><a href="lib/GuiControl.htm">GuiControl</a>,, MeinRadio|MeineCheckBox, NeuerText</code> (fehlerhaft seit v1.0.35). [danke ranomore]</p>
<p>Behoben: Bei der Kurzschreibweise <code>if not VarName</code> kann VarName nun mit B, C, I oder N beginnen.</p>
<p>Verbessert: Die Größe von <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a> wurde um ca. 5 KB reduziert (durch Weglassen unnötiger Syntaxprüfungen).</p>
<p>Verbessert: Das <a href="lib/GuiControls.htm#Hotkey">GUI-Hotkey-Steuerelement</a> benachrichtigt nun das Skript über Änderungen via g-Label.</p>
<p>Hinzugefügt: <a href="lib/Gui.htm#OwnDialogs">Modale/untergeordnete Dialogfenster</a> für GUI-Fenster: MsgBox, InputBox, FileSelectFile und FileSelectFolder.</p>

<h2 id="v1.0.35.00">1.0.35 - 1. Juni 2005</h2>
<p class="note"><strong>Hinweis:</strong> Es wurden einige Änderungen am <a href="lib/Send.htm">Send-Befehl</a> vorgenommen. Wenn eines Ihrer Skripte auf die feinen Unterschiede zwischen den linken, rechten und neutralen Modifikatortasten (Strg, Alt, Umschalt und Win) angewiesen ist, empfiehlt es sich, diese vor der Verwendung dieser Version erneut zu testen.</p>
<p>Behoben: Der <a href="lib/Send.htm">Send-Befehl</a> war nicht in der Lage, AltGr-Zeichen (wie z.B. <code class="no-highlight">\</code> und <code class="no-highlight">{</code> auf der deutschen Tastatur) an Anwendungen zu senden, die <kbd>Strg</kbd>+<kbd>Alt</kbd> als Ersatz für <kbd>AltGr</kbd> verbieten. [danke xrat]</p>
<p>Verbessert: Funktionen unterstützen nun <a href="Functions.htm#optional">optionale Parameter</a>.</p>
<p><strong>GUI:</strong></p>
<p>Behoben: Das g-Label eines <a href="lib/GuiControls.htm#Tab">Tab-Steuerelements</a> startet nun, wenn der Tabwechsel via Tastaturnavigation erfolgt. Außerdem werden Steuerelemente, die einem Tab-Steuerelement hinzugefügt werden, während das Fenster sichtbar ist, nun korrekt gezeichnet.</p>
<p>Verbessert: <a href="lib/GuiControls.htm#Edit">Edit-Steuerelemente</a> unterstützen nun g-Labels, die das Skript benachrichtigen, wenn sich der Inhalt des Eingabefeldes geändert hat.</p>
<p>Hinzugefügt: Steuerelemente <a href="lib/GuiControls.htm#DateTime">DateTime</a> und <a href="lib/GuiControls.htm#MonthCal">MonthCal</a>, die die Eingabe von Datum und/oder Uhrzeit in verschiedenen Formaten ermöglichen.</p>
<p>Hinzugefügt: Steuerelement <a href="lib/GuiControls.htm#UpDown">UpDown</a>: Zwei Pfeile als Schaltflächen, die der Benutzer drücken kann, um einen Wert zu erhöhen oder zu verringern.</p>

<h2 id="v1.0.34.00">1.0.34 - 25. Mai 2005</h2>
<p>Behoben: Joystick-Hotkeys konnten weder durch die Befehle <a href="lib/Suspend.htm">Suspend</a> und <a href="lib/Hotkey.htm">Hotkey</a> deaktiviert, noch im <a href="Scripts.htm#auto">automatischen Ausführungsbereich</a> aktiviert werden. [danke matt911]</p>
<p>Behoben: <a href="lib/Transform.htm#Deref">Transform Deref</a> unterstützt nun interne Variablen und Umgebungsvariablen, die nirgendwo im Skript direkt referenziert sind. [danke toralf]</p>
<p>Behoben: Das Programm konnte auf Windows 95/NT-Systemen ohne MSIE 3 oder höher nicht gestartet werden.</p>
<p>Behoben: <a href="lib/ListLines.htm">ListLines</a> terminierte die Auflistung manchmal vorzeitig.</p>
<p>Behoben: Mehrzeilige <a href="lib/GuiControls.htm#Edit">Edit-Steuerelemente</a>: Das Drücken von <kbd>Esc</kbd> schließt nicht mehr ein <a href="lib/Gui.htm#GuiEscape">Nicht-GuiEscape-Fenster</a>. [danke Rajat]</p>
<p>Behoben: Die Hotkeys <code>#LAlt::</code> und <code>#RAlt::</code> verhindern nun, dass das Startmenü angezeigt wird. [danke Dmitry Lyudmirsky]</p>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl</a>: Das erneute Laden eines <a href="lib/GuiControls.htm#Picture">Picture-Steuerelements</a> innerhalb eines <a href="lib/GuiControls.htm#Tab">Tab-Steuerelements</a> wird nun korrekt neu gezeichnet. [danke hanspeter]</p>
<p>Behoben: Der Aufruf von <a href="lib/VarSetCapacity.htm">VarSetCapacity()</a> innerhalb eines <a href="Variables.htm#Expressions">Ausdrucks</a> funktioniert nun korrekt.</p>
<p>Verbessert: <a href="lib/DllCall.htm">DllCall</a>: Das Suffix "A" kann bei so etwas wie MessageBoxA nun weggelassen werden, auch wenn der DLL-Name explizit angegeben ist. Außerdem kann der Buchstabe P anstelle von * verwendet werden, so dass nun alle Typen ohne Anführungszeichen angegeben werden können. [danke Jerry]</p>
<p>Hinzugefügt: <a href="Variables.htm#divide">Floor-Division-Operator <code>//</code></a> für hochperformante Integer-Division.</p>
<p>Hinzugefügt: <a href="Functions.htm#BuiltIn">Interne Funktionen</a> Abs, ACos, Asc, ASin, ATan, Ceil, Chr, Cos, Exp, FileExist, Floor, GetKeyState, InStr, Ln, Log, Mod, Round, Sin, Sqrt, Tan und StrLen.</p>

<h2 id="v1.0.33.01">1.0.33.01 - 17. Mai 2005</h2>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl</a> war manchmal nicht in der Lage, die Standardschaltfläche oder den Style einer Schaltfläche zu ändern. Außerdem wurde ein Absturz behoben, der auftreten konnte, wenn GuiControl versucht, eine Standardschaltfläche zu setzen, obwohl vorher keine vorhanden war. [danke hanspeter]</p>
<p>Verbessert: <a href="lib/DllCall.htm">DllCall</a>-Argumenttypen ohne Sternchen und Leerzeichen können nun ohne Anführungszeichen angegeben werden.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/Gui.htm#Margin">Gui Margin</a>, mit dem der Standardabstand eines Fensters überschrieben werden kann.</p>

<h2 id="v1.0.33.00">1.0.33 - 13. Mai 2005</h2>
<p>Behoben: <a href="lib/IfMsgBox.htm">IfMsgBox</a> war nicht in der Lage, eine Zeitüberschreitung für eine <a href="lib/MsgBox.htm">MsgBox</a> zu erkennen, die nur eine OK-Schaltfläche enthält. [danke Mats]</p>
<p>Hinzugefügt: Funktion <a href="lib/VarSetCapacity.htm">VarSetCapacity()</a>, mit der eine Variable vergrößert oder verkleinert werden kann.</p>
<p>Hinzugefügt: Funktion <a href="lib/DllCall.htm">DllCall()</a>, mit der eine Funktion innerhalb einer DLL aufgerufen werden kann. [entwickelt von Marcus Sonntag (Ultra)]</p>

<h2 id="v1.0.32.00">1.0.32 - 5. Mai 2005</h2>
<p>Verbessert: <a href="lib/_Include.htm">#Include</a>: Dem Dateinamen kann <code class="no-highlight">*i</code> gefolgt von einem Leerzeichen vorangestellt werden, um etwaige Dateifehler zu ignorieren. [danke Tekl]</p>
<p>Hinzugefügt: Steuerelementoption +/-Theme (<a href="lib/Gui.htm">GUI</a>). Dies kann auch zum Erstellen eines Tab-Steuerelements im aktuellen Windows-Design verwendet werden. [danke Titan]</p>
<p>Hinzugefügt: Eine Methode zum Aufteilen langer Zeilen in mehrere kleinere. Dies ist besonders nützlich für <a href="Hotstrings.htm">Hotstrings</a> und <a href="lib/FileAppend.htm">FileAppend</a>. Siehe <a href="Scripts.htm#continuation">Zeilenfortsetzung</a>. [Danke an alle Beteiligten]</p>

<h2 id="v1.0.31.07">1.0.31.07 - 29. April 2005</h2>
<p>Behoben: <a href="lib/WinSet.htm#region">WinSet Region</a> war nicht in der Lage, die ursprüngliche Region korrekt wiederherzustellen, was eine Maximierung des Fensters verhinderte. [danke AntonyB &amp; Skrommel]</p>

<h2 id="v1.0.31.06">1.0.31.06 - 27. April 2005</h2>
<p>Verbessert: <a href="lib/ImageSearch.htm">ImageSearch</a> ist jetzt viel nützlicher: 1) Symbole werden unterstützt (auch solche mit transparenten Bereichen); 2) PNG, TIF, ICO und andere Bildformate werden unterstützt; 3) Ähnliche Bilder können gefunden werden, indem man ermöglicht, dass die Farben des Bildes um einen bestimmten Betrag variieren; 4) Der Abgleich ist ein wenig nachsichtiger, da das "mysteriöse Byte" jeder Pixelfarbe ignoriert wird. [danke Aurelian Maga]</p>

<h2 id="v1.0.31.05">1.0.31.05 - 19. April 2005</h2>
<p>Behoben: <a href="Variables.htm#Index">A_Index</a>, <a href="lib/LoopFile.htm">A_LoopFileName</a> und ähnliche Variablen, die in mehr als einem Parameter eines Befehls verwendet werden, der Funktionen aufruft. Außerdem kann eine Funktion nun auf den Inhalt dieser Variablen des Aufrufers zugreifen. [danke corrupt]</p>
<p>Behoben: Ungenaue Zeilennummern von <a href="Functions.htm">Funktionsaufrufen</a>. Dies betrifft <a href="Variables.htm#LineNumber">A_LineNumber</a>, <a href="lib/ListLines.htm">ListLines</a> und Fehlerdialogfenster. [danke Laszlo]</p>

<h2 id="v1.0.31.04">1.0.31.04 - 15. April 2005</h2>
<p>Behoben: Verschiedene Fälle, in denen normale Zeilen fälschlicherweise als <a href="Functions.htm">Funktionsaufrufe</a> erkannt wurden. [danke Payam &amp; Jon]</p>

<h2 id="v1.0.31.03">1.0.31.03 - 14. April 2005</h2>
<p>Behoben: <a href="lib/ImageSearch.htm">ImageSearch</a>: Teilübereinstimmungen an den Rändern des Suchbereichs werden nicht mehr als vollständige Übereinstimmungen behandelt. [danke Invalid User]</p>
<p>Behoben: Labels konnten keine runden Klammern enthalten (fehlerhaft seit v1.0.31). [danke Jon]</p>

<h2 id="v1.0.31.02">1.0.31.02 - 13. April 2005</h2>
<p>Behoben: Die <a href="misc/Clipboard.htm">Clipboard-Variable</a> erzeugt nun keinen Fehler mehr, wenn eine Gruppe von Null-Dateien in die Zwischenablage kopiert wurde. [danke Serenity &amp; Tekl]</p>
<p>Behoben: <a href="lib/Gui.htm#GuiDropFiles">GuiDropFiles</a> und <a href="lib/Gui.htm#Options">Gui +/-Optionen</a> werden nun nicht mehr die <a href="lib/WinSet.htm">Transparenz</a> eines Fensters oder andere Effekte entfernen. [danke toralf]</p>

<h2 id="v1.0.31.01">1.0.31.01 - 11. April 2005</h2>
<p>Behoben: Teilausdrücke in <a href="Functions.htm">Funktionsparametern</a> gaben falsche Ergebnisse zurück; z.B. <code>Add(2*3,3)</code>. [danke Laszlo]</p>
<p>Behoben: Eine runde Startklammer wird nicht mehr als Syntaxfehler behandelt, wenn sie nach einem Befehl verwendet wird, dem das erste Komma fehlt, z.B. <code>MsgBox ()</code>. [danke Laszlo]</p>

<h2 id="v1.0.31.00">1.0.31 - 8. April 2005</h2>
<p class="note"><strong>Hinweis:</strong> Obwohl diese Version ausgiebig getestet wurde, wurden einige Low-Level-Änderungen vorgenommen. Es wird empfohlen, wichtige Skripte erneut zu testen -- oder zwei Wochen zu warten, bis alle Bugs behoben sind -- bevor Sie diese Version verwenden.</p>
<p>Behoben: <a href="lib/SetTimer.htm">Timer</a> konnten sich nicht mehr selbst zurücksetzen. Wenn z.B. <code>SetTimer, MeinTimer</code> innerhalb der Subroutine MeinTimer ausgeführt wird, beginnt der Timer auf den Ablauf eines völlig neuen Intervalls zu warten, bevor er fortfährt.</p>
<p>Behoben: Der Syntaxprüfer meldete runde Klammern in Anführungszeichen gesetzte Zeichenketten als unbalanciert.</p>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl</a> kann nun das ReadOnly-Attribut eines <a href="lib/GuiControls.htm#Edit">Edit-Steuerelements</a> ändern. [danke Bahri]</p>
<p>Geändert: <a href="Variables.htm#Expressions">Ausdrücke</a>: Referenzen, die auf ungültige <a href="misc/Arrays.htm">dynamische Variablen</a> verweisen, wie z.B. <code>Array%VarMitLeerzeichen%</code>, führen nun zu einer Laufzeitwarnung.</p>
<p>Geändert: Die Priorität der Verkettung von Zeichenketten in Ausdrücken wurde herabgesetzt. Es ist zwar unwahrscheinlich, dass dies Einfluss auf bestehende Skripte hat, aber im Zweifelsfall können Sie die nach Priorität sortierte <a href="Variables.htm#Operators">Operatortabelle</a> konsultieren.</p>
<p>Verbessert: Die <a href="Variables.htm#Operators">Verkettung von Zeichenketten</a> in Ausdrücken kann nun mit allem (z.B. <a href="misc/Arrays.htm">Arrays</a> und Teilausdrücke) verwendet werden. Außerdem kann ein Punkt als Verkettungsoperator verwendet werden, um die Lesbarkeit des Skripts zu verbessern.</p>
<p>Verbessert: <a href="misc/Arrays.htm">Dynamische Variablen</a> wie z.B. <code>Array%i%</code> sind bis zu 1000-mal schneller. Ein Skript kann nun mehrere Millionen Variablen enthalten, ohne dass es zu einer nennenswerten Verlangsamung kommt. [danke Laszlo]</p>
<p>Verbessert: <a href="lib/GuiControl.htm">GuiControl</a> und <a href="lib/GuiControlGet.htm">GuiControlGet</a> sind nun performanter, wenn sie auf ein Fenster mit Hunderten von Steuerelementen angewendet werden.</p>
<p>Verbessert: <a href="Variables.htm#Expressions">Ausdrücke</a>, die viele ANDs und ORs verwenden, sind nun dank <a href="Functions.htm#ShortCircuit">boolescher Kurzschlussauswertung</a> schneller.</p>
<p>Verbessert: Bessere Speicherverwaltung in Skripten, die Tausende von Variablen verwenden, durch Hinzufügen von zwei neuen Variablenkapazitäten: 1 und 6. Bisher war die kleinste Kapazität (außer Null) 63.</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#LineNumber">A_LineNumber</a> und <a href="Variables.htm#LineFile">A_LineFile</a>, die die Nummer der aktuell ausgeführten Zeile und den Namen der zugehörigen Datei enthalten. [danke toralf]</p>
<p>Hinzugefügt: Direktive <a href="lib/_ClipboardTimeout.htm">#ClipboardTimeout</a>, mit der die Dauer des Versuchs, die <a href="misc/Clipboard.htm">Zwischenablage</a> zu öffnen, festgelegt werden kann (Standard ist 1000 ms). [danke Tekl &amp; Jason Payam Ahdoot]</p>
<p>Hinzugefügt: Es ist nun möglich, Parameter zu übergeben und Rückgabewerte von Funktionen zu erhalten. Funktionen unterstützen auch lokale Variablen. Außerdem kann <a href="lib/ListVars.htm">ListVars</a> den Inhalt von lokalen Variablen anzeigen, um das Debuggen zu erleichtern. Weitere Informationen finden Sie unter <a href="Functions.htm">Funktionen</a>.</p>

<h2 id="v1.0.30.04">1.0.30.04 - 14. März 2005</h2>
<p>Behoben: Kein Absturz mehr, wenn ein <a href="lib/Gui.htm">GUI-Fenster</a> zerstört und im selben <a href="misc/Threads.htm">Thread</a> neu erstellt wird. [danke corrupt]</p>

<h2 id="v1.0.30.03">1.0.30.03 - 12. März 2005</h2>
<p class="note"><strong>Hinweis:</strong> Diese Version umfasst ausschließlich kleinere Änderungen.</p>
<p>Geändert: Das Tray-Symbol-Menü öffnet sich nun erst, wenn die rechte Maustaste losgelassen wird. Dies ermöglicht das Öffnen des Menüs über eine <a href="misc/Remap.htm">neubelegte</a> rechte Maustaste. [danke eamat]</p>
<p>Geändert: <a href="lib/WinGet.htm#Count">WinGet Count</a> ruft nun alle Fenster auf dem System ab, anstatt das <a href="misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a>, wenn alle vier Fensterparameter leer sind.</p>
<p>Verbessert: <a href="Scripts.htm#ahk2exe">Kompilierte Skripte</a> verstecken nun den Quellcode des Skripts, wenn ein Laufzeitfehler auftritt (z.B. wenn versucht wird, eine nicht-existierende Datei zu starten). Dieses Verstecken kann mit <code><a href="lib/Menu.htm">Menu</a>, Tray, MainWindow</code> deaktiviert werden. [danke Rajat]</p>
<p>Verbessert: <a href="lib/StringGetPos.htm">StringGetPos</a> kann nun optional eine bestimmte Anzahl von Zeichen ganz links oder ganz rechts überspringen. [danke Tekl]</p>
<p>Verbessert: <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> lässt nun alle redundanten CF_METAFILEPICT-Daten weg, was Platz spart.</p>
<p>Verbessert: Tabulatorzeichen in <a href="lib/GuiControls.htm#ListBox">ListBox</a>-Steuerelementen werden nicht mehr als leere Quadrate angezeigt. Außerdem können jetzt Tabstopps hinzugefügt oder geändert werden, nachdem das Steuerelement erstellt wurde.</p>
<p>Verbessert: Die folgenden Befehle unterstützen nun Ausdrücke für ihre numerischen Parameter: <a href="lib/Transform.htm">Transform</a>, <a href="lib/FileReadLine.htm">FileReadLine</a>, <a href="lib/FileSelectFolder.htm">FileSelectFolder</a>, <a href="lib/FileSetAttrib.htm">FileSetAttrib</a> und <a href="lib/FileSetTime.htm">FileSetTime</a>.</p>

<h2 id="v1.0.30.02">1.0.30.02 - 8. März 2005</h2>
<p>Behoben: <a href="lib/WinGet.htm#List">WinGet List</a> (teilweise fehlerhaft seit v1.0.30). [danke twwilliams]</p>
<p>Geändert: <a href="lib/WinGet.htm#List">WinGet List</a> ruft nun alle Fenster auf dem System ab, anstatt das <a href="misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a>, wenn alle vier Fensterparameter leer sind.</p>
<p>Verbessert: "<a href="lib/ListLines.htm">Lines most recently executed</a>" (zuletzt ausgeführte Zeilen): Wenn ein wartender Thread nach einer Unterbrechung wieder aufgenommen wird, wird der wartende Befehl (z.B. <a href="lib/WinWait.htm">WinWait</a>) am Ende der Liste angezeigt, was hilft, "hängende" <a href="misc/Threads.htm">Threads</a> zu erkennen. Außerdem zeigt "lines most recently executed" jetzt 400 statt 200 Zeilen an.</p>

<h2 id="v1.0.30.01">1.0.30.01 - 7. März 2005</h2>
<p>Behoben: <a href="lib/GroupDeactivate.htm">GroupDeactivate</a> (teilweise fehlerhaft seit v1.0.30).</p>
<p>Behoben: Es wird nun eine Fehlermeldung angezeigt, wenn <a href="lib/Menu.htm#Delete">Menu Delete/DeleteAll</a> auf ein Untermenü einer <a href="lib/Gui.htm#Menu">Menüleiste</a> angewendet wird und fehlschlägt. [danke Landvermesser]</p>

<h2 id="v1.0.30.00">1.0.30 - 5. März 2005</h2>
<p>Behoben: Maus-Hotkeys mit <kbd>Win</kbd>+<kbd>Strg</kbd> oder <kbd>Win</kbd>+<kbd>Umschalt</kbd> als <a href="Hotkeys.htm">Modifikatoren</a> zeigen nicht mehr das Startmenü an. [danke Mythos]</p>
<p>Behoben: <a href="lib/WinSet.htm#Style">WinSet Style|ExStyle</a> setzt <a href="misc/ErrorLevel.htm">ErrorLevel</a> nun auf 1, wenn das Zielfenster nicht existiert.</p>
<p>Geändert: "<a href="lib/GroupClose.htm">GroupClose</a> All" schließt nun auch versteckte Fenster, wenn <a href="lib/DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>
<p>Verbessert: Variablen, denen <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a> zugewiesen wurde, können nun miteinander verglichen werden, wie in diesem Beispiel [danke Jerry]:</p>
<pre>if ClipSicherung1 &lt;&gt; %ClipSicherung2% <em>; Muss eine altmodische IF-Anweisung sein, kein <a href="Variables.htm#Expressions">Ausdruck</a>.</em></pre>
<p>Verbessert: <a href="lib/GuiControls.htm#ListBox">ListBox</a>-Steuerelemente haben nun eine Option zum Setzen von benutzerdefinierten Tabstopps. [danke jonny]</p>
<p>Verbessert: <a href="lib/Progress.htm">Progress</a> und <a href="lib/Progress.htm">SplashImage</a> haben nun eine Hide-Option, mit der das Fenster zunächst versteckt erstellt werden kann. Mit "Progress Show" oder "SplashImage Show" kann das Fenster später wieder sichtbar gemacht werden.</p>
<p>Verbessert: <a href="Hotstrings.htm">Hotstrings</a> haben nun eine Z-Option, die den Hotstring-Erkenner zurücksetzt, wann immer der Hotstring ausgelöst wird. Das Skript wartet auf einen völlig neuen Hotstring und verwirft alles, was Sie zuvor eingegeben haben. [danke dennisbgoode]</p>
<p>Hinzugefügt: Unterbefehle <a href="lib/WinSet.htm#Disable">WinSet Disable/Enable</a>, mit denen die Interaktion mit einem Fenster verboten oder wieder erlaubt werden kann.</p>
<p>Hinzugefügt: ahk_group, mit dem ein oder mehrere Fenster identifiziert werden können, die den Regeln einer zuvor definierten <a href="lib/GroupAdd.htm">Fenstergruppe</a> entsprechen. Beispiel: <code>IfWinExist ahk_group %MeineGruppe%</code>. Außerdem kann eine ganze Gruppe von Fenstern minimiert, maximiert, wiederhergestellt, versteckt, sichtbar gemacht oder geschlossen werden (z.B. <code>WinMinimize ahk_group MeineGruppe</code>). [danke Rajat]</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/WinSet.htm#Region">WinSet Region</a>, mit dem der Anzeigebereich eines Fensters in eine Ellipse, ein Rechteck oder ein Polygon geändert werden kann. Damit können Teile eines Fensters unsichtbar gemacht werden. [danke skrommel]</p>

<h2 id="v1.0.29.00">1.0.29 - 28. Februar 2005</h2>
<p>Behoben: Dinge wie <code>Sleep %Sekunden%000</code> (fehlerhaft seit v1.0.25). [danke Mayhem]</p>
<p>Behoben: Der <a href="lib/Input.htm">Input</a>-Befehl erfasst Großbuchstaben und Steuerzeichen nun korrekt, wenn er sich nicht im Sichtbar-Modus (V) befindet.</p>
<p>Behoben: <a href="Hotkeys.htm">Taste-Oben-Hotkeys</a> funktionieren nun mit den neutralen Tasten <kbd>Strg</kbd>, <kbd>Umschalt</kbd> und <kbd>Alt</kbd>. [danke jonny]</p>
<p>Geändert: <a href="Scripts.htm#ahk2exe">Kompilierte Skripte</a> haben nun immer ihre .exe-Dateiendung am Ende ihres Namens, zwecks <a href="Variables.htm#ScriptFullPath">A_ScriptFullPath</a> und Standardfenstertitel. So kann <a href="lib/_SingleInstance.htm">#SingleInstance</a> auch dann funktionieren, wenn das Skript ohne Dateiendung über die Befehlszeile gestartet wird. [danke Mythos]</p>
<p>Verbessert: <a href="lib/ClipWait.htm">ClipWait</a> kann nun auf beliebige Daten warten, nicht nur auf Text und Dateien.</p>
<p>Es ist möglich, einen <a href="Variables.htm#Expressions">Ausdruck</a> in einem Parameter zu verwenden, der dies nicht direkt unterstützt, indem ihm ein Prozentzeichen gefolgt von einem Leer- oder Tabulatorzeichen vorangestellt wird. Meistens wird dies für den Zugriff auf <a href="misc/Arrays.htm">Arrays</a> verwendet [danke JSLover]. Beispiele:</p>
<pre>FileAppend, % MeinArray%i%, Meine Datei.txt
MsgBox % "Die MeineVar-Variable enthält " MeineVar "."
Control, Choose, % AktuelleAuswahl - 1</pre>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#MSec">A_MSec</a>, die die Millisekunde der aktuellen Zeit enthält. [danke JSLover]</p>
<p>Hinzugefügt: Interne Variable <a href="misc/Clipboard.htm#ClipboardAll">ClipboardAll</a>, die alles enthält, was sich in der Zwischenablage befindet, wie Bilder und Formatierungen. Dies kann verwendet werden, um die Zwischenablage in den Speicher oder in eine Datei zu speichern und später wiederherzustellen. Zum Beispiel:</p>
<pre>ClipSicherung = %ClipboardAll%
Clipboard = %ClipSicherung%  <em>; Erfolgt zu einem späteren Zeitpunkt, um den ursprünglichen Inhalt wiederherzustellen.</em>
FileAppend, %ClipboardAll%, C:\Gespeicherte Zwischenablage.bin  <em>; Zwischenablage in eine Datei speichern.</em>
FileRead, Clipboard, *c C:\Gespeicherte Zwischenablage.bin  <em>; Wiederherstellen aus einer Datei via *c-Option.</em></pre>

<h2 id="v1.0.28.01">1.0.28.01 - 23. Februar 2005</h2>
<p>Verbessert: <a href="lib/FileAppend.htm">FileAppend</a> und <a href="lib/LoopReadFile.htm">dateilesende Schleifen</a> können nun auch Text in die Standardausgabe (stdout) schreiben, indem ein Sternchen als Dateiname verwendet wird. Obwohl ein solcher Text auf eine Datei umgeleitet, an eine EXE-Datei weitergeleitet oder von <a href="lib/_ErrorStdOut.htm">umfangreichen Texteditoren</a> abgefangen werden kann, erscheint er nicht in der Eingabeaufforderung, von der aus er gestartet wurde (ein Workaround finden Sie unter <a href="lib/FileAppend.htm">FileAppend</a>). Zum Beispiel könnte man folgendes in der Eingabeaufforderung schreiben:</p>
<pre class="no-highlight">"%ProgramFiles%\AutoHotkey\AutoHotkey.exe" "Mein Skript.ahk" &gt;"Fehlerprotokoll.txt"</pre>

<h2 id="v1.0.28.00">1.0.28 - 22. Februar 2005</h2>
<p>Verbessert: Der Textparameter von <a href="lib/FileAppend.htm">FileAppend</a> kann weggelassen werden, um eine leere Datei zu erstellen oder den Zeitstempel einer bestehenden Datei zu aktualisieren. [danke JSLover]</p>
<p>Der folgende v1.0.26-Fix wurde rückgängig gemacht, da er nicht mehr benötigt wird: "Behoben: <a href="Hotkeys.htm">Hotkeys</a> wie <code>a &amp; b::</code> werden als <code>~a &amp; b::</code> gesehen, wenn <code>~a::</code> auch als Hotkey existiert, und umgekehrt." In so einem Fall bewirkt der Hotkey <code>~a::</code>, dass jedes Mal ein A-Tastendruck gesendet wird, wenn A nicht gedrückt gehalten wurde, um eine andere Taste wie B zu modifizieren.</p>
<p>Verbessert: <a href="lib/SoundPlay.htm">SoundPlay</a> kann nun vordefinierte Systemsounds abspielen (Hand, Frage, Ausruf und Sternchen). [danke Mythos]</p>
<p>Verbessert: Das Tray-Symbol kann nun so geändert werden, dass es nicht mehr von <a href="lib/Pause.htm">Pause</a> und <a href="lib/Suspend.htm">Suspend</a> beeinflusst wird. Das Symbol kann "eingefroren" werden, indem als letzter Parameter des <a href="lib/Menu.htm">Menu</a>-Befehls die Zahl 1 angegeben wird. Beispiel: <code>Menu, Tray, Icon, C:\Mein Symbol.ico, , 1</code></p>
<p>Hinzugefügt: ahk_pid, mit dem ein oder mehrere Fenster identifiziert werden können, die einem <a href="lib/Process.htm">Prozessidentifikator (PID)</a> entsprechen. Beispiel: <code>WinClose ahk_pid %VarMitPID% <em>; Schließt nur das erste gefundene Fenster.</em></code></p>
<p>Hinzugefügt: Befehl <a href="lib/SoundBeep.htm">SoundBeep</a>, mit dem ein Ton über den PC-Lautsprecher erzeugt werden kann. [danke Tekl]</p>
<p>Hinzugefügt: Unterstützung für <a href="Hotkeys.htm">Hotkeys</a>, die beim Loslassen einer Taste ausgelöst werden. Beispiele:</p>
<pre>*LWin::Send {LControl down}
*LWin Up::Send {LControl up}
^!r Up::MsgBox Sie haben STRG+ALT+R gedrückt und losgelassen.</pre>

<h2 id="v1.0.27.01">1.0.27.01 - 17. Februar 2005</h2>
<p>Behoben: <a href="lib/Gui.htm#Options">Gui -Caption</a> (und möglicherweise andere) funktionieren nun auch, wenn das Fenster sichtbar ist. [danke Watcher]</p>
<p>Behoben: Bei der Erstellung eines <a href="lib/GuiControls.htm#Progress">GUI-Fortschrittsbalkens</a> ist nun eine Startposition außerhalb des Bereichs 0-100 möglich. [danke kapege.de]</p>

<h2 id="v1.0.27.00">1.0.27 - 15. Februar 2005</h2>
<p>Geändert: <a href="Variables.htm#OSVersion">A_OSVersion</a> gibt nun WIN_2003 für Windows Server 2003 zurück.</p>
<p>Behoben: <a href="lib/PostMessage.htm">Post/SendMessage</a> kann nun wie vorgesehen via <code class="no-highlight">ahk_id 0xFFFF</code> an ALLE Fenster broadcasten. [danke Mythos]</p>
<p>Geändert: Wenn Sie <a href="lib/PostMessage.htm">Post/SendMessage</a> verwenden, um via <a href="lib/Menu.htm">Menu</a>-Befehl erstellte Menüpunkte auszulösen, beachten Sie, dass jede ID nun 10.000 höher ist als zuvor.</p>
<p>Verbessert: <a href="lib/Run.htm">RunWait</a> unterstützt nun <em>AusgabeVarPID</em> (wie der Run-Befehl).</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#IsCompiled">A_IsCompiled</a> und <a href="Variables.htm#IsSuspended">A_IsSuspended</a>, die 1 enthalten, wenn das Skript kompiliert bzw. suspendiert ist. [danke Mythos]</p>
<p>Hinzugefügt: Befehl <a href="lib/OutputDebug.htm">OutputDebug</a> zum Senden einer Zeichenkette, die von einem beliebigen Debugger (falls vorhanden) angezeigt werden kann. [danke procyon]</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Behoben: Fenster mit <a href="lib/GuiControls.htm#Tab">Tab-Steuerelementen</a>: Steuerelemente außerhalb des Tab-Steuerelements waren manchmal unsichtbar, wenn das Fenster zum ersten Mal angezeigt wurde. [danke ranomore]</p>
<p>Geändert: <a href="lib/GuiControl.htm#options">GuiControl +/-Optionen</a> setzt ErrorLevel nun auf 1 (Misserfolg), wenn keiner der angegebenen Styles angewendet werden darf.</p>
<p>Verbessert: Die maximale Anzahl von GUI-Fenstern wurde von 10 auf 99 erhöht. Die maximale Anzahl von Steuerelementen pro Fenster wurde von 1000 auf 11000 erhöht.</p>

<h2 id="v1.0.26.01">1.0.26.01 - 11. Februar 2005</h2>
<p>Behoben: Das PSPad-Editor-Installationsskript erstellt nun die AutoHotkey.ini-Datei im Syntax- bzw. Kontextordner von PSPad (und zwei weitere kleinere Fehlerbehebungen). [danke RobOtter &amp; beardboy]</p>
<p>Hinzugefügt: Direktive <a href="lib/_KeyHistory.htm">#KeyHistory</a>, mit der die maximale Anzahl von Tastatur- und Mausereignissen, die im <a href="lib/KeyHistory.htm">KeyHistory</a>-Fenster angezeigt werden, bestimmt werden kann. Mit 0 kann der Tastenverlauf deaktiviert werden. [danke Mythos]</p>

<h2 id="v1.0.26.00">1.0.26 - 10. Februar 2005</h2>
<p>Behoben: <a href="lib/LoopFile.htm#LoopFileLongPath">A_LoopFileLongPath</a> wird nicht mehr lange Dateinamen kürzen, die aus kurzen Dateinamen erzeugt wurden. [danke deXter &amp; jonny]</p>
<p>Behoben: <a href="lib/EnvDiv.htm">EnvDiv</a> und <a href="lib/Transform.htm#Mod">Transform Mod</a> erlauben nun Werte zwischen -1.0 und 1.0. [danke Mythos]</p>
<p>Behoben: <a href="Hotkeys.htm">Hotkeys</a> wie <code>a &amp; b::</code> werden als <code>~a &amp; b::</code> gesehen, wenn <code>~a::</code> auch als Hotkey existiert, und umgekehrt. [danke jonny]</p>
<p>Behoben: Unerwünschte Interaktion zwischen <a href="Hotkeys.htm">Hotkeys</a>. Wenn man z.B. die Hotkeys <code>CapsLock &amp; A::</code> und <code>MButton::</code> verwendet und die mittlere Maustaste drückt, während man <kbd>Feststell</kbd> gedrückt hält, wird <kbd>Feststell</kbd> wie erwartet ein- bzw. ausgeschaltet.</p>
<p>Geändert: <code><a href="lib/MouseClick.htm">MouseClick</a> WheelUp|WheelDown</code> ignoriert nun <a href="lib/SetMouseDelay.htm">SetMouseDelay</a>. Dies war notwendig, um eine Verlangsamung von Mausrad-Hotkeys zu vermeiden, und auch, weil eine Verzögerung in den meisten Fällen unerwünscht ist.</p>
<p>Verbessert: Die Syntax- und Clipdateien im Extras-Ordner von PSPad (Editor). [bereitgestellt von GoGoGadgetScott &amp; beardboy]</p>
<p>Verbessert: <a href="lib/PostMessage.htm">SendMessage</a> und <a href="lib/PostMessage.htm">PostMessage</a> unterstützen nun <code class="no-highlight">ahk_id 0xFFFF</code>, das zum Senden von HWND_BROADCAST-Meldungen an alle Fenster im System verwendet werden kann. [danke Mythos]</p>
<p>Hinzugefügt: Ein schneller Suchmodus für <a href="lib/PixelSearch.htm">PixelSearch</a>, der bis zu 100-mal schneller ist als der langsame Suchmodus, insbesondere für große Suchbereiche wie den gesamten Bildschirm. [entwickelt von Aurelian Maga]</p>
<p>Hinzugefügt: Befehl <a href="lib/ImageSearch.htm">ImageSearch</a>, mit dem nach einem Bild auf dem Bildschirm gesucht werden kann. [entwickelt von Aurelian Maga]</p>
<p>Hinzugefügt: Unterbefehle <a href="lib/WinGet.htm#Transparent">WinGet Transparent</a> und <a href="lib/WinGet.htm#TransColor">WinGet TransColor</a>. Außerdem wurde der Unterbefehl <a href="lib/WinSet.htm#Redraw">WinSet Redraw</a> hinzugefügt, mit dem ein Fenster durch Neuzeichnen aktualisiert werden kann. [danke Mythos]</p>
<p>Hinzugefügt: Unterbefehle <a href="lib/WinSet.htm#Style">WinSet Style|ExStyle</a> und <a href="lib/Control.htm#Style">Control Style|ExStyle</a>, mit denen die Styles von Fenstern und Steuerelementen, die nicht zum Skript gehören, geändert werden können.</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Behoben: Gui +/-Disabled und Gui +/-AlwaysOnTop. Außerdem ist es nicht mehr notwendig, danach <a href="lib/Gui.htm#Show">Gui Show</a> zu machen. [danke beardboy]</p>
<p>Behoben: Ein <a href="lib/GuiControls.htm#Progress">Fortschrittsbalken</a> konnte nicht auf die Standardfarbe zurückgesetzt werden. [danke toralf]</p>
<p>Verbessert: "Checked", "Disabled" und "Hidden" erkennen nun 1 oder 0 als optionales Suffix. Beispiel: <code>Gui, Add, CheckBox, Disabled%VarMitEins% Checked%VarMitEins%</code>. [danke MikeG]</p>

<h2 id="v1.0.25.14">1.0.25.14 - 5. Februar 2005</h2>
<p>Behoben: <a href="Hotstrings.htm">Hotstrings</a> interferieren nicht mehr mit toten AltGr-Tasten (diakritische Zeichen) wie Tilde (~). [danke zorglups &amp; /Torben]</p>
<p>Hinzugefügt: Interne Variable <a href="lib/LoopFile.htm#LoopFileLongPath">A_LoopFileLongPath</a>, die die Limitierungen von A_LoopFileFullPath umgeht. [danke Hugo]</p>
<p>Behoben: +AlwaysOnTop funktioniert nun auch, wenn das <a href="lib/Gui.htm">GUI-Fenster</a> bereits existiert. [danke kmel]</p>
<p>Verbessert: <a href="lib/Gui.htm#Show">Gui Show</a> wurde geringfügig geändert, um konsistentere Ergebnisse zu liefern, insbesondere bei Fenstern mit Tab-Steuerelementen.</p>

<h2 id="v1.0.25.13">1.0.25.13 - 4. Februar 2005</h2>
<p>Behoben: Das Anwenden von <a href="lib/Gui.htm#Options">Optionen oder Styles</a> auf ein bestehendes GUI-Fenster verhindert, dass das Fenster angezeigt wird, wenn es versteckt oder minimiert ist.</p>
<p>Hinzugefügt: Neue Optionen für <a href="lib/Gui.htm#Show">Gui Show</a>: Minimize, Maximize, Restore, NoActivate, NA und Hide. [danke kmel]</p>
<p>Hinzugefügt: Neue <a href="lib/Gui.htm#Options">GUI-Fenster-Optionen</a>: +/-Disabled, +/-AlwaysOnTop und +/-LastFound. Die LastFound-Option setzt das Fenster auf das zuletzt gefundene Fenster, sodass Befehle wie <a href="lib/WinSet.htm">WinSet</a> mit dem Fenster arbeiten können, auch wenn es versteckt ist.</p>

<h2 id="v1.0.25.12">1.0.25.12 - 2. Februar 2005</h2>
<p>Behoben: <a href="lib/RunAs.htm">RunAs</a> kann nun mehr als einmal verwendet werden. [danke MikeG]</p>
<p>Behoben: <code><a href="lib/Menu.htm">Menu</a>, MeinMenü, Standard</code> erstellt nun das Menü, wenn es noch nicht existiert. [danke Mythos]</p>
<p>Behoben: <code>if Var</code> und <code><a href="lib/IfExpression.htm">if</a> (Ausdruck)</code> behandeln nicht-numerische Zeichenketten nun als "true", wie dokumentiert. [danke Mythos]</p>
<p>Behoben: <a href="Variables.htm#BuiltIn">Interne Variablen</a> können nun dynamisch referenziert werden, auch wenn sie nie direkt referenziert werden. Beispiel: <code>A_IPAddress%A_Index%</code></p>
<p>Geändert: <a href="misc/ErrorLevel.htm">ErrorLevel</a>: Sein vorheriger Wert ist nun für Befehle verfügbar, die ihm einen neuen Wert geben. Beispiel: <code>StringReplace, AusgabeVar, ErrorLevel, EndKey:</code></p>
<p>Geändert: Das Zeilenvorschubzeichen (`n) wird nun als <kbd>Enter</kbd> statt als <kbd>Strg</kbd>+<kbd>Enter</kbd> gesendet. Dadurch funktioniert auch <code>SendRaw <a href="Variables.htm#EndChar">%A_EndChar%</a></code> korrekt, wenn der Benutzer <kbd>Enter</kbd> drückt, um einen <a href="Hotstrings.htm">Hotstring</a> zu vollenden. [danke Andreas Borutta]</p>

<h2 id="v1.0.25.11">1.0.25.11 - 31. Januar 2005</h2>
<p>Behoben: <a href="lib/StringReplace.htm">StringReplace</a> (fehlerhaft seit v1.0.25) funktioniert nun wieder korrekt mit langen Zeichenketten, die mehr als 20 Ersetzungen erfordern. [danke jordi]</p>
<p>Behoben: Es ist nun möglich, <a href="lib/GuiControl.htm">GuiControl</a> zu verwenden, um die Optionen und Styles eines GUI-<a href="lib/GuiControls.htm#Picture">Picture</a>-Steuerelements zu ändern, das ein Symbol anzeigt. [danke toralf]</p>

<h2 id="v1.0.25.10">1.0.25.10 - 30. Januar 2005</h2>
<p>Behoben: Der <a href="lib/Input.htm">Input</a>-Befehl erfasst Großbuchstaben nun korrekt, die von <a href="lib/Send.htm">Send-Befehlen</a> und <a href="Hotstrings.htm">Hotstring</a>-Ersetzungen stammen.</p>
<p>Verbessert: Die maximale Anzahl von Steuerelementen pro <a href="lib/Gui.htm">GUI-Fenster</a> wurde von 500 auf 1000 erhöht.</p>
<p>Verbessert: <a href="lib/MouseGetPos.htm">MouseGetPos</a> hat nun einen optionalen Modus, der MDI-Unterfenster besser unterstützt. [danke unnamed.ahk]</p>

<h2 id="v1.0.25.09">1.0.25.09 - 28. Januar 2005</h2>
<p>Das Starten eines Skripts sollte nicht mehr dazu führen, dass das Fenster einer Vollbildanwendung, z.B. eines Videospiels, den Fokus verliert. Außerdem sollte die Taskleiste weniger stören oder neu gezeichnet werden. [danke Tekl]</p>
<p>Verbessert: <a href="lib/Control.htm#Choose">Control Choose/ChooseString</a> funktioniert nun auch mit Mehrfachauswahl-ListBox-Steuerelementen.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/ControlGet.htm#List">ControlGet List</a>, mit dem der Inhalt einer ListBox oder ComboBox abgerufen werden kann. [danke Rajat &amp; mallow]</p>

<h2 id="v1.0.25.08">1.0.25.08 - 25. Januar 2005</h2>
<p>Behoben: <a href="Hotstrings.htm">Hotstrings</a>: Wenn Sie <kbd>Enter</kbd> drücken, um eine Ersetzung auszulösen, wird nun <kbd>Enter</kbd> statt <kbd>Strg</kbd>+<kbd>Enter</kbd> gesendet. [danke Trinity &amp; h67o]</p>
<p>Behoben: Bei der Erstellung eines <a href="lib/GuiControls.htm#Slider">Slider-Steuerelements</a> ist nun eine Startposition außerhalb des Bereichs 0-100 möglich. [danke bahri]</p>

<h2 id="v1.0.25.07">1.0.25.07 - 24. Januar 2005</h2>
<p>Geändert: SplitPath unterstützt nun URLs besser. Einzelheiten finden Sie unter <a href="lib/SplitPath.htm">SplitPath</a>.</p>
<p>Hinzugefügt: Interne Variablen true und false, die 1 und 0 enthalten. Diese können verwendet werden, um die Lesbarkeit eines Skripts zu verbessern. Beispiel: <code>GroßKleinSensitiv := true</code></p>

<h2 id="v1.0.25.06">1.0.25.06 - 23. Januar 2005</h2>
<p>Behoben: Die neue Mehrfachauswahloption von <a href="lib/FileSelectFile.htm">FileSelectFile</a>: Bei der Auswahl einer Datei in einem Stammordner wie z.B. C: wird nun ein umgekehrter Schrägstrich an den Ordnernamen angehängt.</p>
<p>Behoben: Ein <a href="Variables.htm#Expressions">Ausdruck</a> wie <code>Var:=" Zkette "</code> berücksichtigte <a href="lib/AutoTrim.htm">AutoTrim</a>, während ein komplexerer Ausdruck dies nicht tat. Konzeptbedingt sollte AutoTrim niemals Ausdrücke beeinflussen. [danke Ya-Cha]</p>
<p>Behoben: <a href="Variables.htm#Expressions">Ausdrücke</a>: Die Verkettung einer Referenz wie <code>Array%i%</code> behandelt <code>Array%i%</code> nun immer als leere Zeichenkette, wie dokumentiert. [danke Ya-Cha]</p>
<p>Geändert: <a href="Variables.htm#Expressions">Ausdrücke</a>: Eine ungültige Operation (z.B. Division durch Null oder Subtraktion einer Zeichenkette von einer Zahl) bewirkt nun, dass nur der betroffene Teil als leere Zeichenkette ausgewertet wird, nicht mehr der gesamte Ausdruck.</p>
<p>Geändert: Der Installer setzt den Standardeditor für Skripte nicht mehr auf Notepad zurück. Außerdem wurden die Kontextmenüpunkte zum Öffnen/Ausführen/Kompilieren von .ahk-Dateien korrigiert, so dass sie nun auf möglichst vielen Systemen funktionieren. [danke corrupt]</p>
<p>Verbessert: <a href="lib/PixelSearch.htm">PixelSearch</a> kann nun von rechts nach links statt von links nach rechts suchen. Wenn eines Ihrer Skripte darauf angewiesen ist, dass PixelSearch bei einem invertierten Suchbereich immer "nicht gefunden" meldet, passen Sie das Skript bitte entsprechend an. [danke BoBo &amp; SD2K]</p>
<p>Verbessert: <a href="lib/SplitPath.htm">SplitPath</a> unterstützt nun URLs. [danke BoBo]</p>

<h2 id="v1.0.25.05">1.0.25.05 - 19. Januar 2005</h2>
<p>Behoben: Kein Absturz mehr, wenn ein <a href="Variables.htm#Expressions">Ausdruck</a> eine nicht-numerische Zeichenkette mit dem numerischen Ergebnis einer Operation vergleicht. [danke unnamed.ahk]</p>
<p>Behoben: Dem Operator <a href="lib/SetExpression.htm"><code>:=</code></a> muss kein Leerzeichen mehr vorangestellt werden. [danke unnamed.ahk]</p>
<p>Behoben: Verkettung von Zeichenketten wie z.B. <code>Var = %Var% Test</code> (teilweise fehlerhaft seit v1.0.25). Dies betraf nur Verkettungen, bei denen ein oder mehrere Leerzeichen auf der linken Seite entfernt werden mussten, weil <a href="lib/AutoTrim.htm">AutoTrim</a> eingeschaltet war. [danke namazu(catfish)]</p>
<p>Behoben: Maustasten-Hotkeys, die nur <kbd>Win</kbd> oder <kbd>Alt</kbd> als Modifikator verwenden, zeigen nicht mehr das Startmenü an bzw. aktivieren nicht mehr die Menüleiste des aktiven Fensters. Dieses Problem trat nur in Skripten ohne den <a href="lib/_InstallKeybdHook.htm">Tastatur-Hook</a> auf. [danke Kijuto Riddle]</p>
<p>Behoben: Skripte, die die Maus AltTab-, ShiftAltTab- oder andere Alt-Tab-Aktionen ausführen lassen, aktivieren nun den <a href="lib/_InstallKeybdHook.htm">Tastatur-Hook</a>, um korrekt zu funktionieren. [danke jonny]</p>
<p>Verbessert: <a href="lib/FileSelectFile.htm">FileSelectFile</a> hat nun eine einfachere Mehrfachauswahloption. Obwohl die alte Mehrfachauswahloption weiterhin funktioniert, wurde sie in der Hilfedatei als veraltet gekennzeichnet, da ihre Ergebnisse schwer zu parsen sind. [danke 3tones]</p>
<p>Verbessert: <a href="lib/StringReplace.htm">StringReplace</a> hat nun eine Option, mit der die Anzahl der Ersetzungen in ErrorLevel gespeichert werden kann.</p>

<h2 id="v1.0.25.00">1.0.25 - 12. Januar 2005</h2>
<p class="note"><strong>Hinweis:</strong> Obwohl diese Version ausgiebig getestet wurde, wurden einige Low-Level-Änderungen vorgenommen. Es wird empfohlen, wichtige Skripte erneut zu testen, bevor Sie diese Version verwenden.</p>
<p>Behoben: <a href="lib/LoopFile.htm">Datei-Schleifen</a> unter Windows 95/98/Me: A_LoopFileTimeModified/Created/Accessed sind nicht mehr leer. [danke 3tones]</p>
<p>Behoben: Unter Windows 95/98/Me können nun die folgenden Tasten für Hotkey-Kombinationen verwendet werden: <kbd>Entf</kbd>, <kbd>Einfg</kbd>, <kbd>Pos1</kbd>, <kbd>Ende</kbd>, <kbd>Bild↑</kbd>, <kbd>Bild↓</kbd> und die Pfeiltasten.</p>
<p>Behoben: Bei Zeilen wie <code>If x = 5, Exit</code> wird das Element nach dem Komma nicht mehr als Befehl erkannt. <code>IfEqual, x, 5, Exit</code> hingegen erkennt "Exit" noch als Befehl.</p>
<p>Geändert: <a href="lib/Transform.htm#Pow">Transform Pow</a> gibt nun eine leere Zeichenkette statt 0.00 zurück, wenn Null mit einer negativen Zahl potenziert wird.</p>
<p>Geändert: <a href="Scripts.htm#ahk2exe">Kompilierte Skripte</a>: Die Versionsressource zeigt nun die Versionsnummer an, anstatt leer zu sein. [danke g4]</p>
<p>Geändert: <a href="lib/FileAppend.htm">FileAppend</a>: Die Datei wird nun automatisch im Binärmodus geöffnet, wenn der zu schreibende Text Wagenrücklauf-Zeilenvorschub-Paare (<code class="no-highlight">`r`n</code>) enthält. Mit anderen Worten, die Sternchenoption wird automatisch aktiviert. Die Angabe des Sternchens, falls nötig, erhöht jedoch die Performanz, da das Programm nicht nach <code class="no-highlight">`r`n</code> suchen muss.</p>
<p>Geändert: <a href="lib/LoopReadFile.htm">Dateilesende Schleifen</a>: Die Ausgabedatei wird nicht mehr geöffnet, wenn nie etwas in sie geschrieben wird. Dies ist der Fall, wenn die Schleife null Wiederholungen hat oder nie den <a href="lib/FileAppend.htm">FileAppend</a>-Befehl verwendet. Außerdem wird die Datei automatisch im Binärmodus geöffnet, sobald ein FileAppend in der Schleife ein Wagenrücklauf-Zeilenvorschub-Paar (<code class="no-highlight">`r`n</code>) schreibt. Mit anderen Worten, die Sternchenoption wird automatisch aktiviert. Diese Änderungen können bestehende Skripte unbrauchbar machen, wenn sie sich darauf verlassen: 1) dass eine null-lange Datei von der Schleife erstellt wird; oder 2) dass das Änderungsdatum der Datei von der Schleife geändert wird, auch wenn die Schleife keinen Text in die Datei geschrieben hat.</p>
<p>Geändert: Die Laufzeitvalidierung von numerischen Parametern wurde entfernt (um die Performanz zu verbessern). Dies bewirkt, dass ein Befehl wie <code>SetKeyDelay %Var%</code> keinen Laufzeitfehler mehr ausgibt, wenn Var etwas nicht-numerisches enthält. Die meisten Befehle behandeln nicht-numerische Parameter nun als Null.</p>
<p>Verbessert: Der <a href="lib/Progress.htm">Progress</a>-Befehl hat nun Optionen zum Setzen der Startposition und eines anderen Bereichs als 0 bis 100. [danke ranomore]</p>
<p>Verbessert: <a href="lib/Send.htm">Send</a>-Befehl: Die Maustasten können nun gedrückt gehalten oder losgelassen werden. Zum Beispiel: <code>Send {LButton down}</code></p>
<p>Verbessert: Der <a href="lib/Sort.htm">Sort</a>-Befehl hat nun eine Option, mit der Duplikate aus der Liste entfernt werden können. Außerdem behandelt die N-Option (numerische Sortierung) die Elemente nun als Floating-Point-Zahlen, nicht mehr als Integer. [danke Rajat]</p>
<p>Verbessert: WIN- und ALT-<a href="Hotkeys.htm">Hotkeys</a>, die den <a href="lib/Send.htm">Send</a>-Befehl verwenden:</p>
<ul>
  <li>Es wurden einige Situationen behoben, die dazu führten, dass das Startmenü unerwartet angezeigt wurde.</li>
  <li>Der Hotkey der Sprachleiste (<kbd>LAlt</kbd>+<kbd>Umschalt</kbd>) sollte nicht mehr als unerwünschter Nebeneffekt des Send-Befehls ausgelöst werden. Er kann jedoch weiterhin mit <code>Send {LAlt down}{Shift}{LAlt up}</code> ausgelöst werden, falls nötig.</li>
  <li>ALT-Hotkeys sollten nicht mehr die Menüleiste des aktiven Fensters aktivieren. Wenn Sie <code class="no-highlight">{AltUp}{Alt}</code> irgendwo in Ihren Skripten verwenden, damit die ALT-Hotkeys besser funktionieren, sollten diese Hotkeys immer noch funktionieren. Sie haben jedoch ein konsistenteres Verhalten, wenn <code class="no-highlight">{AltUp}{Alt}</code> entfernt wird.</li>
</ul>
<p>Verbessert: Bessere Performanz bei folgenden Dingen: 1) StringReplace "All" verwendet nun temporären Speicher (wenn nötig), um die Operation erheblich zu beschleunigen. Einzelheiten und Optionen finden Sie unter <a href="lib/StringReplace.htm">StringReplace</a>. 2) Die Verkettung von Variablen, wie z.B. <code>Var = %Var%Zkette</code>, ist mindestens 100-mal schneller. 3) Die Zuweisung an Variablen mit eingeschaltetem <a href="lib/AutoTrim.htm">AutoTrim</a> ist schneller. 4) Die <a href="lib/StringCaseSense.htm">nicht-Groß-/Kleinschreibung-sensitive</a> Suche nach Zeichenketten ist viel schneller, was sich auf <a href="lib/StringGetPos.htm">StringGetPos</a>, <a href="lib/IfInString.htm">IfInString</a>, <code>if var <a href="lib/IfIn.htm">in</a> &lt;Liste&gt;</code>, <a href="lib/StringReplace.htm">StringReplace</a> und <a href="lib/Input.htm">Input</a> auswirkt.</p>
<p>Hinzugefügt: Interne Variable A_LoopFileShortPath für <a href="lib/LoopFile.htm">Datei-Schleifen</a>, die den 8.3-Kurzpfad und -namen einer Datei enthält. [danke Rajat]</p>
<p>Hinzugefügt: Befehl <a href="lib/FileRead.htm">FileRead</a>, mit dem der gesamte Text einer Datei in eine Variable gelesen werden kann (performt besser als eine dateilesende Schleife).</p>
<p>Hinzugefügt: Unterstützung für Ausdrücke in Befehlen mit numerischen Parametern, wie z.B. <a href="lib/StringLeft.htm">StringLeft</a>. Außerdem können <a href="lib/IfExpression.htm">IF-Anweisungen</a> komplexe Ausdrücke verwenden, wenn das erste Zeichen eine runde Klammer ist, z.B. <code>if (X &lt; Y + 10) and (Farbe = "Blau")</code>. Darüber hinaus wurde <a href="lib/SetExpression.htm">Var := Ausdruck</a> hinzugefügt, um das Ergebnis eines Ausdrucks einer Variable zuzuweisen, z.B. <code>Var := 100*X + 1/3</code>. Einzelheiten über Operatoren, die Verkettung von Zeichenketten und den einfacheren Zugriff auf Arrays finden Sie unter <a href="Variables.htm#Expressions">Ausdrücke (Expressions)</a>. [danke Joost Mulders]</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Geändert: <a href="lib/Gui.htm#Show">Gui Show</a> startet das <a href="lib/Gui.htm#GuiSize">GuiSize</a>-Label nur noch, nachdem das Fenster angezeigt und sein Titel aktualisiert wurde. [danke ranomore]</p>
<p>Verbessert: <a href="lib/Gui.htm#GuiDropFiles">Ziehen-und-Ablegen</a> meldet nun (via <a href="misc/ErrorLevel.htm">ErrorLevel</a>) die Anzahl der abgelegten Dateien.</p>

<h2 id="v1.0.24.00">1.0.24 - 9. Dezember 2004</h2>
<p> Behoben: <a href="lib/StatusBarGetText.htm">StatusBarGetText</a> und <a href="lib/StatusBarWait.htm">StatusBarWait</a>: Manchmal gaben diese Befehle bei hoher Systemlast zu früh auf und setzten ErrorLevel. [danke Anatoly Larkin]</p>
<p>Behoben: <a href="Scripts.htm#ahk2exe">Kompilierte Skripte</a>: Die Versionsressource ist nun wie vorgesehen leer. [danke Titan]</p>
<p>Verbessert: <a href="lib/ControlClick.htm">ControlClick</a> kann nun optional auf Koordinaten statt auf ein bestimmtes Steuerelement klicken.</p>
<p>Verbessert: Speicherverwaltung: Wenn ein Skript für eine Operation wie <code>StringReplace, Große_Var, Große_Var, `n, `r`n</code> einen temporären Speicherbereich von mehr als 4 MB benötigt, wird dieser Speicher automatisch freigegeben, wenn er 10 Sekunden lang nicht verwendet wurde. Die 10-Sekunden-Verzögerung vermeidet Performanzverlust durch häufiges Freigeben und Reservieren von Speicher. Zum Beispiel könnte eine Schleife mit Tausenden von Wiederholungen den Speicher für ihre gesamte Dauer benötigen.</p>
<p>Verbessert: Besseres Verhalten von <a href="Scripts.htm#cmd">Befehlszeilenparametern</a> unter Windows NT/2k/XP, so dass: 1) mehr als 8 Dateien auf ein .ahk-Skript gezogen und abgelegt werden können (sofern die Ziehen-und-Ablegen-Option während der Installation aktiviert wurde); und 2) .ahk-Dateien, die direkt über eine Verknüpfung oder eine Befehlszeile gestartet werden, Parameter empfangen können, die Leerzeichen enthalten, wenn sie in doppelte Anführungszeichen gesetzt sind. [danke Tekl]</p>
<p>Verbessert: <a href="lib/FileCreateShortcut.htm">FileCreateShortcut</a> hat neue Optionen, die folgendes ermöglichen: 1) ein anderes Symbol als das erste verwenden; und 2) den Startzustand auf minimiert oder maximiert setzen. Wenn Sie ein Skript haben, das FileCreateShortcut mit dem Tastenkürzel <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>,</kbd> verwendet, achten Sie bitte darauf, dass das Komma mit einem Escapezeichen versehen werden muss. [danke Holger]</p>
<p>Hinzugefügt: Befehl <a href="lib/FileGetShortcut.htm">FileGetShortcut</a>, mit dem Informationen über eine Verknüpfung (LNK-Datei) abgerufen werden können, wie z.B. ihre Zieldatei. [danke Holger]</p>
<p>Hinzugefügt: Rajats Syntax- und Schlüsselwortlisten in den Extras\Editors\Syntax-Ordner im AutoHotkey-Ordner. Diese Dateien erleichtern die Erstellung und Pflege von Syntaxdefinitionen und Clip-Bibliotheken für verschiedene Editoren.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/Menu.htm#Click">Menu Click</a>, mit dem der Standardmenüpunkt des Tray-Symbols mit nur einem Klick aktiviert werden kann (normalerweise ist ein Doppelklick erforderlich). [danke CarlosTheTackle]</p>
<p>Hinzugefügt: Unterbefehle <a href="lib/Drive.htm#Lock">Drive Lock</a> und <a href="lib/Drive.htm#Unlock">Drive Unlock</a>. Das Sperren eines Laufwerks blockiert dessen Auswurffunktion. [danke RG]</p>
<p>Hinzugefügt: Der Inhalt einer Variable kann nun in zufälliger Reihenfolge <a href="lib/Sort.htm">sortiert</a> werden. [danke GBeam]</p>
<p>Hinzugefügt: Unterstützung für Unicode-Text in der Zwischenablage und in Variablen. Einzelheiten finden Sie unter <a href="lib/Transform.htm#Unicode">Transform Unicode</a>. [danke Tekl]</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#YWeek">A_YWeek</a>, die das aktuelle Jahr und die aktuelle Kalenderwoche gemäß ISO 8601 enthält. [Danke an alle Beteiligten]</p>
<p>Hinzugefügt: Neue interne Variablen: <a href="Variables.htm#Language">A_Language</a>, <a href="Variables.htm#ComputerName">A_ComputerName</a>, <a href="Variables.htm#UserName">A_UserName</a>, <a href="Variables.htm#Desktop">A_Desktop</a>, <a href="Variables.htm#DesktopCommon">A_DesktopCommon</a>, <a href="Variables.htm#StartMenu">A_StartMenu</a>, <a href="Variables.htm#StartMenuCommon">A_StartMenuCommon</a>, <a href="Variables.htm#Programs">A_Programs</a>, <a href="Variables.htm#ProgramsCommon">A_ProgramsCommon</a>, <a href="Variables.htm#Startup">A_Startup</a>, <a href="Variables.htm#StartupCommon">A_StartupCommon</a> und <a href="Variables.htm#MyDocuments">A_MyDocuments</a>.</p>
<p>Hinzugefügt: Befehl <a href="lib/FormatTime.htm">FormatTime</a>, mit dem ein YYYYMMDDHH24MISS-Zeitstempel in ein bestimmtes Datums-/Zeitformat transformiert werden kann.</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Behoben: <a href="lib/GuiControls.htm#Radio">Radio-Steuerelemente</a>: 1) das g-Label wird nicht mehr gestartet, nur weil das Steuerelement den Tastaturfokus erhält; 2) das g-Label wird nur noch einmal statt zweimal gestartet, wenn mit den Pfeiltasten navigiert wird; 3) der Fokus liegt nun auf dem richtigen Steuerelement, wenn eine Radiogruppe den Tastaturfokus erhält; und 4) bei mehreren angrenzenden Radiogruppen erhält die erste Radiogruppe nun einen Tabstopp. [danke Gre &amp; Jacques Bensimon]</p>
<p>Behoben: <a href="lib/GuiControls.htm#Tab">Tab-Steuerelemente</a>: Der Tastaturfokus landet nun immer auf dem ersten statt auf dem zweiten Steuerelement, wenn der Benutzer einen neuen Tab anklickt. Außerdem funktionieren nun die Navigationstasten <kbd>Strg</kbd>+<kbd>Bild↓</kbd>/<kbd>Bild↑</kbd>/<kbd>Tab</kbd>, wenn der Fokus auf einer ComboBox liegt. [danke wkueting]</p>
<p>Behoben: Die Limit-Option des <a href="lib/GuiControls.htm#Edit">Edit-Steuerelements</a> funktioniert nun wieder (fehlerhaft seit v1.0.23). [danke ranomore]</p>
<p>Behoben: <a href="lib/GuiControl.htm#options">GuiControl +/-Optionen</a> erlaubt nun das Hinzufügen oder Entfernen des Check3-Styles bei <a href="lib/GuiControls.htm#CheckBox">CheckBox-Steuerelementen</a>. Außerdem werden Steuerelemente nun immer neu gezeichnet, wenn sich ihre Styles ändern. [danke beardboy]</p>
<p>Geändert: <a href="lib/GuiControls.htm#ComboBox">ComboBox-Steuerelemente</a>: Ihre g-Labels (falls vorhanden) werden nun jedes Mal gestartet, wenn der Benutzer den Text im Eingabefeld des Steuerelements ändert.</p>
<p>Verbessert: <a href="lib/GuiControls.htm#Picture">Picture-Steuerelemente</a>: 1) Symbole und Cursor können aus CUR-, ANI-, ICO-, DLL- und EXE-Dateien geladen werden; und 2) Breite und Höhe können beim Laden eines neuen Bildes via <a href="lib/GuiControl.htm">GuiControl</a> angegeben werden. Wenn eines Ihrer Skripte BackgroundTrans verwendet, um ein Symbol transparent zu machen, fügen Sie das Wort AltSubmit zu den Optionen des Steuerelements hinzu. [danke Rajat]</p>
<p>Hinzugefügt: Eine Methode zum Setzen von benutzerdefinierten Tabstopps in <a href="lib/GuiControls.htm#Edit">Edit-Steuerelementen</a>. [danke Jason Payam Ahdoot]</p>
<p>Hinzugefügt: Eine Invert-Option für <a href="lib/GuiControls.htm#Slider">Slider</a>, mit der die unteren und oberen Enden des Steuerelements umgekehrt werden können. [danke beardboy]</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/Gui.htm#Default">Gui N:Default</a>, mit dem die Standard-GUI-Fensternummer des aktuellen Threads auf N geändert werden kann.</p>
<p>Hinzugefügt: <a href="lib/Gui.htm#GuiSize">GuiSize-Label</a>, das immer dann gestartet wird, wenn ein GUI-Fenster kleiner/größer gemacht, minimiert, maximiert oder wiederhergestellt wird.</p>
<p>Hinzugefügt: Unterstützung für Ziehen-und-Ablegen via <a href="lib/Gui.htm#GuiDropFiles">GuiDropFiles-Label</a>.</p>

<h2 id="v1.0.23.00">1.0.23 - 9. November 2004</h2>
<p> Geändert: <a href="Scripts.htm#ahk2exe">Kompilierte Skripte</a> enthalten nun eine leere Versionsinfo-Ressource. Um die Versionsinfo Ihrer kompilierten Skripte anzupassen, verwenden Sie ein Tool wie Resource Hacker (Freeware), um die Datei AutoHotkeySC.bin zu bearbeiten. Beachten Sie, dass ResHacker kompilierte Skripte unbrauchbar macht, daher sollte nur die Datei AutoHotkeySC.bin bearbeitet werden. [danke Larl]</p>
<p>Verbessert: Das <a href="Hotkeys.htm#Symbols">Hotkey-Präfix</a> $ funktioniert nun auch unter Windows 95/98/Me. Es ermöglicht einem Hotkey, sich selbst zu senden, wodurch ein Hotkey seine ursprüngliche/native OS-Funktion bedingt ausführen kann.</p>
<p>Verbessert: <a href="lib/PixelGetColor.htm">PixelGetColor</a> und <a href="lib/PixelSearch.htm">PixelSearch</a> haben nun eine Option zum Abrufen von Farben im RGB- statt BGR-Format.</p>
<p>Verbessert: <a href="lib/Menu.htm#Show">Menu Show</a> akzeptiert nun eine optionale Position für das Menü. [danke compuboy_r]</p>
<p>Verbessert: Der <a href="lib/Hotkey.htm">Hotkey</a>-Befehl performt nun besser beim Ein- und Ausschalten eines Hotkeys, der sich bereits im korrekten Zustand befindet. [danke deguix]</p>
<p>Hinzugefügt: Unterbefehle Style und ExStyle für <a href="lib/WinGet.htm">WinGet</a>, mit denen der Style bzw. erweiterte Style eines Fensters abgerufen werden kann. [danke ranomore]</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#ProgramFiles">A_ProgramFiles</a> und <a href="Variables.htm#WinDir">A_WinDir</a> für Betriebssysteme, denen die entsprechenden Umgebungsvariablen fehlen.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/WinSet.htm#Bottom">WinSet Bottom</a>, mit dem ein Fenster an das Ende des Stapels, d.h. unter alle anderen Fenster, gesetzt werden kann. [danke AntonyB]</p>
<p>Hinzugefügt: <code><a href="lib/WinSet.htm">WinSet</a>, Transparent, Off</code>, mit dem die Transparenz eines zuvor transparent gemachten Fensters vollständig ausgeschaltet werden kann. Dies kann die Performanz verbessern. [danke dijiyd]</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/WinSet.htm#TransColor">WinSet TransColor</a>, mit dem der Hintergrund eines Fensters unter Windows 2000/XP+ transparent gemacht werden kann. Dies ermöglicht die Erstellung von Bildschirmanzeigen (engl. On-Screen Display, kurz OSD) und anderen visuellen Effekten.</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Behoben: <a href="lib/Gui.htm#Show">Gui Show</a>: Manchmal wurde das Fenster erst angezeigt, nachdem der Befehl nach Gui Show ausgeführt wurde. [danke Tekl]</p>
<p>Behoben: Picture-Steuerelemente mit Rahmen: Die Größe des Steuerelements wird nicht mehr jedes Mal leicht erhöht, wenn mit GuiControl ein neues Bild geladen wird. [danke ILL.1]</p>
<p>Behoben: Wenn ein Tab-Steuerelement versteckt oder sichtbar gemacht wird, werden die Steuerelemente des aktuellen Tabs ebenfalls versteckt bzw. sichtbar gemacht. Außerdem wurden einige kleinere Probleme bei der Tastaturnavigation behoben. [danke Nemroth]</p>
<p>Geändert: Das Erlauben oder Verbieten der Interaktion mit Tab-Steuerelementen erlaubt oder verbietet auch die Interaktion mit ihren Untersteuerelementen.</p>
<p>Geändert: Tab-Steuerelemente verwenden unter Windows XP oder höher nun das klassische Design, so dass ihre Hintergrundfarbe mit der ihrer Untersteuerelemente übereinstimmt. [danke Gre]</p>
<p>Verbessert: Das Limit von 32 KB für die Menge an Text, die in einem Edit-Steuerelement enthalten sein kann, wurde entfernt. Windows 9x limitiert die Menge auf 64 KB und andere Betriebssysteme auf bis zu 4 GB. [danke Bahri]</p>
<p>Verbessert: Höhere Zeichnungsperformanz beim Umschalten von Tabs in einem Tab-Steuerelement.</p>
<p>Verbessert: GUI-Performanz wurde insgesamt erhöht, insbesondere bei Fenstern mit sehr vielen Steuerelementen.</p>
<p>Hinzugefügt: Positionierungsoptionen wp+n und hp+n, die die Breite und Höhe des vorherigen Steuerelements verwenden.</p>
<p>Hinzugefügt: BackgroundTrans-Option für Text-, Picture- und GroupBox-Steuerelemente. Mit dieser Option kann man dahinter liegende Steuerelemente durchscheinen lassen.</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#Gui">A_Gui</a> und <a href="Variables.htm#GuiControl">A_GuiControl</a>, die den Fensternamen und die ID des Steuerelements, das den <a href="misc/Threads.htm">aktuellen Thread</a> gestartet hat, enthalten. [danke Rajat]</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/GuiControl.htm#Font">GuiControl Font</a>, mit dem die Schrift eines Steuerelements geändert werden kann.</p>
<p>Hinzugefügt: Steuerelement <a href="lib/GuiControls.htm#Slider">Slider</a>: Ein Regler, den der Benutzer entlang einer vertikalen oder horizontalen Linie verschieben kann.</p>
<p>Hinzugefügt: Steuerelement <a href="lib/GuiControls.htm#Progress">Progress</a>: Ein zweifarbiger Balken, der den Fortschritt einer Operation visuell darstellt.</p>
<p>Hinzugefügt: Steuerelement <a href="lib/GuiControls.htm#Hotkey">Hotkey</a>: Ein Eingabefeld, das der Benutzer zur Eingabe einer Tastenkombination verwenden kann.</p>

<h2 id="v1.0.22.00">1.0.22 - 26. Oktober 2004</h2>
<p> Behoben: <a href="lib/ToolTip.htm">ToolTip</a> wurde unter Windows XP nicht mehr angezeigt. [danke Phi und /Torben]</p>
<p>Behoben: Die linke Maustaste funktioniert nun korrekt, wenn sie als Hotkey verwendet wird: Wenn mit so einem Hotkey ein <a href="lib/Menu.htm">Kontextmenü</a> geöffnet wird, behandelt das Vordergrundfenster die linke Maustaste nach dem Schließen des Menüs so, als sei sie dauerhaft gedrückt. [danke umek]</p>
<p>Verbessert: Mit <a href="lib/SetKeyDelay.htm">SetKeyDelay</a> kann nun eine Verzögerung zwischen jedem Down- und Up-Ereignis eines Tastendrucks gesetzt werden.</p>
<p>Verbessert: <a href="lib/GetKeyState.htm">GetKeyState</a>, <a href="lib/KeyWait.htm">KeyWait</a>, <a href="lib/Input.htm">Input</a> und <a href="Hotkeys.htm">Hotkeys</a> unterstützen nun die explizite Angabe einer virtuellen Taste wie z.B. vkFF. Dies ist nützlich für Tasten, die keinen Namen haben und beim Drücken kein sichtbares Zeichen erzeugen. Leider teilen sich solche Tasten in der Regel denselben virtuellen Tastencode (FF), d.h. wenn Sie mehrere davon haben, kann diese Methode sie nicht unterscheiden (außer Hotkeys, die die auf der <a href="KeyList.htm">Tastenlistenseite</a> beschriebene scNNN-Methode verwenden sollten).</p>
<p>Verbessert: <a href="lib/FileMoveDir.htm">FileMoveDir</a> unterstützt nun einen optionalen Umbenennungsmodus mit einem "Alles oder nichts"-Verhalten. [danke Tekl].</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/WinGet.htm#MinMax">WinGet MinMax</a>, der -1 abruft, wenn das Fenster minimiert ist, 1, wenn es maximiert ist, oder 0, wenn es weder maximiert noch minimiert ist.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/WinGet.htm#ProcessName">WinGet ProcessName</a>, mit dem der Prozessname eines Fensters abgerufen werden kann. [danke Wademan]</p>
<p>Hinzugefügt: Befehl <a href="lib/Drive.htm">Drive</a>, mit dem ein CD- oder DVD-Laufwerk geöffnet/geschlossen oder die Bezeichnung eines Laufwerks geändert werden kann.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/DriveGet.htm#StatusCD">DriveGet StatusCD</a>, mit dem der Medienstatus eines CD- oder DVD-Laufwerks abgerufen werden kann.</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#Screen">A_ScreenWidth</a> und <a href="Variables.htm#Screen">A_ScreenHeight</a>, die die Breite und Höhe des primären Bildschirms (in Pixel) enthalten.</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#AhkVersion">A_AhkVersion</a>, die die Versionsnummer von AutoHotkey enthält.</p>
<p>Hinzugefügt: Befehl <a href="lib/SysGet.htm">SysGet</a>, mit dem Bildschirmauflösungen, Multi-Bildschirm-Informationen, Dimensionen von Systemobjekten und andere Systemeigenschaften abgerufen werden können. [danke Gregory F. Hogg von Hogg’s Software]</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Behoben: Edit-Steuerelemente mit einer expliziten Höhe (H), die groß genug ist, um mehrzeilig zu sein: Zeilenumbruch ist nun standardmäßig eingeschaltet, wie vorgesehen. [danke Alfredo]</p>
<p>Behoben: Kein Absturz mehr, der theoretisch auftreten kann (aber noch nie beobachtet wurde), wenn sich ein Fenster selbst zerstört, z.B. via Beenden-Schaltfläche.</p>
<p>Behoben: <a href="lib/Gui.htm#Show">Gui Show</a>: Die vorherigen Dimensionen des Fensters bleiben nun erhalten, wenn nichts angegeben ist. [danke lingoist]</p>
<p>Behoben: Wenn <a href="lib/Gui.htm#Show">Gui Show</a> über das Tray-Menü aufgerufen wird (und vielleicht auch zu anderen Zeiten), hat das Fenster nun den Tastaturfokus. [danke Tekl]</p>
<p>Geändert: Die Höhe einer GroupBox wurde leicht angepasst, wenn die Höhe weggelassen wird oder eine Zeilenanzahl angegeben ist. Sie sollte nun besser der aktuellen Schriftgröße entsprechen. Außerdem ist eine GroupBox nun etwas schmaler, wenn keine Breite angegeben ist.</p>
<p>Geändert: <a href="lib/GuiControl.htm#Choose">GuiControl Choose</a> fällt nun automatisch auf die ChooseString-Methode zurück, wenn der N-Parameter nicht numerisch ist.</p>
<p>Verbessert: ListBox unterstützt nun einen optionalen horizontalen Scrollbalken durch Hinzufügen des Wortes HScroll in den Optionen.</p>
<p>Verbessert: Picture-Steuerelemente unterstützen nun eine Vielzahl neuer Bildformate wie PNG, TIF und ICO, sofern vom Betriebssystem unterstützt. Wenn Ihr Betriebssystem älter als XP ist (außer Windows 95), können Sie Unterstützung hinzufügen, indem Sie die kostenlose GDIPlus-Erweiterung von <a href="https://www.microsoft.com">Microsoft</a> herunterladen.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/GuiControl.htm#Text">GuiControl Text</a>, der der Methode "set-contents" entspricht, mit Ausnahme von Radio- und CheckBox-Steuerelementen, bei denen Param3 als neue Beschriftung behandelt wird, selbst wenn sie -1, 0 oder 1 ist. [danke Rajat]</p>
<p>Hinzugefügt: Steuerelement Tab (SysTabControl32): Ein großes Steuerelement, das dazu dient, auf mehreren Ebenen unterschiedliche Steuerelemente anzuzeigen.</p>

<h2 id="v1.0.21.00">1.0.21 - 12. Oktober 2004</h2>
<p> Behoben: <a href="Hotstrings.htm">Hotstrings</a>: Manchmal konnten sie nicht aktiviert werden. [danke Jack Horsfield]</p>
<p>Behoben: <a href="lib/Progress.htm">Progress</a>-Befehl: Eine benutzerdefinierte Balkenfarbe wird nun unter Windows XP+ berücksichtigt, anstatt vom aktuellen Design des Benutzers überschrieben zu werden [danke Gre]. Um stattdessen das aktuelle Design zu verwenden, lassen Sie die Farbe des Balkens unverändert.</p>
<p>Behoben: <a href="lib/ControlSend.htm">ControlSend</a> kann nun Modifikatortasten senden (z.B. Großbuchstaben und <code class="no-highlight">^{end}</code>), wenn das Skript mit einem seiner eigenen GUI-Fenster arbeitet oder wenn der Tastatur-Hook installiert ist. [danke beardboy &amp; Gregory Punshon]</p>
<p>Behoben: Beim Senden von Mausklicks via <a href="lib/Send.htm">Send</a>-Befehl ist nun der korrekte STRG/ALT/UMSCHALT/WIN-Tastenstatus wirksam. Außerdem kann <a href="lib/ControlSend.htm">ControlSend</a> keine Mausklicks mehr senden, da diese sonst im Fenster unter dem Mauszeiger erfolgen würden.</p>
<p>Behoben: <a href="lib/ToolTip.htm">ToolTip</a> kann nun auf nicht-primären Bildschirmen in einem Multi-Bildschirm-System angezeigt werden. [danke Jack Horsfield] </p>
<p>Geändert: <a href="lib/PixelGetColor.htm">PixelGetColor</a> und Window Spy rufen Farben nun im hexadezimalen statt im dezimalen Format ab, was die Visualisierung einer Farbe anhand ihrer Blau-, Grün- und Rotanteile erleichtert. Diese Änderung sollte keine Auswirkungen auf bestehende Skripte haben. [danke Bobo]</p>
<p>Verbessert: Window Spy hat nun ein nützlicheres Layout und zeigt den Text des Steuerelements unter dem Mauszeiger an.</p>
<p>Verbessert: Der <a href="lib/Input.htm">Input</a>-Befehl hat nun eine Option, mit der modifizierte Tastendrücke wie <kbd>Strg</kbd>+<kbd>A</kbd> bis <kbd>Strg</kbd>+<kbd>Z</kbd> erkannt und in echte ASCII-Zeichen umgewandelt werden können, falls möglich. Das folgende Beispiel erkennt <kbd>Strg</kbd>+<kbd>C</kbd>:</p>
<pre>Transform, StrgC, Chr, 3  <em>; Speichert das Zeichen für STRG+C in die Variable StrgC.</em>
Input, AusgabeVar, L1 M
IfEqual, AusgabeVar, %StrgC%, MsgBox, Sie haben STRG+C gedrückt.</pre>
<p>Verbessert: <a href="lib/ControlSend.htm">ControlSend</a>: Wenn ein Skript explizit Up- und Down-Ereignisse für einen Modifikator angibt, z.B. <code class="no-highlight">{Alt down}f{Alt up}</code> statt <code class="no-highlight">!f</code>, werden diese Ereignisse so gesendet, dass sie das aktive Fenster weniger stören. Hinweis: In früheren Versionen behandelte ControlSend explizit angegebene Up- und Down-Ereignisse von Modifikatoren wie <code class="no-highlight">{Ctrl down}</code> und <code class="no-highlight">{Ctrl up}</code> nicht korrekt.</p>
<p>Hinzugefügt: Unterbefehle Style und ExStyle (erweiterter Style) für <a href="lib/ControlGet.htm">ControlGet</a>.</p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p>Behoben: CheckBox- und Radio-Steuerelemente werden nun in der angegebenen Textfarbe angezeigt, auch wenn ein überschreibendes Windows XP-Design verwendet wird. Als Nebeneffekt werden die Steuerelemente jedoch auf das klassische Design zurückgesetzt, wenn eine benutzerdefinierte Textfarbe angegeben ist.</p>
<p>Behoben: <a href="lib/GuiControl.htm">GuiControl</a> ist nun in der Lage, den Inhalt eines Steuerelements leer zu machen. [danke Rajat]</p>
<p>Behoben: Die Standardschaltfläche wurde kosmetisch angepasst. Manchmal nahm sie das Aussehen einer normalen Schaltfläche an.</p>
<p>Geändert: Steuerelemente und Fenster einer Anwendung verwenden nun einheitlich die visuellen Styles von Windows XP, sofern das aktuelle Design dies zulässt. [danke Titan]</p>
<p>Geändert: DropDownList und ComboBox unter Windows XP: Wenn die Höhe nicht angegeben ist, wird die Höhe der Auswahlliste an die verfügbare Höhe des Desktops angepasst.</p>
<p>Geändert: Die Erkennung der Optionswörter und -buchstaben von <a href="lib/Gui.htm#Add">Gui Add</a> ist jetzt strenger (aber 99% der GUI-Skripte sollten davon nicht betroffen sein): Optionen müssen durch mindestens ein Leer- oder Tabulatorzeichen voneinander getrennt sein, und alle Optionen, die ein Argument akzeptieren (wie z.B. x30 für die X-Koordinate), müssen unmittelbar vor diesem Argument stehen, d.h. ohne Leerzeichen dazwischen.</p>
<p>Geändert: Die Dicke des Rahmens um einige Steuerelemente (z.B. Edit) wurde auf eine traditionellere Größe reduziert.</p>
<p>Hinzugefügt: Alle Steuerelemente können jetzt eine zugeordnete Variable haben. Dies erleichtert die eindeutige Identifizierung eines Steuerelements, wenn <a href="lib/GuiControl.htm">GuiControl</a> oder <a href="lib/GuiControlGet.htm">GuiControlGet</a> verwendet wird.</p>
<p>Verbessert: DropDownList, ComboBox und ListBox können nun die Position anstelle des Textes des ausgewählten Listeneintrags speichern, wenn <a href="lib/Gui.htm#Submit">Gui Submit</a> oder <a href="lib/GuiControlGet.htm">GuiControlGet</a> verwendet wird.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/Gui.htm#Flash">Gui Flash</a>, mit dem die Titelleiste und/oder die Taskleistenschaltfläche des Fensters zum Blinken gebracht werden kann. [danke beardboy]</p>
<p>Hinzugefügt: <a href="lib/Gui.htm#Theme">Gui +/-Theme</a>, das die Erstellung von Steuerelementen im klassischen Design unter Windows XP+ ermöglicht.</p>
<p>Hinzugefügt: Es ist nun möglich, die Optionen und Styles eines bestehenden Steuerelements via <a href="lib/GuiControl.htm">GuiControl</a> zu ändern.</p>
<p>Hinzugefügt: ListBox unterstützt nun Mehrfachauswahl durch Hinzufügen des Wortes Multi in den Optionen.</p>
<p>Hinzugefügt: Viele neue Optionen und benannte Styles für Steuerelemente. Außerdem können jetzt beliebige namenlose numerische Styles angegeben werden, wie z.B. die in der <a href="misc/Styles.htm">Styles-Tabelle</a>.</p>

<h2 id="v1.0.20.00">1.0.20 - 30. September 2004</h2>
<p>Behoben: <a href="lib/IfIn.htm">if Var between/in/contains</a>: Das zweite Element in der VergleichListe wird nicht mehr als Befehl fehlinterpretiert, wenn es zufällig mit einem übereinstimmt. [danke Rajat]</p>
<p>Behoben: Der Hotkey <code>$Tab::</code> (TAB als unmodifizierter Hook-Hotkey) wird nicht mehr folgendes tun: 1) auslösen, wenn <kbd>Alt</kbd>+<kbd>Tab</kbd> gedrückt wird; 2) verhindern, dass <kbd>Alt</kbd>+<kbd>Tab</kbd> funktioniert. [danke antonyb]</p>
<p>Behoben: <a href="lib/MsgBox.htm">MsgBox</a>: Der Zeitlimit-Parameter kann nun in einer Variable enthalten sein. [danke jordi]</p>
<p>Behoben: <a href="lib/SetTimer.htm">SetTimer</a>: 10ms-Timer können nun alle 10ms (statt alle 20ms) laufen, wenn SetBatchLines die Standardeinstellung von 10ms hat.</p>
<p>Behoben: <a href="lib/Loop.htm">A_Index</a> wird innerhalb von <a href="lib/LoopFile.htm">Datei-Schleifen</a> und <a href="lib/LoopReg.htm">Registry-Schleifen</a>, die Unterordner bzw. Unterschlüssel rekursiv durchwandern, nicht mehr periodisch auf 1 zurückgesetzt.</p>
<p>Für alle, die <a href="lib/PostMessage.htm">Post/SendMessage</a> verwenden, um AutoHotkey selbst zu automatisieren: Die IDs der vordefinierten Menüpunkte im Tray und im Hauptfenster wurden geändert: Sie starten nun bei 65300 statt 32789. Bitte passen Sie Ihre Skripte entsprechend an.</p>
<p>Geändert: Versionsinfo (die im Dateieigenschaften-Dialogfenster des Explorers zu sehen ist) wird nun bei <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a> weggelassen. Diese Änderung spiegelt die Tatsache wider, dass Skripte Eigentum ihrer Autoren sind und daher so wenig wie möglich mit AutoHotkey in Verbindung gebracht werden sollten. Ein Autor kann seine eigene Versionsinfo mit einem kostenlosen Tool wie ResHacker hinzufügen. [danke Bobo &amp; Titan]</p>
<p>Verbessert: Die maximale Länge von <a href="lib/Menu.htm">Menü</a>- und Menüpunktnamen wurde von 100 auf 260 erhöht. Außerdem sollten Menüs jetzt etwas weniger Speicher verbrauchen.</p>
<p>Verbessert: Die Geschwindigkeit des Unterbefehls <a href="lib/Menu.htm#Add">Menu Add</a>: Skripte, deren Menüs zusammengefasst Tausende von Menüpunkten enthalten, sollten nun in der Lage sein, neue Menüpunkte mindestens 100-mal schneller zu erstellen.</p>
<p>Verbessert: Der <a href="lib/Send.htm">Send</a>-Befehl unterstützt nun Maustasten und das Mausrad [danke Wolfgang Reszel (Tekl)]. Wenn eines Ihrer Skripte <code>Send {LButton}</code> oder ähnliches verwendet (wahrscheinlich ohne Wirkung), passen Sie es bitte entsprechend an.</p>
<p>Hinzugefügt: Konfigurationsdateien für EmEditor und MED (im Extras-Ordner enthalten). [danke Wolfgang Reszel (Tekl)]</p>
<p>Hinzugefügt: Eine Methode zum Abrufen einer Liste aller Steuerelemente in einem Fenster. Beispiel: <code><a href="lib/WinGet.htm">WinGet</a>, AusgabeVar, ControlList, A</code></p>
<p><strong><a href="lib/Gui.htm">GUI</a>-Änderungen:</strong></p>
<p> Behoben: Schaltflächen, die schnell angeklickt werden, wurden kosmetisch angepasst. [danke Rajat]</p>
<p>Behoben: Picture-Steuerelemente, die als Hintergrund für andere Steuerelemente verwendet werden: Sie stehlen keine Mausklicks mehr, es sei denn, sie haben ein g-Label. [danke Rajat]</p>
<p>Behoben: <a href="lib/Menu.htm">Menu</a>-Befehl: Wenn er Änderungen an einer Menüleiste vornimmt, werden diese Änderungen sofort sichtbar, wenn das GUI-Fenster sichtbar ist. Außerdem sollte es nun problemlos möglich sein, die Farbe eines Menüs auf die Standardfarbe zurückzusetzen.</p>
<p>Verbessert: Die maximale Anzahl von Fenstern wurde von 5 auf 10 erhöht.</p>
<p>(Könnte bestehende Skripte unbrauchbar machen): Wenn eine Radio-Gruppe mehrere Radio-Steuerelemente, aber nur eine Variable hat, wird dieser Variable die Nummer des ausgewählten Radio-Steuerelements zugewiesen (0, wenn nichts ausgewählt ist, 1 für das erste, 2 für das zweite usw.) [danke Rajat] Wenn Sie Radio-Gruppen haben, deren Radio-Steuerelemente nicht alle Variablen haben, passen Sie sie bitte entsprechend an.</p>
<p>(Könnte bestehende Skripte unbrauchbar machen): Threads, die als Ergebnis einer GUI-Aktion gestartet werden, arbeiten nun standardmäßig mit der Fensternummer, in der die Aktion stattgefunden hat. Zuvor hat der <a href="lib/Gui.htm">Gui</a>-Befehl die Nummer 1 vermutet, wenn die Fensternummer nicht angegeben wurde. Wenn Sie Skripte haben, die mehrere Fenster verwenden, passen Sie diese bitte entsprechend an.</p>
<p>(Könnte bestehende Skripte unbrauchbar machen): Skripte, die den <a href="lib/Gui.htm">Gui</a>-Befehl irgendwo enthalten, erlauben standardmäßig nur eine aktive Instanz von sich selbst, was aber mit der <a href="lib/_SingleInstance.htm">#SingleInstance</a>-Direktive geändert werden kann. Außerdem sind GUI-Skripte jetzt sofort <a href="lib/_Persistent.htm">persistent</a> und nicht erst, nachdem ein GUI-Fenster erstellt wurde.</p>
<p>Hinzugefügt: Option "underline" (unterstreichen) für <a href="lib/Gui.htm#Font">Gui Font</a>.</p>
<p>Hinzugefügt: Option +/-Resize, mit der die Größe eines Fensters veränderbar gemacht werden kann. Beispiel: <code>Gui, +owner +resize</code></p>
<p>Hinzugefügt: Optionen XS, YS und Section für <a href="lib/Gui.htm#Add">Gui Add</a>. Mit diesen Optionen kann ein Fenster in Sektionen unterteilt werden, die jeweils eigene Zeilen und Spalten von Steuerelementen haben können. Hinweis: Bei einem Layout-Editor wie SmartGUI Creator sind diese Optionen in der Regel nicht von Nutzen. [danke Jack Horsfield]</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#GuiControlEvent">A_GuiControlEvent</a>, mit der Doppelklicks in ListBox-, Radio-, Picture- und Text-Steuerelementen erkannt werden können.</p>
<p>Hinzugefügt: Befehle <a href="lib/GuiControl.htm">GuiControl</a> und <a href="lib/GuiControlGet.htm">GuiControlGet</a>, mit denen verschiedene Operationen an einzelnen Steuerelementen durchgeführt werden können.</p>

<h2 id="v1.0.19.00">1.0.19 - 16. September 2004</h2>
<p>Behoben: <a href="Hotstrings.htm">Hotstrings</a> und der <a href="lib/Input.htm">Input</a>-Befehl erkennen nun auch Zeichen, die mit <kbd>AltGr</kbd> (<kbd>Strg</kbd>+<kbd>Alt</kbd>) erzeugt werden, wie z.B. das @-Symbol. [danke Tekl, jordi und /Torben]</p>
<p>Behoben: <a href="Hotstrings.htm">Hotstrings</a>: Nicht-Groß-/Kleinschreibung-sensitive Zeichen wie Ziffern disqualifizieren eine Abkürzung nicht mehr als großgeschrieben. Wenn z.B. der Hotstring <code>::pt1::pteranodon</code> existiert und Sie PT1 (alles großgeschrieben) eingeben, wird nun auch die Ersetzung wie erwartet großgeschrieben. Außerdem wurden kleinere Änderungen am Groß-/Kleinschreibung-Anpassungsmodus vorgenommen.</p>
<p>Behoben: Der Unterbefehl <a href="lib/Menu.htm#DeleteAll">Menu DeleteAll</a> deaktiviert nun nicht mehr permanent alle "Unteruntermenüs", die indirekt einem Menü untergeordnet sind. [danke compuboy_r]</p>
<p>Behoben: Unterbefehl <a href="lib/Process.htm#Priority">Process Priority</a>: Die Prioritätsstufe kann nun in einer Variable enthalten sein. [danke Rajat]</p>
<p>Behoben: Befehle, die den <a href="lib/_InstallKeybdHook.htm">Tastatur-Hook</a> einschalten (z.B. <a href="lib/Input.htm">Input</a>), reaktivieren nun nicht mehr suspendierte Hotkeys. [danke jordi]</p>
<p>Behoben: Automatische Zentrierung von <a href="lib/InputBox.htm">InputBox</a>, <a href="lib/Progress.htm">SplashImage</a>, <a href="lib/Progress.htm">Progress</a> und <a href="lib/SplashTextOn.htm">SplashTextOn</a>: Wenn die Taskleiste links oder oben am Bildschirm verankert ist, wird die Zentrierung nicht mehr um die Dicke der Taskleiste verschoben sein.</p>
<p>Behoben: <a href="lib/WinGetText.htm">WinGetText</a> und <a href="lib/ControlGetText.htm">ControlGetText</a>: Der abgerufene Text ist nun auf die maximale Größe einer Variable begrenzt (standardmäßig 64 MB). [danke hermitress]</p>
<p>Geändert: <a href="lib/BlockInput.htm">BlockInput</a> wird nun vorübergehend deaktiviert, wenn der <a href="lib/Send.htm">Send</a>-Befehl einen ALT-Tastendruck simulieren muss. Da ein geringes Risiko besteht, dass bestehende Skripte, die bei aktivem BlockInput versuchen, ALT zu senden, dadurch unbrauchbar werden, prüfen Sie bitte, ob dies der Fall ist, und passen Sie Ihre Skripte entsprechend an.</p>
<p>Verbessert: <a href="lib/BlockInput.htm">BlockInput</a> kann nun so eingestellt werden, dass es sich automatisch bei folgenden Befehlen einschaltet: <a href="lib/Send.htm">Send</a>, <a href="lib/Send.htm">SendRaw</a>, <a href="lib/MouseMove.htm">MouseMove</a>, <a href="lib/MouseClick.htm">MouseClick</a> und <a href="lib/MouseClickDrag.htm">MouseClickDrag</a>. [danke beardboy]</p>
<p>Verbessert: <a href="Hotkeys.htm">Hotkeys</a> (insbesondere für Joysticks) werden jetzt besser überwacht und gepuffert, wenn das Skript ein Dialogfenster anzeigt oder unterbrechungsfrei ist.</p>
<p>Hinzugefügt: Direktive <a href="lib/_MaxMem.htm">#MaxMem</a>, mit der die maximale Kapazität jeder Variable auf einen anderen Wert als 64 MB (Standard) gesetzt werden kann.</p>
<p>Hinzugefügt: Eine Option für <a href="lib/Run.htm">Run/RunWait</a>, mit der Warndialogfenster und die Terminierung des aktuellen Threads unterdrückt werden können. [danke compuboy_r und andere, die gefragt haben]</p>
<p>Hinzugefügt: Eine Option zum Ändern der Hintergrundfarbe eines Menüs via <code><a href="lib/Menu.htm">Menu</a>, MenüName, Color, FarbeWert</code> (wirkungslos unter Windows 95/NT).</p>
<p>Hinzugefügt: Befehl <a href="lib/KeyWait.htm">KeyWait</a>, mit dem auf das Loslassen oder Drücken einer Tastatur-, Maus- oder Joysticktaste gewartet werden kann.</p>
<p>Hinzugefügt: <a href="lib/IfIn.htm">if Var [not] contains VergleichListe</a>, das der Verwendung von <a href="lib/IfInString.htm">IfInString/IfNotInString</a> entspricht, außer dass mehrere Vergleichszeichenketten unterstützt werden. [danke whynot]</p>
<p>Hinzugefügt: Befehl <a href="lib/Gui.htm">Gui</a>, mit dem Fenster und Steuerelemente erstellt und verwaltet werden können. Solche Fenster können zur Dateneingabe oder als individuelle Benutzerschnittstellen verwendet werden. </p>

<h2 id="v1.0.18.00">1.0.18 - 19. August 2004</h2>
<p>Behoben: Klemmende Modifikatortasten (Strg, Alt, Umschalt und Win) – zumindest in einigen Fällen. Dies sollte helfen zu verhindern, dass <a href="lib/_UseHook.htm">Hook-Hotkeys</a> unerwartet ausgelöst werden, auch wenn der Benutzer keine Modifikatortaste gedrückt hält. Der Fix korrigiert den Modifikatorstatus des Hooks, wann immer er nicht mit den Vorgaben des Betriebssystems einverstanden ist.</p>
<p>Behoben: Maustasten-Hotkeys: Wenn ein Skript LButton als Hotkey definiert, sollten die Menüs des Skripts nun korrekt funktionieren. Ähnlich verhält es sich, wenn ein Skript RButton als Hotkey definiert und dessen Subroutine <code>MouseClick, right</code> verwendet. Das Tray-Symbol sollte nun korrekt auf einen Rechtsklick reagieren, solange <a href="lib/SetMouseDelay.htm">SetMouseDelay</a> auf der Standardeinstellung oder niedriger ist.</p>
<p>Behoben: Unterstützung für diakritische und andere Zeichen (fehlerhaft seit v1.0.16/17). [danke jordi]</p>
<p>Behoben: Einige Probleme mit neutralen Modifikatortasten (Umschalt, Strg, Alt), die als Präfix- oder Suffixtaste verwendet werden. Zum Beispiel:</p>
<pre>Shift &amp; CapsLock::MsgBox Sie haben die Feststelltaste gedrückt, während Sie eine Umschalttaste gedrückt hielten.
Shift::MsgBox Sie haben eine Umschalttaste ohne Modifikation einer anderen Taste losgelassen.</pre>
<p>Behoben: <code><a href="lib/CoordMode.htm">CoordMode</a> Caret</code> verwendet nun seine eigene Einstellung, nicht mehr die von <code>CoordMode ToolTip</code>.</p>
<p>Behoben: <a href="Variables.htm#Caret">A_CaretX/Y</a> sind nun immer leer, wenn kein aktives Fenster vorhanden ist oder die Position des Textcursors nicht ermittelt werden konnte.</p>
<p>Geändert: <a href="lib/Input.htm">Input</a>-Befehl: Der Benutzer kann nun <kbd>Feststell</kbd>, <kbd>Num</kbd> und <kbd>Rollen</kbd> während einer unsichtbaren Eingabeerfassung umschalten.</p>
<p>Verbessert: Die neutralen Modifikatortasten (Alt, Strg und Umschalt) werden vom <a href="lib/_InstallKeybdHook.htm">Hook</a> nun besser verarbeitet, d.h. es wird nun genauer erkannt, welche Taste (links oder rechts) tatsächlich gedrückt wurde. Dies betrifft am ehesten Windows NT4.</p>
<p>Hinzugefügt: <a href="lib/IfBetween.htm">if Var [not] between Wert1 and Wert2</a>, mit dem geprüft werden kann, ob der Inhalt einer Variable zwischen zwei Werten liegt (numerisch oder alphabetisch).</p>
<p>Hinzugefügt: <a href="lib/IfIn.htm">if Var [not] in Wert1,Wert2,...</a>, mit dem geprüft werden kann, ob der Inhalt einer Variable mit einem der Elemente in einer Liste übereinstimmt.</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#ThisMenuItemPos">A_ThisMenuItemPos</a>, die eine Nummer enthält, die die aktuelle Position von A_ThisMenuItem innerhalb von A_ThisMenu angibt.</p>
<p>Hinzugefügt: Befehl <a href="lib/Process.htm">Process</a>, mit dem verschiedene Operationen an einem Prozess durchgeführt werden können: Prüft, ob er existiert; ändert seine Priorität; schließt ihn; wartet, bis er geschlossen wird. [danke AutoIt-Team] Gleichzeitig wurde der <a href="lib/Run.htm">Run</a>-Befehl verbessert, so dass nun optional die Prozess-ID eines neu gestarteten Programms abgerufen werden kann. Außerdem kann die Prozess-ID eines Fensters mit <a href="lib/WinGet.htm">WinGet</a> abgerufen werden.</p>

<h2 id="v1.0.17.00">1.0.17 - 9. August 2004</h2>
<p>Behoben: <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>Entf</kbd>-Sicherheitsbildschirm und <kbd>Win</kbd>+<kbd>L</kbd> (Sperren des Computers), um klemmende Tasten zu verhindern. Beide Tastenkürzel waren fehlerhaft seit v1.0.16. [danke frk]</p>
<p>Behoben: <a href="Hotstrings.htm">Hotstrings</a> für Tastaturbelegungen mit toten Tasten, wie z.B. Akut (<code class="no-highlight">´</code>), Zirkumflex (<code class="no-highlight">^</code>) und Gravis (<code class="no-highlight">`</code>): Die Tastatur wird nun weiter korrekt funktionieren. [danke /Torben &amp; Jordi] </p>
<p>Behoben: Automatisch-ersetzende <a href="Hotstrings.htm">Hotstrings</a>: Endungszeichen, die vom <a href="lib/Send.htm">Send</a>-Befehl reserviert sind, wie z.B. <code class="no-highlight">!{}</code>, werden nun als Teil der Ersetzung gesendet.</p>
<p>Behoben: <a href="lib/LoopReg.htm">Registry-Schleifen</a>: Root-Schlüssel können nun vollständig rekursiv durchsucht werden. [danke sleepyy35]</p>
<p>Behoben: Der <a href="lib/Suspend.htm">Suspend</a>-Befehl deaktivierte manchmal dauerhaft alle <a href="Hotstrings.htm">Hotstrings</a>. [danke Loneaussie]</p>
<p>Behoben: Die Befehle <a href="lib/Suspend.htm">Suspend</a> und <a href="lib/Hotkey.htm">Hotkey</a> vermeiden nun das Zurücksetzen von Hotkeys, die der Benutzer gedrückt hält. [danke WhiteCloud]</p>
<p>Behoben: <a href="lib/Input.htm">Input</a>-Befehl: Eine in einer Variable enthaltene Vergleichsliste wird nicht mehr ignoriert, wenn ihr erstes Zeichen ein Komma ist. [danke Rajat]</p>
<p>Geändert: <a href="lib/Input.htm">Input</a>-Befehl: Zwei aufeinanderfolgende Kommas in <em>VergleichListe</em> ergeben nun ein direkt geschriebenes Komma. Zum Beispiel würde das Folgende ein direkt geschriebenes Komma nach dem Wort Zkette1 erzeugen: <code class="no-highlight">Zkette1,,,Zkette2</code>.</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/Transform.htm#Deref">Transform Deref</a>, mit dem Variablenreferenzen und Escapesequenzen in einer Zeichenkette aufgelöst werden können. [Danke an alle Beteiligten]</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#EndChar">A_EndChar</a>, die das Endungszeichen enthält, mit dem der Benutzer zuletzt einen nicht-automatisch-ersetzenden <a href="Hotstrings.htm">Hotstring</a> ausgelöst hat. Wenn kein Endungszeichen erforderlich war (wegen der <a href="Hotstrings.htm#Asterisk">*-Option</a>), ist diese Variable leer.</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#Caret">A_CaretX</a> und <a href="Variables.htm#Caret">A_CaretY</a>, die die aktuelle X- und Y-Koordinate des Textcursors (Texteinfügemarke) enthalten.</p>

<h2 id="v1.0.16.00">1.0.16 - 15. Juli 2004</h2>
<p><span style="color: #FF0000">Gravierende Änderungen:</span> Obwohl 99% der Skripte nicht betroffen sein sollten, werden in diesem Abschnitt alle Änderungen aufgeführt, die die Funktionsweise eines Skripts unerwartet ändern können. Ich habe versucht, so viele davon wie möglich in diese Version zu integrieren, um die Notwendigkeit solcher Änderungen in Zukunft zu minimieren.</p>
<p>Geändert: <a href="lib/SetBatchLines.htm">BatchLines</a>-Standardeinstellung ist nun 10ms statt 10, wodurch längere Operationen – wie z.B. <a href="lib/Loop.htm">Schleifen</a> mit vielen Wiederholungen – wesentlich schneller ausgeführt werden. Die meisten Skripte sollten weiterhin korrekt funktionieren. Wenn Sie jedoch 100%ige Kompatibilität mit der vorherigen Version von AutoHotkey wünschen, fügen Sie <code>SetBatchLines 10</code> am Anfang des Skripts ein, das nicht bereits den <a href="lib/SetBatchLines.htm">SetBatchLines</a>-Befehl verwendet.</p>
<p>Geändert: Skripte mit Hotkeys, Hotstrings oder <a href="lib/_Persistent.htm">#Persistent</a> sind nun automatisch <a href="lib/_SingleInstance.htm">#SingleInstance</a>. Mit <code>#SingleInstance Off</code> kann dies überschrieben werden.</p>
<p>Geändert: Der <a href="lib/Input.htm">Input</a>-Befehl sieht <kbd>Enter</kbd> nun als Zeilenvorschub (`n), nicht mehr als Wagenrücklauf (`r). Dies hat Einfluss auf den Inhalt von <em>AusgabeVar</em> und <em>VergleichListe</em>. Bitte passen Sie Ihre Skripte entsprechend an.</p>
<p>Geändert: <a href="lib/Run.htm">Run/RunWait</a> starten nun Nicht-EXE-Dateien (z.B. Dokumente) mit dem Standardverb statt mit "open". Da das Standardverb normalerweise "open" ist, sollten die meisten Skripte davon nicht betroffen sein.</p>
<p><span style="color: #FF0000">(normale Änderungen unterhalb dieses Abschnitts)</span></p>
<p>Behoben: Ausführung von LNK-Dateien (Verknüpfungen) via <a href="lib/Run.htm">Run/RunWait</a>. [danke ealerner]</p>
<p>Behoben: <a href="lib/StringLower.htm">StringUpper/StringLower</a> funktionieren nun mit akzentuierten Buchstaben und Buchstaben mit einem ASCII-Wert größer als 127.</p>
<p>Behoben: <a href="lib/Progress.htm">Progress</a>: Die W-Option (Fensterbreite) funktioniert nun wieder.</p>
<p>Behoben: <kbd>Umschalt</kbd>+<kbd>Win</kbd>-Hotkeys mit dem <a href="lib/Send.htm">Send</a>-Befehl: In einigen Fällen wurden zusätzliche <kbd>Umschalt</kbd>-Ereignisse erzeugt, die die Möglichkeit beeinträchtigten, einen Hotkey zweimal oder mehrmals hintereinander zu verwenden. [danke Jabberwock]</p>
<p>Behoben: Keine Mehrdeutigkeiten mehr mit <code>`::</code>, wenn es als Teil eines <a href="Hotkeys.htm">Hotkeys</a> statt direkt geschrieben in einem Befehl verwendet wird. [danke Rajat]</p>
<p>Behoben: EingabeVars, die dynamisch in die Namen von Umgebungsvariablen aufgelöst werden. Manchmal wurde der Wert nicht aus der Systemumgebung geholt [danke Samlii]. Beispiel:</p>
<pre>UmgebungVar = SystemRoot
StringTrimLeft, AusgabeVar, %UmgebungVar%, 0</pre>
<p>Behoben: Wenn <kbd>Alt</kbd> selbst ein Hotkey ist, der beim Drücken ausgelöst wird, werden die vom <a href="lib/Send.htm">Send</a>-Befehl gesendeten Tasten nicht mehr von <kbd>Alt</kbd> modifiziert. [danke Wade]</p>
<p>Behoben: <a href="lib/LoopFile.htm">A_LoopFileDir</a> ist nun leer für Dateien, die im Wurzelverzeichnis einer Suche mit relativem Pfad enthalten sind.</p>
<p>Behoben: <a href="lib/Input.htm">Input</a>-Befehl: Bei mehr als 1024 Elementen in der Vergleichsliste treten nun keine Speicherprobleme mehr auf. Außerdem wird der Befehl beim Aktivieren des <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>Entf</kbd>-Sicherheitsbildschirms nicht mehr annehmen, dass <kbd>Strg</kbd> und <kbd>Alt</kbd> dauerhaft gedrückt sind. [danke frk und beardboy]</p>
<p>Geändert: Der <a href="lib/Input.htm">Input</a>-Befehl ignoriert nun <kbd>Strg</kbd>+<kbd>Backspace</kbd> und andere modifizierte Backspaces. Nur ein einfaches Backspace wird als "rückgängig machen" erkannt.</p>
<p>Geändert: <a href="lib/Menu.htm">Benutzerdefinierte Menüpunkte</a> können die <a href="lib/OnExit.htm">OnExit</a>-Subroutine nicht mehr unterbrechen (wie dokumentiert). Außerdem verhalten sich benutzerdefinierte Menüpunkte jetzt eher wie Hotkeys, was die Pufferung und die Fähigkeit, andere <a href="misc/Threads.htm">Threads</a> zu unterbrechen, betrifft.</p>
<p>Verbessert: Die maximale Größe jeder <a href="Variables.htm">Variable</a> wurde von 16 auf 64 MB erhöht (dies erhöht nicht den Speicherbedarf eines Skripts). Dies kann zu einer konfigurierbaren Option gemacht werden, falls gewünscht.</p>
<p>Es kann nun ein direkt geschriebenes Doppelpunktpaar verwendet werden, indem man es mit einem <a href="misc/EscapeChar.htm">Escapezeichen</a> versieht, z.B. <code class="no-highlight">`::</code>.</p>
<p>Verbessert: <a href="KeyList.htm#SpecialKeys">Scancode-Präfixtasten</a> sind jetzt möglich, z.B. <code>SC118 &amp; Enter::MsgBox</code>. [danke Rajat]</p>
<p>Verbessert: <a href="lib/Progress.htm">SplashImage</a>:</p>
<ul>
  <li>"Seitenverhältnis beibehalten" kann durch die Angabe von -1 für ZW (Objektbreite) oder ZH (Objekthöhe) erreicht werden. [danke MikeG]</li>
  <li>Das Bild wird komplett neu gezeichnet, wenn man ein anderes Fenster darüber zieht (verhindert Artefakte).</li>
  <li>Das Bild "blinkt" nicht mehr, wenn der Benutzer die Fenstergröße ändert.</li>
</ul>
<p>Verbessert: <a href="lib/ControlClick.htm">ControlClick</a>: Es kann nun auf eine bestimmte Koordinate innerhalb des Steuerelements geklickt werden. [danke Beastmaster]</p>
<p>Hinzugefügt: Unterstützung für den AutoIt v2-Befehl HideAutoItWin, der dasselbe tut wie <code><a href="lib/Menu.htm">Menu</a>, Tray, Icon|NoIcon</code>.</p>
<p>Hinzugefügt: Unterstützung für <a href="misc/Threads.htm">Thread-Priorität</a>, die bestimmt, ob ein Thread andere Threads unterbrechen (oder von ihnen unterbrochen werden) kann. Die folgenden Befehle unterstützen das Setzen der Priorität: <a href="lib/Hotkey.htm">Hotkey</a>, <a href="lib/Menu.htm">Menu</a>, <a href="lib/SetTimer.htm">SetTimer</a>, <a href="lib/_Hotstring.htm">#Hotstring</a> und <a href="lib/Thread.htm">Thread</a> (setzt die Priorität des aktuellen Threads). Außerdem ist es nun möglich, <a href="Hotstrings.htm">Hotstrings</a> bei ihrer Definition eine individuelle Priorität zuzuweisen. </p>
<p>Hinzugefügt: Befehle <a href="lib/Send.htm">SendRaw</a> und <a href="lib/ControlSend.htm">ControlSendRaw</a>, mit denen Tastendrücke ohne Übersetzung von z.B. {Enter} in <kbd>Enter</kbd>, ^c in <kbd>Strg</kbd>+<kbd>C</kbd> usw. gesendet werden können.</p>
<p>Hinzugefügt: <a href="Variables.htm#BuiltIn">Interne Variablen</a> für Monatsname (A_MMMM und A_MMM) und Tagesname (A_DDDD und A_DDD). Außerdem kann jetzt A_YYYY statt A_Year, A_MM statt A_Mon und A_DD statt A_MDay verwendet werden.</p>
<p>Hinzugefügt: Interne <a href="Hotstrings.htm">Hotstrings und automatische Ersetzung</a>. Dies ist ein recht umfangreiches Feature und wird wahrscheinlich in den kommenden Wochen auf der Grundlage eurer Ideen und eures Feedbacks verfeinert werden.</p>

<h2 id="v1.0.15.00">1.0.15 - 29. Juni 2004</h2>
<p>Behoben: <code><a href="lib/Menu.htm">Menu</a>, MeinMenü, Show</code>: Das Menü kann nun immer durch Klicken außerhalb des Menüs geschlossen werden. [danke Rajat]</p>
<p>Behoben: <a href="lib/Progress.htm">Progress</a>-Befehl: Es wird nun auch ein Fenster erstellt, wenn keine Optionen angegeben sind.</p>
<p>Behoben: <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>Entf</kbd> auf Windows XP-Systemen, die so konfiguriert sind, dass der Sicherheitsbildschirm anstelle des Taskmanagers angezeigt wird: <kbd>Strg</kbd> und <kbd>Alt</kbd> sollten beim Zurückkehren nicht dauerhaft gedrückt sein. [danke frk]</p>
<p>Behoben: Die automatische Zentrierung des <a href="lib/InputBox.htm">InputBox</a>-Fensters war leicht verschoben, weil die Taskleiste nicht berücksichtigt wurde.</p>
<p>Verbessert: Die Restriktionen für folgende Befehle wurden gelockert, so dass sie in ihrem vereinfachten Parametermodus ausgeführt werden können, selbst wenn sie in einer Subroutine verwendet werden, die aus dem Körper der übergeordneten Schleife aufgerufen wird: RegRead/Write/Delete, FileAppend, FileGet/SetAttrib, FileGet/SetTime, FileGetSize/Version.</p>
<p>Hinzugefügt: Ein kompiliertes Skript kann nun mit Exe2Ahk dekompiliert werden (wenn das Passwort bekannt ist). [danke Jon Bennett]</p>
<p>Geändert: Zwei Optionen im <a href="lib/Progress.htm">Progress</a>-Befehl wurden umbenannt: Benennen Sie in Ihren Skripten ZC (Balkenfarbe) in CB und ZB (Balkenhöhe) in ZH um.</p>
<p>Verbessert: <a href="lib/Progress.htm">Progress</a>-Befehl:</p>
<ul>
  <li>Name, Größe, Dicke und Farbe der Schrift angeben.</li>
  <li>Hintergrundfarbe des Fensters angeben. [danke Rajat &amp; beardboy]</li>
  <li>Dicke und Farbe der Leiste angeben.</li>
  <li>Automatische Fensterhöhe (falls nicht angegeben).</li>
  <li>Bessere Kontrolle über Abstände, Ränder und Layout. [danke Rajat]</li>
  <li>Nur ein Fortschrittsbalken ohne sichtbares Fenster um ihn herum.</li>
  <li>Den Balken ganz weglassen, um ausschließlich Text in einer bestimmten Schriftart/Farbe/Größe anzuzeigen (eine gute Alternative zu <a href="lib/SplashTextOn.htm">SplashText</a>).</li>
</ul>
<p>Verbessert: <a href="lib/SplashTextOn.htm">SplashTextOn</a> und <a href="lib/Progress.htm">Progress</a>: Ihre Fenster werden nicht mehr versteckt, wenn das Hauptfenster minimiert ist.</p>
<p>Verbessert: Es kann nun mehr als ein <a href="lib/ToolTip.htm">ToolTip</a> erstellt werden. [danke Rajat]</p>
<p>Verbessert: <a href="lib/FileGetTime.htm">FileGetTime</a> und <a href="lib/FileGetSize.htm">FileGetSize</a> funktionieren nun auch mit Dateien, die gerade in Benutzung sind, so dass sie den Zeitpunkt des letzten Zugriffs auf die Datei nicht mehr verändern.</p>
<p>Verbessert: <a href="lib/StringMid.htm">StringMid</a> kann nun auch Zeichen links von der angegebenen Position extrahieren. [danke Rajat]</p>
<p>Hinzugefügt: Text-zu-HTML-Umwandlung via <a href="lib/Transform.htm#HTML">Transform HTML</a>. Es übersetzt Zeichen, deren ASCII-Wert größer als 127 ist, in ihre HTML-Namen (z.B. wird <code class="no-highlight">£</code> zu <code class="no-highlight">&amp;pound;</code>). Außerdem werden die vier Zeichen <code class="no-highlight">"&amp;&lt;&gt;</code> in <code class="no-highlight">&amp;quot;&amp;amp;&amp;lt;&amp;gt;</code> und jeder Zeilenvorschub (<code class="no-highlight">`n</code>) in <code class="no-highlight">&lt;br&gt;`n</code> übersetzt (d.h. <code class="no-highlight">&lt;br&gt;</code> gefolgt von einem Zeilenvorschub).</p>
<p>Hinzugefügt: Befehl <a href="lib/ControlGetPos.htm">ControlGetPos</a>. [danke Jerry]</p>
<p>Hinzugefügt: Befehl <a href="lib/SplitPath.htm">SplitPath</a>, mit dem ein Dateiname in Name, Verzeichnis, Endung und Laufwerk aufgeteilt werden kann.</p>
<p>Hinzugefügt: Befehl <a href="lib/Progress.htm">SplashImage</a>, mit dem ein GIF-, JPG- oder BMP-Bild mit optionalem Begleittext angezeigt werden kann.</p>

<h2 id="v1.0.14.00">1.0.14 - 17. Juni 2004</h2>
<p>Verbessert: Window Spy meldet nun immer die korrekten Namen der Steuerelemente in Multi-Bereich- oder Multi-Tab-Fenstern. Außerdem wird nun bei überlappenden Steuerelementen das Steuerelement bevorzugt, dessen Mittelpunkt dem Mauszeiger am nächsten liegt.</p>
<p>Verbessert: <a href="lib/MouseGetPos.htm">MouseGetPos</a> kann nun auch den Namen des Steuerelements unter dem Mauszeiger abrufen. [danke jamestr]</p>
<p>Verbessert: <a href="lib/FileSelectFile.htm">FileSelectFile</a> kann nun auch eine Speichern-Schaltfläche anstelle einer Öffnen-Schaltfläche anzeigen.</p>
<p>Verbessert: <a href="lib/ToolTip.htm">ToolTip</a> blockiert nicht mehr den Mauszeiger, wenn keine Koordinaten angegeben sind.</p>
<p>Verbessert: Der <a href="lib/Input.htm">Input</a>-Befehl unterstützt nun auch UMSCHALT-modifizierte Endungstasten (üblicherweise Interpunktionszeichen wie z.B. <code class="no-highlight">:!?@</code>). Wenn Sie ein Skript haben, das nicht-alphabetische Endungstasten verwendet, die UMSCHALT-modifizierte Gegenstücke haben (z.B. Semikolon und Doppelpunkt), müssen Sie es möglicherweise leicht anpassen.</p>
<p>Verbessert: <a href="lib/IfIs.htm">If Var is [not] Typ</a> unterstützt nun die folgenden Typen: lower, upper und xdigit.</p>
<p>Hinzugefügt: <a href="Scripts.htm#cmd">Befehlszeilenparameter</a> /ErrorStdOut, mit dem alle Syntaxfehler, die den Start eines Skripts verhindern, zur Standardausgabe (stdout) gesendet werden können, anstatt ein Dialogfenster anzuzeigen. Dies befähigt umfangreiche Texteditoren wie SciTE und EditPlus, zur fraglichen Zeile zu springen. Die neue Direktive <a href="lib/_ErrorStdOut.htm">#ErrorStdOut</a> macht dasselbe, aber um zu vermeiden, dass sie in jedes Skript eingefügt werden muss, ist es sinnvoller, den Texteditor so einzustellen, dass er den Befehlszeilenparameter verwendet. [danke Jack Horsfield &amp; JdeB]</p>
<p>Hinzugefügt: Es können nun Tasten mit untypischen Scancodes gesendet werden. Verwenden Sie <a href="lib/Send.htm#vk">Send {vkXXscYYY}</a>. [Danke an alle Beteiligten]</p>
<p>Hinzugefügt: Befehl <a href="lib/Progress.htm">Progress</a>, mit dem ein oder mehrere Fortschrittsbalkenfenster angezeigt werden können. [danke AutoIt3-Team]</p>

<h2 id="v1.0.13.00">1.0.13 - 10. Juni 2004</h2>
<p>Behoben: <a href="lib/_InstallKeybdHook.htm">Hook-Hotkeys</a>, die ein Tastaturpräfix, aber ein Maustastensuffix verwenden, wenn das Präfix auch ein Suffix ist (fehlerhaft seit v1.0.12) [danke jamestr]. Beispiel:<br></p>
<pre>$a::Send, a
a &amp; LButton::Send, b</pre>
<p>Behoben: Interferenzen zwischen mehreren Skripten, die die <a href="lib/_InstallKeybdHook.htm">Hooks</a> gleichzeitig verwenden.</p>
<p>Behoben: <a href="lib/Send.htm#asc">Send {Asc nnnnn}</a> erlaubt nun das Senden von Codes höher als 255 (Unicode). [danke Aj]</p>
<p>Geändert: Ein Skript geht nur dann davon aus, dass <kbd>Strg</kbd>/<kbd>Alt</kbd>/<kbd>Umschalt</kbd>/<kbd>Win</kbd> dauerhaft gedrückt sind, wenn es sie so festgelegt hat. [danke jamestr &amp; Jon]</p>
<p>Verbessert: Der Text von <a href="lib/SplashTextOn.htm">SplashTextOn</a> wird nun schneller aktualisiert. [danke Sds]</p>
<p>Verbessert: Der <a href="lib/Send.htm">Send</a>-Befehl unterstützt nun besser nicht-englische Buchstaben, Symbole und Tastaturen. Wenn ihr Probleme mit dieser Version habt, lasst es mich bitte wissen. Es werden u.a. die folgenden Zeichen unterstützt: <code class="no-highlight">€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ&nbsp;¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ</code><br>
(Mit <a href="lib/Send.htm#asc">Send {Asc nnnnn}</a> können Sie Unicode-Zeichen erstellen, deren ANSI-Wert größer als 255 sind)</p>
<p>Verbessert: Der <a href="lib/Send.htm">Send</a>-Befehl interferiert seltener mit Hotkeys, die der Benutzer gedrückt hält, um sie automatisch wiederholt zu senden (hilft nur bei <a href="lib/_UseHook.htm">Hook-Hotkeys</a>). [danke jamestr &amp; Jon]</p>
<p>Verbessert: Der <a href="lib/Menu.htm">Menu</a>-Befehl kann nun optional <a href="misc/ErrorLevel.htm">ErrorLevel</a> verwenden, anstatt Laufzeitfehler anzuzeigen.</p>
<p>Hinzugefügt: Es ist nun möglich, das Symbol des Skripts während der Ausführung zu ändern. Dies betrifft sowohl das Tray- als auch <a href="lib/InputBox.htm">InputBox</a>-Symbol. Verwenden Sie <code class="no-highlight"><a href="lib/Menu.htm">Menu</a>, Tray, Icon, DateiName [, SymbolNummer]</code>.</p>
<p>Hinzugefügt: Es ist nun möglich, den Tooltip des Tray-Symbols zu ändern, via <code class="no-highlight"><a href="lib/Menu.htm">Menu</a>, Tray, Tip [, NeuerText]</code> [danke beardboy].</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#ThisMenuItem">A_ThisMenuItem</a> und <a href="Variables.htm#ThisMenu">A_ThisMenu</a>, die den Namen des zuletzt ausgewählten benutzerdefinierten Menüpunkts bzw. den Namen des Menüs, wo er ausgewählt wurde, enthalten.</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#Now">A_Now</a> und <a href="Variables.htm#NowUTC">A_NowUTC</a>, die die aktuelle Ortszeit bzw. koordinierte Weltzeit im <a href="lib/FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a>-Format enthalten.</p>
<p>Hinzugefügt: Die folgenden <a href="Variables.htm#BuiltIn">internen Variablen</a>, die die aktuelle Einstellung der zugehörigen Befehle enthalten: A_TitleMatchMode, A_TitleMatchModeSpeed, A_DetectHiddenWindows, A_DetectHiddenText, A_AutoTrim, A_StringCaseSense, A_FormatInteger, A_FormatFloat, A_KeyDelay, A_WinDelay, A_ControlDelay, A_MouseDelay, A_DefaultMouseSpeed, A_IconHidden, A_IconTip, A_IconFile und A_IconNumber.</p>
<p>Hinzugefügt: Befehl <a href="lib/OnExit.htm">OnExit</a>, mit dem eine Subroutine angegeben werden kann, die bei Beendigung des Skripts ausgeführt werden soll. Außerdem wurde die interne Variable <a href="Variables.htm#ExitReason">A_ExitReason</a> hinzugefügt, die den Grund für die Beendigung des Skripts enthält (z.B. Logoff). [danke beardboy]</p>
<p>Hinzugefügt: Befehl <a href="lib/Sort.htm">Sort</a>, mit dem der Inhalt einer Variable in alphabetischer oder numerischer Reihenfolge sortiert werden kann.</p>
<p>Hinzugefügt: Die folgenden <a href="lib/Menu.htm">Menu</a>-Features:</p>
<ul>
  <li>Es können beliebig viele benutzerdefinierte Menüs erstellt werden.</li>
  <li>Solche Menüs können als Kontextmenü an der Position des Mauszeigers angezeigt werden (z.B. per Hotkey).</li>
  <li>Solche Menüs können Untermenüs eines anderen Menüs sein, einschließlich des Tray-Menüs.</li>
</ul>

<h2 id="v1.0.12.00">1.0.12 - 1. Juni 2004</h2>
<p>Behoben: Der Skript-Compiler (<a href="Scripts.htm#ahk2exe">ahk2exe</a>) erkennt nun <a href="lib/FileInstall.htm">FileInstall</a>-Befehle auch dann, wenn sie wie folgt auf derselben Zeile wie ein IF-Befehl stehen: <code>IfMsgBox, Yes, FileInstall, ...</code> [danke Rajat]</p>
<p>Behoben: Der AusnahmeText-Parameter aller fensterspezifischen Befehle. Zuvor war er praktisch nutzlos.</p>
<p>Behoben: Einige Probleme bezüglich dessen, eine Tastatur- oder Maustaste als Hotkey-Präfix und -Suffix zu verwenden. Im folgenden Beispiel wurde <kbd>A</kbd> beim Gedrückthalten nicht wiederholt gesendet. Außerdem wurde der Hotkey <code>$^a::</code> beim Loslassen der Taste ausgelöst, obwohl er beim Herunterdrücken der Taste hätte ausgelöst werden müssen:</p>
<pre>~a &amp; b::MsgBox "B" wurde gedrückt, während "A" gedrückt gehalten wurde.
$^a::MsgBox ^a</pre>
<p>Behoben: Ununterdrückte Präfixtasten, die auch als modifizierte Suffixe verwendet werden (selten): Ihre Up-Ereignisse wurden irrtümlich unterdrückt, wie im folgenden Beispiel: [danke Rajat]</p>
<pre>~!LButton::ToolTip, Klick
~LButton &amp; RButton::MsgBox Die rechte Maustaste wurde gedrückt, während die linke Maustaste gedrückt gehalten wurde.</pre>
<p>Behoben: Kombinations-Hotkeys, die ein neutrales (nicht-links/rechts-spezifisches) Präfix verwenden, z.B. <code>Control &amp; LShift::</code>. Außerdem werden nun auch neutrale Suffixe unterstützt, z.B. <code>AppsKey &amp; Control::</code>.</p>
<p>Behoben: Falsche Hotkeys wurden ausgelöst, wenn eine Taste während einer <a href="lib/Send.htm">Send</a>-Operation physisch gedrückt oder gedrückt gehalten wurde (sehr selten). Dieser Fix gilt nur für <a href="lib/_InstallKeybdHook.htm">Hook-Hotkeys</a>.</p>
<p>Geändert: Nur für Windows NT4: <kbd>Strg</kbd>/<kbd>Alt</kbd>/<kbd>Win</kbd>/<kbd>Umschalt</kbd> werden nun spezifischer als links oder rechts statt als neutral behandelt, was eventuell die Unterstützung für einige Arten von <a href="lib/_InstallKeybdHook.htm">Hook-Hotkeys</a> verbessert.</p>
<p>Verbessert: Der <a href="lib/Hotkey.htm">Hotkey</a>-Befehl kann nun optional einen Hotkey in den entgegengesetzten Zustand schalten (aktiviert oder deaktiviert). Außerdem wurden einige Optimierungen an diesem Befehl vorgenommen. [danke beardboy]</p>
<p>Verbessert: <a href="lib/MouseGetPos.htm">MouseGetPos</a> kann nun auch die eindeutige ID-Nummer des Fensters unter dem Mauszeiger abrufen. Diese ID-Nummer kann im FensterTitel-Parameter eines fensterspezifischen Befehls durch Voranstellen der Zeichenkette <code class="no-highlight">ahk_id</code> verwendet werden.</p>
<p>Hinzugefügt: Befehl <a href="lib/WinGet.htm">WinGet</a>, mit dem die eindeutige ID-Nummer eines Fensters abgerufen werden kann oder alle Fenster gemäß bestimmter Kriterien gefunden werden können.</p>

<h2 id="v1.0.11.00">1.0.11 - 25. Mai 2004</h2>
<p>Behoben: <a href="lib/FileSelectFile.htm">FileSelectFile</a> ändert nicht mehr das Arbeitsverzeichnis des Skripts (<a href="Variables.htm#WorkingDir">%A_WorkingDir%</a>). [danke Jon]</p>
<p>Behoben: <a href="lib/SoundPlay.htm">SoundPlay</a> führt nicht mehr dazu, dass das Skript während <a href="lib/Exit.htm">Exit</a> oder <a href="lib/Reload.htm">Reload</a> hängen bleibt [danke jamestr &amp; Larry Keys].</p>
<p>Behoben: Zahlen mit einer Null am Anfang wurden manchmal als oktal (Basis 8) interpretiert.</p>
<p>Behoben: <kbd>Win</kbd> und <kbd>Alt</kbd> blieben manchmal dauerhaft gedrückt, wenn mehrere Skripte gleichzeitig den <a href="lib/_InstallKeybdHook.htm">Tastatur-Hook</a> verwenden.</p>
<p>Behoben: Ein Bug in <a href="lib/LoopParse.htm">parsenden Schleifen</a>, der nur auftrat, wenn der Trennzeichen-Parameter leer ist, nicht aber der ZuEntfernendeZeichen-Parameter. [danke Beastmaster]</p>
<p>Behoben: <u>Nur für Windows NT</u>: <a href="lib/GetKeyState.htm">GetKeyState</a> und die Tatsache, dass der <a href="lib/Send.htm">Send</a>-Befehl die Modifikatoren des Hotkeys nicht ausgelöst hat, obwohl er dies hätte tun sollen. [danke beardboy]</p>
<p>Geändert: <a href="lib/Loop.htm">Schleifen</a>: Es kann nun eine Variable verwendet werden, die eine Floating-Point-Zahl enthält. Beispiel: <code>Loop, %MeineFloatZahl%</code></p>
<p>Verbessert: Die Hilfedatei wurde aktualisiert, um darauf hinzuweisen, dass die verschiedenen Control-Befehle durch <a href="lib/SetTitleMatchMode.htm">SetTitleMatchMode</a> beeinflusst werden, wenn per Name statt per Klasse und Sequenznummer gesucht wird.</p>
<p>Verbessert: <a href="lib/MouseMove.htm">MouseMove</a>, <a href="lib/MouseClick.htm">MouseClick</a> und <a href="lib/MouseClickDrag.htm">MouseClickDrag</a> können nun den Mauszeiger relativ zu seiner aktuellen Position bewegen. [danke Rajat]</p>
<p>Hinzugefügt: Modus 3 (exakte Übereinstimmung) für <a href="lib/SetTitleMatchMode.htm">SetTitleMatchMode</a>. [danke Jack Horsfield]</p>
<p>Hinzugefügt: Befehl <a href="lib/SetWorkingDir.htm">SetWorkingDir</a>, mit dem das Arbeitsverzeichnis des Skripts (<a href="Variables.htm#WorkingDir">%A_WorkingDir%</a>) geändert werden kann.</p>
<p>Hinzugefügt: Befehl <a href="lib/WinGetClass.htm">WinGetClass</a>, mit dem der Klassenname eines Fensters abgerufen werden kann. [danke compuboy_r]</p>
<p>Hinzugefügt: Befehl <a href="lib/Transform.htm">Transform</a>, mit dem verschiedene mathematische Funktionen und Aufgaben wie ASCII-Konvertierung und bitweise Operationen ausgeführt werden können. [danke Rajat]</p>
<p>Hinzugefügt: Befehl <a href="lib/Hotkey.htm">Hotkey</a>, mit dem ein Hotkey erstellt, modifiziert, aktiviert oder deaktiviert werden kann, während das Skript läuft. [Danke an alle Beteiligten]</p>

<h2 id="v1.0.10.00">1.0.10 - 11. Mai 2004</h2>
<p>Behoben: Alle fensterspezifischen Befehle können nun auch mit titellosen Fenstern arbeiten. [danke Rajat]</p>
<p>Behoben: Wenn ein Skript genau einen <a href="lib/SetTimer.htm">Timer</a> hat und dieser sich während eines <a href="lib/Sleep.htm">Sleeps</a> oder einer anderen Verzögerung selbst ausschaltet, schlief das Skript für immer. [danke beardboy]</p>
<p>Behoben: Mehrdeutigkeit zwischen Variablen und Befehlen. Das erste Wort einer Zeile wie der folgenden wird nun als Variable statt als Befehl interpretiert: <code>Input = Zkette</code></p>
<p>Behoben: <a href="lib/_Persistent.htm">#Persistent</a> funktioniert nun mit allen Arten von Skripten.</p>
<p>Behoben: <code><a href="lib/ControlGet.htm">ControlGet</a>, AusgabeVar, Line, 1</code> und <code><a href="lib/Control.htm">Control</a>, Choose, 1</code>.</p>
<p>Behoben: Einige Probleme mit Maus-Hotkeys in Skripten, die nicht den Tastatur-Hook verwenden.</p>
<p>Behoben: Verzögerungen von 0 sind nun genauso lang wie in v1.0.08. Dies betrifft Befehle wie <a href="lib/SetWinDelay.htm">SetWinDelay</a> und <a href="lib/SetControlDelay.htm">SetControlDelay</a>.</p>
<p>Behoben: Der Steuerelement-Parameter von <a href="lib/ControlSetText.htm">ControlSetText</a> kann nun leer gelassen werden.</p>
<p>Verbessert: AutoScriptWriter für AutoHotkey angepasst. Das Tool verwendet nun <a href="lib/MouseClick.htm">MouseClick</a> statt LeftClick, verwendet Akzent statt umgekehrten Schrägstrich als Escapezeichen und speichert Dateien mit der .ahk-Endung. [danke Larry Keys]</p>
<p>Verbessert: Der Hotkey-Modifikator Tilde (~) funktioniert nun mit Präfixtasten. Wenn z.B. <code>~RButton &amp; C::Run, Calc</code> ein Hotkey ist, wird die rechte Maustaste ihre normale Funktion ausführen, anstatt nichts zu tun. [danke Riccardo]</p>
<p>Verbessert: Der Schlüssel-Parameter von <a href="lib/IniDelete.htm">IniDelete</a> kann nun weggelassen werden, um eine komplette Sektion zu löschen. [danke beardboy &amp; Atomhrt]</p>
<p>Verbessert: <a href="lib/_SingleInstance.htm">#SingleInstance</a> kann nun Versuche ignorieren, ein Skript zu starten, das bereits läuft. [danke Rajat]</p>
<p>Verbessert: <a href="lib/ListLines.htm">ListLines</a> zeigt nun 200 statt 50 Zeilen an und zeigt die verstrichene Zeit zwischen den Zeilen an. [danke beardboy]</p>
<p>Verbessert: <a href="lib/MouseClick.htm">MouseClick</a>, <a href="lib/MouseClickDrag.htm">MouseClickDrag</a> und <a href="lib/ControlClick.htm">ControlClick</a> unterstützen nun die vierte und fünfte Maustaste und das Drehen des Mausrads. [danke skrommel]</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#Cursor">A_Cursor</a>, die den Namen des aktuell angezeigten Mauszeigers enthält. [danke AutoIt3-Team &amp; mgetlik]</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#IsAdmin">A_IsAdmin</a>, die 1 enthält, wenn der aktuelle Benutzer Adminrechte hat, andernfalls 0. [danke AutoIt3-Team &amp; jpk]</p>
<p>Hinzugefügt: Interne Variablen <a href="Variables.htm#IPAddress">A_IPAddress1, 2, 3 und 4</a>, die die IP-Adressen der ersten vier Netzwerkadapter des Computers enthalten. [danke AutoIt3-Team &amp; Rajat]</p>
<p>Hinzugefügt: Befehl <a href="lib/CoordMode.htm">CoordMode</a>, der die Verwendung von Bildschirmkoordinaten (absolute Koordinaten) anstelle von relativen Koordinaten für eine der folgenden Befehlsgruppen ermöglicht: Mouse (<a href="lib/MouseMove.htm">Move</a>, <a href="lib/MouseClick.htm">Click</a>, <a href="lib/MouseClickDrag.htm">Drag</a>, <a href="lib/MouseGetPos.htm">GetPos</a>), Pixel (<a href="lib/PixelGetColor.htm">GetColor</a>, <a href="lib/PixelSearch.htm">Search</a>) and <a href="lib/ToolTip.htm">ToolTip</a>. Außerdem zeigt Window Spy nun sowohl relative Koordinaten als auch Bildschirmkoordinaten an. [Danke an alle Beteiligten]</p>
<p>Hinzugefügt: Befehl <a href="lib/DriveGet.htm">DriveGet</a>, mit dem verschiedene Informationen über die Laufwerke des Computers abgerufen werden können. [danke AutoIt3-Team &amp; Rajat]</p>
<p>Hinzugefügt: Befehl <a href="lib/TrayTip.htm">TrayTip</a>, mit dem eine Sprechblase in der Nähe des Tray-Symbols angezeigt werden kann.</p>
<p>Hinzugefügt: Befehl <a href="lib/Input.htm">Input</a>, mit dem auf die Eingabe einer Zeichenkette durch den Benutzer gewartet werden kann. [Danke an alle Beteiligten]</p>
<p>Hinzugefügt: Unterstützung für Joystick-Hotkeys. Außerdem kann <a href="lib/GetKeyState.htm">GetKeyState</a> nun den Status von Joystick-Tasten, Achsenpositionen und andere Informationen abrufen. Einzelheiten finden Sie in der <a href="KeyList.htm">Tastenliste</a>. [danke compuboy_r &amp; Rajat]</p>

<h2 id="v1.0.09.00">1.0.09 - 27. April 2004</h2>
<p>Behoben: <a href="lib/FileSelectFile.htm">FileSelectFile</a> funktioniert nun unter Windows 95/98/Me/NT. [danke Mike Griffin]</p>
<p>Behoben: <a href="lib/Run.htm">Run</a> &amp; <a href="lib/Run.htm">RunWait</a> unter Windows 95/98/Me: Manchmal meldeten sie irrtümlich einen Fehler.</p>
<p>Behoben: In Windows 95/98/NT/2000 wurden benutzerdefinierte Tray-Symbole von <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a> überschrieben. [danke beardboy]</p>
<p>Behoben: Tray-Menü-Häkchen für Pause und Suspend funktionierten nicht in <a href="Scripts.htm#ahk2exe">kompilierten Skripten</a>.</p>
<p>Behoben: <a href="lib/PostMessage.htm">PostMessage/SendMessage</a> senden die Meldung nun an das angegebene Steuerelement, nicht mehr immer an das übergeordnete Fenster.</p>
<p>Behoben: <a href="Hotkeys.htm">Hotkey-Subroutinen</a>, die einen Laufzeitfehler verursachen, werden nun nach dem Fehler nicht mehr deaktiviert.</p>
<p>Behoben: Einige spezielle Skripttypen: Manchmal wurden sie ohne Grund angehalten. [danke Beastmaster]</p>
<p>Behoben: <a href="lib/InputBox.htm">InputBox</a>: <a href="misc/ErrorLevel.htm">ErrorLevel</a> wird nun korrekt gesetzt, auch wenn mehrere Eingabefenster gleichzeitig existieren und nicht in der richtigen Reihenfolge geschlossen werden (selten).</p>
<p>Geändert: <a href="lib/InputBox.htm">InputBox</a>: Die Schaltflächen sind nun gleich groß, was die Größenänderung des Fensters gleichmäßiger macht. [danke beardboy &amp; Rajat]</p>
<p>Geändert: Die Warnmeldungen "Hook is already installed" und "Hook is not supported (Win9x)" wurden entfernt, da die <a href="lib/_InstallKeybdHook.htm">Hooks</a> problemlos von mehr als einem Skript installiert werden können.</p>
<p>Verbessert: <a href="lib/_SingleInstance.htm">#SingleInstance</a> hat nun einen optionalen FORCE-Parameter, mit dem das Warndialogfenster übersprungen werden kann. [danke beardboy]</p>
<p>Verbessert: <a href="lib/Send.htm">Send-Befehl</a>:</p>
<ul>
  <li>Er berücksichtigt <a href="lib/_HotkeyModifierTimeout.htm">#HotkeyModifierTimeout</a>, auch wenn er nicht aus einer <a href="Hotkeys.htm">Hotkey-Subroutine</a> aufgerufen wird (z.B. aus einem <a href="lib/SetTimer.htm">Timer</a>).</li>
  <li>Durch das Senden einer Modifikatortaste wie <code class="no-highlight">{Ctrl}</code> wird vermieden, dass der Status anderer Modifikatortasten vorübergehend angepasst werden muss.</li>
  <li>Das Senden einer links/rechts-spezifischen Modifikatortaste wie <code class="no-highlight">{RCtrl}</code> entspricht eher dem erwarteten Verhalten.</li>
  <li>Modifikatortasten wie <code class="no-highlight">{LShift down}</code> und <code class="no-highlight">{Alt down}</code> bewirken, dass die Taste gedrückt bleibt, auch nach Abschluss von <a href="lib/Send.htm">Send</a>.</li>
</ul>
<p>Verbessert: Der <a href="lib/MouseClick.htm">MouseClick</a>-Befehl akzeptiert nun auch den ersten Buchstaben des Tastennamens (L/R/M). [danke Rajat]</p>
<p>Verbessert: Das Tray-Symbol wird nun neu erstellt, wenn der Explorer abstürzt.</p>
<p>Verbessert: <a href="lib/InputBox.htm">InputBox</a> hat nun zwei optionale Parameter zum Setzen eines Zeitlimits und zum Setzen einer Zeichenkette, die standardmäßig im Eingabefeld des Dialogfensters angezeigt werden soll. [danke Beastmaster]</p>
<p>Verbessert: <a href="lib/FileSelectFile.htm">FileSelectFile</a> erlaubt nun die Angabe eines Dateinamens, der standardmäßig im Eingabefeld des Dialogfensters angezeigt werden soll. [danke Beastmaster]</p>
<p>Verbessert: <a href="lib/FileSelectFolder.htm">FileSelectFolder</a> kann nun ein Eingabefeld anzeigen, das der Benutzer zum Eintragen eines Ordnernamens verwenden kann.</p>
<p>Verbessert: <a href="lib/LoopParse.htm">Parsende Schleifen</a> haben nun eine integrierte Unterstützung für das CSV-Format (Comma Separated Values, dt. kommagetrennte Werte). [danke Robert Yaklin]</p>
<p>Verbessert: Höhere Sicherheit für <a href="Scripts.htm#ahk2exe">kompilierte Skripte</a>, wodurch einige Lücken geschlossen wurden, die Einblick in den Quellcode ermöglichten. [danke Rajat]</p>
<p>Verbessert: <a href="lib/StringGetPos.htm">StringGetPos</a> kann nun eine andere Übereinstimmung als die erste finden. [danke Robert Yaklin]</p>
<p>Hinzugefügt: Ein Index für die Hilfedatei. [danke Rajat]</p>
<p>Hinzugefügt: Syntax- und Cliptextdateien für EditPlus im Extras-Ordner. [danke Mike Griffin]</p>
<p>Hinzugefügt: Direktive <a href="lib/_Persistent.htm">#Persistent</a>, mit der man ein Nicht-Hotkey-Skript so lange laufen lassen kann, bis ein <a href="lib/ExitApp.htm">ExitApp</a> auftritt (nützlich für Skripte, die nur <a href="lib/SetTimer.htm">Timer</a> oder <a href="lib/Menu.htm">benutzerdefinierte Menüs</a> enthalten).</p>
<p>Hinzugefügt: Es ist nun möglich, das Tray-Symbol <a href="lib/Menu.htm">während der Skriptausführung</a> zu verstecken oder sichtbar zu machen. [danke beardboy]</p>
<p>Hinzugefügt: Eine <a href="lib/Menu.htm">Option</a>, mit der das Hauptfenster eines <a href="Scripts.htm#ahk2exe">kompilierten Skripts</a> geöffnet werden kann. [danke beardboy]</p>
<p>Hinzugefügt: Alle fensterspezifischen Befehle unterstützen nun Fensterklassennamen. Window Spy meldet jetzt den FensterTitel, den Sie angeben müssen, um die Klasse eines Fensters zu verwenden. [danke Rajat]</p>
<p>Hinzugefügt: Befehle <a href="lib/ControlMove.htm">ControlMove</a>, <a href="lib/Control.htm">Control</a> und <a href="lib/ControlGet.htm">ControlGet</a>, mit denen verschiedene Attribute eines Steuerelements abgerufen und geändert werden können. [danke AutoIt3-Team &amp; Rajat]</p>
<p>Hinzugefügt: Befehle <a href="lib/FileRecycle.htm">FileRecycle</a> und <a href="lib/FileRecycleEmpty.htm">FileRecycleEmpty</a>. [danke AutoIt3-Team &amp; Rajat]</p>
<p>Hinzugefügt: Befehl <a href="lib/ToolTip.htm">ToolTip</a>. [danke AutoIt3-Team &amp; Rajat]</p>

<h2 id="v1.0.08.00">1.0.08 - 15. April 2004</h2>
<p>Behoben: Ein kleines Speicherleck in <a href="lib/Run.htm">Run</a> und <a href="lib/Run.htm">RunWait</a>.</p>
<p>Behoben: Der Start des Hauptprogramms über das Startmenü: Bei älteren Versionen ist es möglich, dass Ihre AutoHotkey.ini-Skriptdatei (falls Sie eine haben) im ShellNew-Ordner Ihres Windows-Ordners abgelegt wurde. Wenn dies der Fall ist, verschieben Sie die Datei in den AutoHotkey-Ordner im Programmordner (oder wo auch immer Sie es installiert haben).</p>
<p>Behoben: Der Menüpunkt "Edit This Script" deaktiviert keine Hotkeys mehr, wenn das Skript bereits zum Editieren geöffnet ist.</p>
<p>Behoben: <a href="lib/SetTimer.htm">Timer</a> führten manchmal dazu, dass das Tray-Menü und das Hauptmenü langsam reagierten.</p>
<p>Behoben: <a href="lib/GetKeyState.htm">GetKeyState</a> beim Abrufen des physischen Status der Maustasten: Der Status ist nun korrekt, wenn der <a href="lib/_InstallMouseHook.htm">Maus-Hook</a> ohne den <a href="lib/_InstallKeybdHook.htm">Tastatur-Hook</a> installiert ist. [danke skrommel]</p>
<p>Behoben: Der <a href="Hotkeys.htm">Hotkey-Präfix</a> Tilde (~) funktioniert nun mit allen Tasten. [danke Rajat]</p>
<p>Behoben: Das Skript wird nicht mehr stillschweigend beendet, wenn eine leere dynamische <a href="Variables.htm">Variable</a> verwendet wird. Zum Beispiel: <code>%LeereVar% = 100 <em>; [danke Rajat]</em></code></p>
<p>Geändert: Das Tray-Symbol ist unter Windows 95/98/NT/2000 nun näher an der beabsichtigten grünen Farbe.</p>
<p>Geändert: Eine der Arten der Pufferung, die in Version 1.0.06 eingeführt wurde, ist nun standardmäßig ausgeschaltet, da sie in den meisten Fällen mehr schadet als nützt. Informationen zur Reaktivierung dieser Art der Pufferung und eine Erklärung finden Sie unter <a href="lib/_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>. [danke jamestr]</p>
<p>Verbessert: <a href="lib/_InstallKeybdHook.htm">#InstallKeybdHook</a> und <a href="lib/_InstallMouseHook.htm">#InstallMouseHook</a> akzeptieren nun das optionale Wort FORCE, um das Warndialogfenster zu unterdrücken, das normalerweise angezeigt wird, wenn der Hook bereits von einem anderen Skript installiert wurde. [danke Rajat]</p>
<p>Verbessert: <a href="lib/ControlSend.htm">ControlSend</a> kann Tastendrücke nun direkt an das übergeordnete Fenster eines Steuerelements senden. Nützlich für Programme wie z.B. Winamp 2.x (siehe <a href="misc/Winamp.htm">Winamp automatisieren</a>). [danke Rajat]</p>
<p>Hinzugefügt: Unterstützung für Tastaturen mit Sondertasten, die nicht in der <a href="KeyList.htm">Tastenliste</a> enthalten sind. Wenn Ihre Tastatur solche Tasten hat, können Sie sie mit <a href="KeyList.htm#SpecialKeys">diesen Schritten</a> in Hotkeys umwandeln (nur XP/2000/NT). [danke Rajat]</p>
<p>Hinzugefügt: Die <a href="KeyList.htm">Tastenliste</a> enthält nun NumpadEnter, da diese Taste unter XP/2000/NT zu einem Hotkey gemacht werden kann. [danke Rajat]</p>
<p>Hinzugefügt: Unterstützung für hexadezimale Integer. Mit einem 0x-Präfix kann eine Zahl als hexadezimal gekennzeichnet werden (z.B. <code>0xF9</code>). Hexadezimale Integer können überall dort verwendet werden, wo dezimale Integer erwartet werden; z.B. ist <code>Sleep, 0xFF</code> äquivalent zu <code>Sleep, 255</code>. Sie können auch <a href="lib/SetFormat.htm">SetFormat</a> verwenden, um die Ergebnisse von mathematischen Operationen als Hexadezimalzahlen zu speichern oder zwischen Dezimal- und Hexadezimalzahlen zu konvertieren. [danke Rajat]</p>
<p>Hinzugefügt: Eine Option für den Installer, die Ziehen-und-Ablegen von Skriptdateien ermöglicht. Diese Option ist standardmäßig deaktiviert, da sie zu unbeabsichtigten Skriptstarts führen kann. [danke Rajat]</p>
<p>Hinzugefügt: Rajats Syntaxdatei und Clip-Bibliothek für TextPad im Extras-Ordner, der über das Startmenü zugänglich ist. Verwenden Sie das mitgelieferte Skript, um diese Features zu installieren. Hoffentlich werden in den kommenden Monaten ähnliche Add-ons für andere Editoren entwickelt (Helfer sind willkommen).</p>
<p>Hinzugefügt: Unterbefehl <a href="lib/Menu.htm#Rename">Menu Rename</a>.</p>
<p>Hinzugefügt: Befehle <a href="lib/PostMessage.htm">PostMessage/SendMessage</a>.</p>
<p>Hinzugefügt: Befehl <a href="lib/RunAs.htm">RunAs</a>, mit dem Prozesse im Rahmen der Berechtigungen eines anderen Benutzers erstellt werden können. [danke Jonathan Bennett &amp; Robert Yaklin]</p>
<p>Hinzugefügt: Befehl <a href="lib/WinSet.htm">WinSet</a>, mit dem ein Fenster "immer im Vordergrund" oder transparent gemacht werden kann.</p>

<h2 id="v1.0.07.00">1.0.07 - 2. April 2004</h2>
<p>Behoben: Der <a href="lib/Send.htm">Send</a>-Befehl kann nun unter Windows 95/98/Me Tasten wie <code class="no-highlight">{Down}</code>, <code class="no-highlight">{Home}</code> und <code class="no-highlight">{PgUp}</code> korrekt senden. [danke S_R]</p>
<p>Behoben: AUT-Skripte sehen die interne Variable A_ScriptDir nun so, als würde sie einen umgekehrten Schrägstrich am Ende enthalten (aus Kompatibilitätsgründen). Außerdem wurde der AUT-in-AHK-Konverter geändert, so dass diese Anpassung während der Konvertierung vorgenommen wird. [danke Rajat]</p>
<p>Behoben: <code>Send, {}}</code> (eine direkt geschriebene geschweifte Endklammer senden). [danke Rajat]</p>
<p>Behoben: Das Programm wird nicht mehr stillschweigend beendet, wenn ein UMSCHALT-modifiziertes reserviertes Symbol wie <code class="no-highlight">#</code> oder <code class="no-highlight">^</code> als Hotkey definiert wurde. [danke Rajat]</p>
<p>Behoben: <a href="Hotkeys.htm#alttab">ShiftAltTab</a>, wenn es einer Ziffernblocktaste zugewiesen wurde. [danke Rajat]</p>
<p>Geändert: Die folgenden Befehle melden keine Laufzeitfehler mehr, wenn ihnen negative Parameter übergeben werden: <a href="lib/StringLeft.htm">StringLeft</a>, <a href="lib/StringLeft.htm">StringRight</a>, <a href="lib/StringMid.htm">StringMid</a>, <a href="lib/StringTrimLeft.htm">StringTrimLeft</a>, <a href="lib/StringTrimLeft.htm">StringTrimRight</a>, <a href="lib/ControlClick.htm">ControlClick</a> und <a href="lib/MouseClick.htm">MouseClick</a>. [danke Rajat]</p>
<p>Geändert: <a href="lib/Suspend.htm">Suspend</a>-Befehl: Hotkey-Subroutinen, deren erste Zeile <code>Suspend, On</code> ist, werden nicht mehr vor einer Suspension geschützt. [danke Jay D. Novak]</p>
<p>Geändert: <a href="lib/MsgBox.htm">MsgBox</a> zeigt standardmäßig nur noch "Press OK to continue" an, wenn es explizit mit null Parametern aufgerufen wird. [danke Rajat]</p>
<p>Geändert: Die Symbole des Programms wurden mit den stylischen Symbolen von Rajat ersetzt. Es ist schwer, es allen recht zu machen, aber ich hoffe, dass die meisten es als eine Verbesserung gegenüber den langweiligen alten Symbolen ansehen (wo ich im Grunde nur ein großes violettes H gezeichnet habe).</p>
<p>Verbessert: <a href="lib/RegRead.htm">RegRead</a>, <a href="lib/RegWrite.htm">RegWrite</a> und <a href="lib/RegDelete.htm">RegDelete</a> unterstützen nun den Standardwert eines Schlüssels, den RegEdit als "(Standard)" anzeigt. Außerdem können die Namen der Root-Schlüssel jetzt abgekürzt werden (z.B. HKLM). [danke Rajat]</p>
<p>Hinzugefügt: Befehl <a href="lib/Menu.htm">Menu</a>, mit dem das Tray-Symbol-Menü des Skripts angepasst werden kann, indem vorhandene Menüpunkte entfernt oder neue hinzugefügt werden. [danke beardboy &amp; Rajat]</p>

<h2 id="v1.0.06.00">1.0.06 - 25. März 2004</h2>
<p>Behoben: Die folgenden Probleme <strong>nur unter Windows 95/98/Me</strong> [danke Jay D. Novak]:</p>
<ul>
  <li>Der <a href="lib/Send.htm">Send</a>-Befehl lässt nun <kbd>Strg</kbd>, <kbd>Alt</kbd>, <kbd>Umschalt</kbd> und <kbd>Win</kbd> los, wenn er soll. Zuvor hat ein Hotkey wie <code>#+a::Send, hallo</code> fälschlicherweise HALLO in Großbuchstaben gesendet.</li>
  <li><a href="lib/SetNumScrollCapsLockState.htm">SetNumLockState</a> und <code>Send, {NumLock}</code> sollten nun zuverlässiger funktionieren.</li>
  <li><a href="lib/GetKeyState.htm">GetKeyState</a> sollte jetzt zuverlässiger funktionieren.</li>
  <li>Die Verzögerungen, die durch die folgenden Befehle und Einstellungen verursacht werden, sind jetzt viel genauer, zumindest unter Windows 98SE: <a href="lib/Sleep.htm">Sleep</a>, <a href="lib/SetKeyDelay.htm">SetKeyDelay</a>, <a href="lib/SetMouseDelay.htm">SetMouseDelay</a>, <a href="lib/SetWinDelay.htm">SetWinDelay</a>, <a href="lib/SetControlDelay.htm">SetControlDelay</a>. Wenn Sie Win9x verwenden, müssen Sie möglicherweise die Verzögerungswerte in einigen Ihrer Skripte erhöhen, um die gleiche Verzögerung wie in der vorherigen Version zu erhalten.</li>
</ul>
<p>Behoben: Das Tray-Symbol bleibt nicht mehr schwarz, wenn eine neue <a href="Hotkeys.htm">Hotkey-Subroutine</a> gestartet wird, während der <a href="misc/Threads.htm">aktuelle Thread</a> pausiert ist. Es wird aber wieder schwarz, wenn die neue Subroutine beendet ist.</p>
<p>Behoben: <a href="lib/Gosub.htm">Gosub</a> und <a href="lib/Goto.htm">Goto</a>, die zu einem Label springen, dessen Name in einer Variablenreferenz enthalten ist. Im folgenden Beispiel wird die Variable nun jedes Mal aufgelöst, wenn die Zeile ausgeführt wird, nicht mehr nur beim ersten Mal: <code>Gosub, %MeinLabel%</code></p>
<p>Behoben: Der Tastatur-Hook wird nun immer automatisch als Reaktion auf <a href="lib/_InstallKeybdHook.htm">#InstallKeybdHook</a> und für Skripte installiert, die nur untypische Hotkeys wie <code>CapsLock &amp; e::</code> enthalten. [danke bobhurt]</p>
<p>Geändert: Installer: 1) Er registriert nun die EXE-Dateien, die mit dem Programm geliefert werden, so dass bei direkter Ausführung kein vollständiger Pfad mehr angegeben werden muss; 2) Er erstellt seine Programmgruppe nun für alle Benutzer, nicht mehr nur für den aktuellen Benutzer; 3) Er merkt sich nun korrekt das letzte Installationsverzeichnis (beim Überschreiben einer älteren Version).</p>
<p>Geändert: Programmstart für Skripte, die den <a href="lib/_InstallKeybdHook.htm">Tastatur-Hook</a> verwenden, so dass der aktuelle Status von <kbd>Strg</kbd>/<kbd>Alt</kbd>/<kbd>Umschalt</kbd>/<kbd>Win</kbd> berücksichtigt wird.</p>
<p>Geändert: Wenn der <a href="Scripts.htm#auto">automatische Ausführungsbereich</a> sehr lange dauert (oder nie sein Ende erreicht), werden die Standardwerte für Einstellungen wie <a href="lib/SetKeyDelay.htm">SetKeyDelay</a> nun nach 100 Millisekunden wirksam. In der Regel ist es am besten, die Standardwerte im oberen Bereich des Skripts zu ändern. Dies ist nur für Skripte wichtig, die <a href="Hotkeys.htm">Hotkeys</a> oder <a href="lib/SetTimer.htm">Timer</a> enthalten. </p>
<p>Verbessert: <a href="lib/SetBatchLines.htm">SetBatchLines</a> akzeptiert nun optional Millisekunden statt Zeilen. Die Millisekunden-Methode wird für Skripte empfohlen, wenn Geschwindigkeit und Zusammenarbeit wichtig sind. Zum Beispiel verhindert eine Einstellung von 10ms in den meisten Systemen, dass das Skript mehr als 50&nbsp;% der ungenutzten Prozessorzeit beansprucht. Dadurch können Skripte schnell ausgeführt werden, während gleichzeitig ein hohes Maß an Zusammenarbeit bei rechenintensiven Tasks wie z.B. Videospiele und Videoaufnahme/-wiedergabe aufrechterhalten wird.</p>
<p>Verbessert: Bessere Pufferung von Hotkeys während einer kritischen Operation (z.B. <a href="lib/Send.htm">Send</a>) und wenn die <a href="lib/_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>-Einstellung eines Hotkeys überschritten wurde. Mit anderen Worten, in den meisten Fällen wird das Programm Hotkey-Tastendrücke zwischenspeichern, bis sie ausgeführt werden können. Dies hat den Nebeneffekt, dass das Gedrückthalten eines Hotkeys (zur automatischen Wiederholung) reaktionsschneller wird. [danke Jay D. Novak]</p>
<p>Verbessert: Höhere Performanz von <a href="lib/_InstallKeybdHook.htm">Hook-Skripten</a>, die hohe oder unendliche <a href="lib/SetBatchLines.htm">BatchLines</a> haben.</p>
<p>Hinzugefügt: AutoScriptWriter (Makrorekorder) im Hauptinstaller. Ich glaube, es gibt ein Problem mit der Save-Schaltfläche (das hoffentlich bald behoben sein wird), aber ansonsten scheint es gut zu funktionieren. [danke Larry Keys]</p>
<p>Hinzugefügt: Befehl <a href="lib/SetTimer.htm">SetTimer</a>, für den in den letzten 10 Tagen die meiste Entwicklungszeit aufgewendet wurde. Timer sind nützlich, weil sie asynchron laufen, d.h. sie werden in einem bestimmten Intervall (Frequenz) ausgeführt, egal ob das Skript gerade auf ein Fenster wartet, ein Dialogfenster anzeigt oder mit einer anderen Aufgabe beschäftigt ist. Timer können u.a. verwendet werden, um eine Aktion während der Abwesenheit des Benutzers auszuführen (in Verbindung mit <a href="Variables.htm#TimeIdle">%A_TimeIdle%</a>) oder um unerwünschte Fenster sofort wieder zu schließen, wenn sie erscheinen. Es gibt viele weitere Anwendungsmöglichkeiten.</p>

<h2 id="v1.0.05.00">1.0.05 - 15. März 2004</h2>
<p>Behoben: Kein Absturz mehr bei den Befehlen <a href="lib/Exit.htm">Exit</a> und <a href="lib/ExitApp.htm">ExitApp</a>.</p>
<p>Behoben: <kbd>Strg</kbd>+<kbd>Alt</kbd>+<kbd>Entf</kbd> unter Windows 2000/NT: <kbd>Strg</kbd> und <kbd>Alt</kbd> sollten beim Zurückkehren nicht dauerhaft gedrückt sein. [danke Julian Doak]</p>
<p>Behoben: <a href="lib/GetKeyState.htm">GetKeyState</a>: Der <em>physische</em> Status der Maustasten wird nun korrekt gemeldet, wenn der <a href="lib/_InstallMouseHook.htm">Maus-Hook</a> installiert ist.</p>
<p>Behoben: <a href="lib/StringLower.htm">StringLower</a> akzeptiert nun wie vorgesehen den optionalen Parameter T (Titelschreibung). [danke beardboy]</p>
<p>Geändert: Umgang mit der <a href="misc/Clipboard.htm">Zwischenablage</a>: Das Programm versucht nun 800 statt 400 Millisekunden lang, die Zwischenablage zu öffnen, bevor es aufgibt und ein Warndialogfenster anzeigt. [danke Jason Payam Ahdoot]</p>
<p>Geändert: Variablennamen werden im Hauptfenster nun in alphabetischer Reihenfolge <a href="lib/ListVars.htm">aufgelistet</a>. Als Nebeneffekt sind <a href="misc/Arrays.htm">Arrays</a> nun performanter.</p>
<p>Geändert: <a href="lib/FileAppend.htm">FileAppend</a> kann nun optional die Datei im Binärmodus statt im Textmodus schreiben. Meines Wissens hat dies nur zur Folge, dass jeder Zeilenumbruch als einzelner Zeilenvorschub (`n) statt als Wagenrücklauf-Zeilenvorschub-Paar (`r`n) geschrieben wird.</p>
<p>Verbessert: <a href="lib/InputBox.htm">InputBox</a> ermöglicht nun die Angabe einer benutzerdefinierten Größe und Position. Außerdem kann die Fenstergröße nun durch Ziehen des Rahmens geändert werden. [danke David Nuttall &amp; beardboy]</p>
<p>Hinzugefügt: Der <a href="lib/Send.htm">Send</a>-Befehl unterstützt nun <code class="no-highlight">{Sleep}</code>. Außerdem kann Sleep nun als Hotkey verwendet werden, auch wenn <kbd>Sleep</kbd> auf einigen Tastaturen möglicherweise damit nicht kompatibel ist.</p>
<p>Hinzugefügt: Interne Variable %A_Index%, die die Nummer der aktuellen <a href="lib/Loop.htm">Schleifenwiederholung</a> enthält. Die erste Wiederholung ist 1, die zweite 2 und so weiter.</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#TimeIdlePhysical">%A_IdleTimePhysical%</a>, die %A_IdleTime% ähnelt, außer dass sie künstliche Eingaben ignoriert (also solche, die von Skripten und Programmen erzeugt werden) und daher besser geeignet ist, um festzustellen, ob der Benutzer tatsächlich anwesend ist. Diese Variable ist äquivalent zu %A_IdleTime%, wenn kein <a href="lib/_InstallKeybdHook.htm">Tastatur</a>- und <a href="lib/_InstallMouseHook.htm">Maus</a>-Hook installiert ist.</p>
<p>Hinzugefügt: Befehl <a href="lib/StringSplit.htm">StringSplit</a>, mit dem eine Zeichenkette mittels bestimmter Separatoren in mehrere Teilzeichenketten aufgeteilt werden kann.</p>
<p>Hinzugefügt: Neue Schleifenvariante: <a href="lib/LoopParse.htm">Zeichenkette parsen</a>. Ruft Teile (Felder) einer Zeichenkette nacheinander ab (ähnlich wie <a href="lib/StringSplit.htm">StringSplit</a>, benötigt aber weniger Speicher).</p>
<p>Hinzugefügt: Neue Schleifenvariante: <a href="lib/LoopReadFile.htm">Datei lesen</a>. Ruft die Zeilen einer Textdatei nacheinander ab (performanter als <a href="lib/FileReadLine.htm">FileReadLine</a>).</p>

<h2 id="v1.0.04.00">1.0.04 - 6. März 2004</h2>
<p>Behoben: <kbd>Win</kbd>+<kbd>L</kbd> (Hotkey zum Sperren des Computers): <kbd>Win</kbd> wird nicht mehr als gedrückt gesehen, wenn Sie sich wieder anmelden. [danke Jack Horsfield].</p>
<p>Behoben: <a href="lib/Reload.htm">Reload</a>-Feature: Wenn das Skript beim Neuladen ein Dialogfenster wie z.B. <a href="lib/MsgBox.htm">MsgBox</a> anzeigt, blieb die Anwendung hängen. [danke Christian Ziemski]</p>
<p>Behoben: Der automatische Ausführungsbereich (der obere Teil des Skripts vor dem ersten Hotkey-Label): Wenn er mindestens ein normales Nicht-Hotkey-Label hat, wurde in einigen Fällen das erste Hotkey-Label des Skripts (sofern vorhanden) als Teil des automatischen Ausführungsbereichs ausgeführt. [danke Robert Yaklin]</p>
<p>Verbessert: <a href="lib/SoundSetWaveVolume.htm">SoundSetWaveVolume</a> akzeptiert nun +/- als Präfix. Diese Präfixe erhöhen oder verringern die Lautstärke relativ zum <strong>aktuellen</strong> Pegel. Außerdem akzeptiert der Befehl nun einen optionalen zweiten Parameter, mit dem das Zielgerät angegeben werden kann (für Systeme mit mehr als einem Soundgerät).</p>
<p>Verbessert: Die folgenden Befehle wurden verbessert, um Tastatur- und Mausverzögerungen zu reduzieren, die durch lange Operationen eines <a href="lib/_UseHook.htm">Hook-Skripts</a> verursacht werden: <a href="lib/FileDelete.htm">FileDelete</a>, <a href="lib/FileCopy.htm">FileCopy</a>, <a href="lib/FileMove.htm">FileMove</a>, <a href="lib/FileReadLine.htm">FileReadLine</a>, <a href="lib/FileSetAttrib.htm">FileSetAttrib</a>, <a href="lib/FileSetTime.htm">FileSetTime</a>, <a href="lib/Send.htm">Send</a> und <a href="lib/ControlSend.htm">ControlSend</a>.</p>
<p>Verbessert: <a href="lib/StringLower.htm">StringLower/Upper</a> unterstützen nun die Umwandlung einer Zeichenkette in Titelschreibung. Zum Beispiel von "VOM Winde VERWEHT" zu "Vom Winde Verweht".</p>
<p>Hinzugefügt: Remote-Registry-Unterstützung für <a href="lib/LoopReg.htm">Registry-Schleifen</a>, <a href="lib/RegRead.htm">RegRead</a>, <a href="lib/RegWrite.htm">RegWrite</a> und <a href="lib/RegDelete.htm">RegDelete</a>. Schreiben Sie einfach den Computernamen vor dem Root-Schlüssel. Zum Beispiel: <code class="no-highlight">\\workstation01:HKEY_LOCAL_MACHINE</code></p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm#TimeIdle">%A_TimeIdle%</a>, die die Zeit in Millisekunden enthält, die seit der letzten Eingabe via Tastatur, Maus usw. verstrichen ist. Dies ist nützlich, um festzustellen, ob der Benutzer abwesend ist. Diese Variable ist leer, wenn das Betriebssystem älter als Windows 2000 oder XP ist.</p>
<p>Hinzugefügt: Befehl <a href="lib/URLDownloadToFile.htm">UrlDownloadToFile</a>, mit dem eine Datei aus dem Internet heruntergeladen werden kann. [danke Jonathan Bennett &amp; Jason Payam Ahdoot]</p>
<p>Hinzugefügt: Befehl <a href="lib/SoundGetWaveVolume.htm">SoundGetWaveVolume</a>, mit dem die aktuelle Wave-Wiedergabelautstärke abgerufen werden kann.</p>
<p>Hinzugefügt: Befehle <a href="lib/SoundGet.htm">SoundGet</a> und <a href="lib/SoundSet.htm">SoundSet</a>, mit denen nahezu jede Einstellung eines Soundgeräts abgerufen bzw. geändert werden kann. Zum Beispiel Stummschaltung, Mikrofon, Master, Synth, Aux und Line-In.</p>

<h2 id="v1.0.03.00">1.0.03 - 1. März 2004</h2>
<p>Behoben: <a href="lib/Send.htm#asc">Send {Asc nnnnn}</a>: Nullen am Anfang von nnnnn werden nicht mehr ignoriert.</p>
<p>Behoben: RShift (rechte <kbd>Umschalt</kbd>-Taste): Hotkeys mit dieser Taste erzeugten manchmal einen falschen Umschaltstatus. [danke Jesper James Jensen]</p>
<p>Geändert: <a href="lib/_HotkeyModifierTimeout.htm">HotkeyModifierTimeout</a>-Standardeinstellung ist nun 50 statt 100, um das Risiko zu verringern, dass Modifikatortasten (Strg, Alt, Umschalt und Win) hängen bleiben. [danke Jesper James Jensen]</p>
<p>Geändert: <a href="lib/FileCopy.htm">FileCopy</a> in AutoIt2-Skripten (.aut) setzt ErrorLevel nun auf 1, nicht mehr auf die Anzahl der Dateien, die nicht kopiert werden konnten (verbessert die Kompatibilität).</p>
<p>Hinzugefügt: Befehl <a href="lib/FileCreateShortcut.htm">FileCreateShortcut</a>, mit dem eine Verknüpfung (LNK-Datei) erstellt werden kann. [danke Jonathan Bennett]</p>
<p>Hinzugefügt: Unterstützung für <a href="lib/LoopReg.htm">Registry-Enumeration</a>, mit der die Inhalte eines Schlüssels nacheinander via Registry-Schleife abgerufen werden kann. <a href="lib/RegRead.htm">RegRead</a>, <a href="lib/RegWrite.htm">RegWrite</a> und <a href="lib/RegDelete.htm">RegDelete</a> wurden ebenfalls verbessert, so dass sie nun optional das aktuelle Registry-Element der Schleife verwenden, wenn sie von einer Registry-Schleife umschlossen sind. [danke Robert Yaklin]</p>

<h2 id="v1.0.02.00">1.0.02 - 26. Februar 2004</h2>
<p>Behoben: Ein Bug, der durch die vorherige Version entstanden ist: In seltenen Fällen mussten die Modifikatoren (Strg, Alt, Umschalt und Win) eines Hotkeys losgelassen und erneut gedrückt gehalten werden, um nach einer <a href="lib/Send.htm">Send</a>-Operation wieder wirksam zu werden. Dies ist nun in den meisten Fällen nicht mehr notwendig.</p>
<p>Geändert: Das Programm wird nun auch dann gestartet, wenn sein Tray-Symbol nicht erstellt werden kann (z.B. weil ein anderes Shell-Programm als der Explorer läuft). [danke Ian Oliver]</p>
<p>Geändert: Beim Programmstart wird das gerade aktive Fenster nicht mehr gestört (es bleibt aktiv).</p>
<p>Verbessert: Der <a href="lib/Send.htm">Send</a>-Befehl unterstützt nun auch die Zeichen <code class="no-highlight">ø</code> und <code class="no-highlight">Ø</code>. [danke Jesper James Jensen]</p>

<h2 id="v1.0.01.00">1.0.01 - 24. Februar 2004</h2>
<p>Behoben: <a href="lib/EnvSub.htm">EnvSub</a>s Datum-Zeit-Berechnung: Wenn eine neuere Zeit von einer älteren subtrahiert wird, wird das Ergebnis nun korrekt als negative Zahl ausgegeben, nicht mehr als große positive Zahl.</p>
<p>Behoben: Ein seltenes Problem mit bloßen Modifikatortasten, die als Hotkeys verwendet werden. Wenn z.B. RControl ein Hotkey ist, blieb <kbd>Strg</kbd> manchmal nach einer <a href="lib/Send.htm">Send</a>-Operation mit <kbd>Strg</kbd> dauerhaft gedrückt.</p>
<p>Behoben: Meldung von Syntaxfehlern: In seltenen Fällen, wie z.B. <a href="lib/Else.htm">Else If</a>-Anweisungen, wurde nicht die Zeile, in der der Syntaxfehler auftrat, sondern die Zeile darüber gemeldet.</p>
<p>Hinzugefügt: Interne <a href="Variables.htm">Variable</a> %0%, die die Anzahl der an das Skript übergebenen Befehlszeilenparameter enthält. Dies verbessert auch die Kompatibilität mit AutoIt2. [danke BoBo]</p>
<p>Hinzugefügt: Befehl <a href="lib/BlockInput.htm">BlockInput</a>, der den Benutzer daran hindert, etwas mit der Tastatur, der Maus oder einem anderen Eingabegerät zu tun. [danke Jonathan Bennett &amp; beardboy]</p>

<h2 id="v1.0.00.00">1.0.00 FINAL - 16. Februar 2004</h2>
<p> Dies scheint eine stabile Version zu sein. Ich hatte eine Menge Hilfe beim Testen, also vielen Dank an alle, besonders an Robert Yaklin. Es sind noch viele weitere Verbesserungen geplant; die ersten könnt ihr in etwa 2 Wochen erwarten. Und nun zu den Änderungen... </p>
<p>Behoben: Mehrere Probleme mit der Zahlenerkennung, vor allem dahingehend, dass Zahlen nun mit einem Pluszeichen oder einem Dezimalpunkt beginnen dürfen. Zum Beispiel werden <code>.95</code>, <code>-.95</code> und <code>+.95</code> nun als Floating-Point-Zahlen erkannt. [danke Romano]</p>
<p>Behoben: <a href="lib/ListLines.htm">ListLines</a> stürzt nicht mehr ab, wenn es Befehle anzeigt, deren optionale Ausgabevariablen weggelassen wurden.</p>
<p>Behoben: Eine seltene Absturzbedingung mit großen Variablen, denen ein null-langer Wert zugewiesen wurde.</p>
<p>Behoben: <a href="lib/Reload.htm">Reload</a> unter Windows 95. [danke Robert Yaklin]</p>
<p>Behoben: <a href="lib/IfEqual.htm">IF</a>-Anweisungen: Leerraumzeichen können nun bei Operatoren weggelassen werden. Zum Beispiel ist folgendes nun wie vorgesehen gültig: <code>if var&lt;&gt;0</code></p>
<p>Behoben (erneut): Die Umschalttaste bleibt nicht mehr hängen, wenn sie in Kombination mit Ziffernblocktasten verwendet wird. Hoffentlich ist das Problem damit weitgehend gelöst. [danke Robert Yaklin]</p>
<p>Behoben: <a href="lib/RegRead.htm">RegRead</a> beim Lesen von REG_BINARY-Werten: ErrorLevel wird bei Erfolg nun auf 0 gesetzt.</p>
<p>Behoben: <a href="lib/RegWrite.htm">RegWrite</a> beim Schreiben eines leeren REG_DWORD-Wertes: Statt einer willkürlichen Zahl wird nun eine Null geschrieben.</p>
<p>Geändert: <a href="lib/SplashTextOn.htm">SplashTextOn</a>: Die in der vorherigen Version versehentlich eingefügte Menüleiste wurde aus dem Fenster entfernt. Außerdem ist das Fenster auf den meisten Systemen nun ein paar Pixel breiter und höher, damit der Rand immer korrekt angezeigt wird. [danke Jonathan Bennett und Robert Yaklin]</p>
<p>Geändert: <a href="lib/SetFormat.htm">SetFormat</a>: Die Angabe von <code>0</code> entspricht der Angabe von <code>0.0</code>. [danke Robert Yaklin]</p>
<p>Geändert: Fensteraktivierende Befehle, wie z.B. <a href="lib/WinActivate.htm">WinActivate</a>, hängen sich nicht mehr auf, wenn sich das zuvor aktive Fenster oder das Zielfenster aufgehängt hat. Außerdem werden diese Befehle nun zunächst einen sanfteren Ansatz versuchen. Sie können den sanften Ansatz mit <a href="lib/_WinActivateForce.htm">#WinActivateForce</a> überspringen, um z.B. zu verhindern, dass die Schaltflächen in der Taskleiste anfangen zu blinken, wenn mehrere Fenster schnell hintereinander aktiviert werden.</p>
<p>Geändert: <a href="lib/IniWrite.htm">IniWrite</a> und <a href="lib/IniDelete.htm">IniDelete</a> setzen nun ErrorLevel bei Misserfolg auf 1 und bei Erfolg auf 0. Aus Kompatibilitätsgründen gilt das nicht für AutoIt2-Skripte (.aut).</p>
<p>Verbessert: <a href="lib/RegRead.htm">RegRead</a> und <a href="lib/RegWrite.htm">RegWrite</a> unterstützen nun vollständig REG_MULTI_SZ. [danke Jonathan Bennett]</p>
<p>Verbessert: <a href="lib/ControlClick.htm">ControlClick</a>: Es klickt nun genau in der Mitte des Steuerelements, was die Zuverlässigkeit bei einigen Steuerelementen verbessern könnte. Außerdem wurde eine weitere Änderung vorgenommen (SetActiveWindow), die die Zuverlässigkeit weiter erhöhen könnte. Darüber hinaus wurde ein neuer optionaler Parameter hinzugefügt, mit dem die Maustaste gedrückt gehalten oder losgelassen werden kann. [danke Jonathan Bennett]</p>
<p>Verbessert: <a href="lib/Send.htm">Send</a> kann nun mit folgenden Zeichen umgehen: <code class="no-highlight">ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ£ƒáíóúñÑªº¿¬­½¼¡«»</code> [danke Jonathan Bennett]</p>
<p>Verbessert: <a href="lib/Send.htm">Send</a> und <a href="lib/ControlSend.htm">ControlSend</a>: Eine Taste kann nun gedrückt gehalten oder losgelassen werden. Beispiel: <code>Send, {tab down}{b down}{b up}{tab up}</code></p>
<p>Verbessert: <a href="lib/ControlSend.htm">ControlSend</a> sendet <kbd>Umschalt</kbd>, <kbd>Strg</kbd>, <kbd>Alt</kbd> und <kbd>Win</kbd> nun zuverlässiger. [danke Jonathan Bennett]</p>
<p>Verbessert: <a href="lib/FileRemoveDir.htm">FileRemoveDir</a> kann nun rekursiv löschen (ähnlich wie deltree). [danke Jonathan Bennett]</p>
<p>Verbessert: <a href="lib/FileCopy.htm">FileCopy</a> setzt nun ErrorLevel bei Misserfolg auf die Anzahl der Dateien, die nicht kopiert werden konnten, und bei Erfolg auf 0. Der Kopiervorgang wird bei Misserfolg nicht abgebrochen (z.B. wenn die Zieldateien bereits existieren und das Überschreiben-Flag OFF ist).</p>
<p>Verbessert: <a href="lib/FileMove.htm">FileMove</a> unterstützt nun Platzhalter und verhält sich wie <a href="lib/FileCopy.htm">FileCopy</a> bezüglich ErrorLevel und Fortsetzen-bei-Fehler. Es unterstützt jedoch nicht mehr das Verschieben von Verzeichnissen. Verwenden Sie stattdessen <a href="lib/FileMoveDir.htm">FileMoveDir</a>. [danke Jonathan Bennett]</p>
<p>Verbessert: <a href="lib/FileSelectFile.htm">FileSelectFile</a> wurde um zwei optionale Parameter erweitert: <em>Anzeigetext</em> (Anweisungen für den Benutzer) und <em>Filter</em> (zum Beispiel: <code class="no-highlight">*.txt</code>). Wie bei allen neuen Parametern für alte Befehle können sie nicht in Skripten mit der Dateiendung .aut verwendet werden (aus Kompatibilitätsgründen).</p>
<p>Hinzugefügt: <a href="lib/FileCopyDir.htm">FileCopyDir</a> und <a href="lib/FileMoveDir.htm">FileMoveDir</a>. [danke Jonathan Bennett]</p>
<p>Hinzugefügt: Interne Variable <a href="Variables.htm">A_Tab</a>, die ein Tabulatorzeichen enthält (ähnlich wie A_Space).</p>
<p>Hinzugefügt: Neue Typen für "<a href="lib/IfIs.htm">if Var is &lt;Typ&gt;</a>": integer, digit, alpha, alnum und space.</p>

<h2 id="v0.2.25.00">0.2.25 BETA - 9. Februar 2004</h2>
<p>Ich hoffe, das ist die <strong>letzte Betaversion</strong> vor dem Release. Alle Testskripte laufen einwandfrei, auch komplexe Skripte, die über 72 Stunden ohne Speicherverlust oder andere Probleme liefen. Die einzigen wichtigen Fixes, die noch ausstehen, sind für <a href="lib/ControlSend.htm">ControlSend</a> (Probleme mit Groß- und Kleinschreibung) und FileMove (Unterstützung von Platzhaltern). Wenn ihr in den nächsten Tagen Zeit habt, probiert bitte diese Version aus, insbesondere die folgenden Änderungen und Neuerungen.</p>
<p>Behoben: <a href="lib/FileSelectFile.htm">FileSelectFile</a>: Manchmal wurde das Dialogfenster nicht angezeigt, meist bei einer Mehrfachauswahl. [danke Steve Drown]</p>
<p>Behoben: Hoffentlich hängt sich das Skript nicht mehr auf, wenn es beendet wird, während es ein Dialogfenster wie z.B. <a href="lib/MsgBox.htm">MsgBox</a> anzeigt.</p>
<p>Behoben: <a href="lib/_InstallKeybdHook.htm">#InstallKeybdHook</a> und <a href="lib/_InstallMouseHook.htm">#InstallMouseHook</a> erzwingen nun die Installation des Hooks, auch wenn keine Hotkeys vorhanden sind, die ihn benötigen. Dies ist nützlich, um den Gültigkeitsbereich dessen, was der <a href="lib/KeyHistory.htm">KeyHistory</a>-Befehl anzeigt, zu erweitern.</p>
<p>Verbessert: AutoIt3 Window Spy zeigt nun an, welcher Fenstertext nur im langsamen Modus von <a href="lib/SetTitleMatchMode.htm">SetTitleMatchMode</a> verfügbar ist. Außerdem werden die Desktopkoordinaten der Maus weggelassen, da sie von AutoHotkey nicht verwendet werden.</p>
<p>Geändert: KeyLog-Befehl:</p>
<ul>
  <li>Um zu verhindern, dass AutoHotkey von diversen Sicherheitsfirmen und deren Software als Keylogger oder Trojaner gebrandmarkt wird – was vermutlich nur sehr schwer wieder zu entfernen ist – wurde das Feature, das Protokoll in eine Datei zu schreiben, deaktiviert. Eine Version mit diesem Feature ist auf Anfrage erhältlich, oder Sie kompilieren sie selbst (mit Reaktivierung des entsprechenden Abschnitts im Quellcode).</li>
  <li>Der Befehl wurde in <a href="lib/KeyHistory.htm">KeyHistory</a> umbenannt, um nicht den Anschein zu erwecken, eine böswillige Verwendung zu unterstützen. Bitte passen Sie Ihre Skripte entsprechend an.</li>
  <li>Der Befehl zeigt nun auch Infos an, die bisher nur in der Protokolldatei zu finden waren: Die verstrichene Zeit zwischen den Tastendrücken und den Titel des Zielfensters.</li>
</ul>
<p>Geändert: Der Befehl ControlLeftClick wurde in <a href="lib/ControlClick.htm">ControlClick</a> umbenannt, damit auch andere Maustasten unterstützt werden. Ein einfaches Suchen und Ersetzen von ControlLeftClick durch ControlClick in Ihren Skripten sollte ausreichen, da der Befehl die linke Maustaste vermutet, wenn keine angegeben ist.</p>
<p>Verbessert: Das Umschalt-Ziffernblock-Problem: <kbd>Umschalt</kbd> sollte nicht so oft hängen bleiben, wenn diese Taste in Kombination mit einer multifunktionalen Ziffernblocktaste verwendet wird. Dies ist eine Kompensation für die vom Tastaturtreiber erzeugten <kbd>Umschalt</kbd>-Ereignisse, die sicherstellen, dass <kbd>Umschalt</kbd> nicht logisch unten ist, wenn eine Ziffernblocktaste gedrückt oder losgelassen wird. [danke Robert Yaklin]</p>
<p>Hinzugefügt: Befehl <a href="lib/SetMouseDelay.htm">SetMouseDelay</a>, mit dem die Verzögerung, die nach jeder Mausbewegung oder jedem Mausklick auftritt, geändert werden kann. Standardeinstellung ist 10.</p>
<p>Hinzugefügt: Direktiven <a href="lib/_MaxThreads.htm">#MaxThreads</a> und <a href="lib/_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>. Letzteres verwendet standardmäßig 1, d.h. es können keine neuen Instanzen einer Hotkey-Subroutine gestartet werden, wenn diese Subroutine bereits läuft. Dieses Standardverhalten wird von den meisten Benutzern bevorzugt, da es verhindert, das der Hotkey versehentlich doppelt ausgelöst wird. Es ist daher eher unwahrscheinlich, dass Sie Ihre Skripte ändern müssen.</p>
<p>Hinzugefügt: Befehl <a href="lib/FileInstall.htm">FileInstall</a>, mit dem zusätzliche Dateien beim Kompilieren eines Skripts hinzugefügt werden können. </p>
<p>Hinzugefügt: Direktive <a href="lib/_Include.htm">#Include</a>: Standardmäßig wird eine Datei nur einmal inkludiert, auch wenn sie mehrmals im Skript zum Inkludieren angegeben ist. Mit <a href="lib/_Include.htm">#IncludeAgain</a> kann eine Datei mehrmals inkludiert werden.</p>
<p>Hinzugefügt: Menüleiste im Hauptfenster für bequemen Zugriff auf Features wie das Anzeigen von Variablen, Zeilen, Hotkeys und Tastenverlauf.</p>

<h2 id="v0.2.24.00">0.2.24 BETA - 1. Februar 2004</h2>
<p>Geändert (erneut): <a href="lib/EnvAdd.htm">Mathematische Operationen</a> mit unsauberen Zahlen (z.B. <code>123abc</code>) entsprechen nun dem Verhalten von AutoIt2: Zeichenketten, die mit einer Zahl beginnen, <strong>sind</strong> bei einer Berechnung diese Zahl, z.B. wird <code>123abc</code> als <code>123</code> behandelt. Zeichenketten, die nicht mit einer Zahl beginnen, werden bei einer Berechnung als Null behandelt, z.B. <code>123 + abc = 123</code>. Diese Änderung hat keinen Einfluss auf das Verhalten von <a href="lib/IfEqual.htm">IfEqual, IfGreater und IfLess</a>: Sie vergleichen Zeichenketten immer noch alphabetisch, wenn eine davon nicht rein numerisch ist, was sich leicht von AutoIt2 unterscheidet.</p>
<p>Hinzugefügt: Syntax, mit der geprüft werden kann, ob eine Variable eine reine Zahl, eine Floating-Point-Zahl oder einen Zeitwert enthält. Beispiel:</p>
<pre class="no-highlight"><a href="lib/IfIs.htm">if var is [not]</a> number
if var is [not] float
if var is [not] time
{
    ...Aktionen...
}</pre>

<h2 id="v0.2.23.00">0.2.23 BETA - 31. Januar 2004</h2>
<p>Behoben: Mathematische Operationen mit Zahlen, die mit Leerzeichen enden: Wenn eine Variable so etwas wie <code>123 </code> (also mit einem Leerzeichen am Ende) enthält, wurde sie bei einer Berechnung als nicht numerisch behandelt, was dazu führte, dass sie leer gemacht wurde. Es tut mir leid, wenn das jemanden verwirrt hat; die vorherige Version war die Ursache des Problems.</p>

<h2 id="v0.2.22.00">0.2.22 BETA - 30. Januar 2004</h2>
<p>Behoben (für Windows 95): Das Abrufen von Umgebungsvariablen sollte nun funktionieren. Das Problem wurde durch das undokumentierte Puffergrößenlimit von Win95 in GetEnvironmentVariable() verursacht. [danke Robert Yaklin]</p>
<p>Behoben: RWin (rechte <kbd>Win</kbd>-Taste): Bei Verwendung mit einem <a href="lib/_UseHook.htm">Hook</a>-Hotkey erschien manchmal das Startmenü.</p>
<p>Behoben: Eine unbeabsichtigte 10ms-Verzögerung wurde entfernt, die jedes Mal auftrat, wenn ein Hotkey ausgelöst wurde (fehlerhaft seit v0.2.20).</p>
<p>Geändert: Mathematische Operationen (<a href="lib/EnvAdd.htm">EnvAdd</a>/<a href="lib/EnvSub.htm">Sub</a>/<a href="lib/EnvMult.htm">Mult</a>/<a href="lib/EnvDiv.htm">Div</a>): Die Ausgabevariable wird nun leer gemacht, wenn eine der Eingabevariablen nicht rein numerisch ist. Dieses Verhalten führt nicht nur dazu, dass fehlerhafte Skripte konsistenter fehlschlagen, sondern kann auch verwendet werden, um schnell festzustellen, ob eine Variable rein numerisch ist oder nicht.</p>
<p>Verbessert: <a href="lib/RegRead.htm">RegRead</a> und <a href="lib/RegRead.htm">RegWrite</a> unterstützen nun REG_BINARY. [Wie bei so vielen anderen Dingen auch, danke ich Jon, dem Autor von AutoIt]</p>
<p>Verbessert: Handhabung von ALT-Tasten: Wenn eine dieser Tasten sowohl als Präfix (das andere Hotkeys modifiziert) als auch als Suffix (ist selbst ein Hotkey, dessen Aktion beim Loslassen der Taste ausgelöst wird) verwendet wird, hat sie nicht mehr den Nebeneffekt, ein Menü im aktiven Fenster indirekt aufzurufen. Seltsamerweise war dies auf meinem System nie ein Problem, bis heute, als eine mysteriöse Veränderung eintrat, die die Notwendigkeit dieser Anpassung offensichtlich machte.</p>
<p>Hinzugefügt: Floating-Point-Unterstützung: Jede Zahl, die einen Dezimalpunkt enthält, wird als Floating-Point-Zahl behandelt. Jede mathematische Operation mit mindestens einer Floating-Point-Zahl liefert ein Floating-Point-Ergebnis. Außerdem kann der <a href="lib/Random.htm">Random</a>-Befehl nun optional Floating-Point-Zahlen generieren. Hinweis: Integer-Berechnung wird weiterhin verwendet, wenn keine Floating-Point-Zahlen involviert sind, da Tests gezeigt haben, dass Skripte mit rechenintensiven Schleifen mehr als 5-mal schneller laufen, wenn 64-Bit-Integer statt Floating-Point-Zahlen verwendet werden (getestet mit Pentium II und Athlon XP).</p>
<p>Verbessert: Integer-Berechnung wurde von 32-Bit auf 64-Bit umgestellt. 32-Bit ist nur etwa 40% schneller als 64-Bit bei Skripten mit rechenintensiven Schleifen auf Prozessoren wie Pentium II und Athlon XP. Für reale Skripte ist der Unterschied jedoch so unbedeutend, dass eine größere Flexibilität die Kosten rechtfertigt. 64-Bit ermöglicht auch, dass <a href="Variables.htm">%A_TickCount%</a> und gelesene DWORD-Registry-Werte korrekt als positive Zahlen ausgegeben werden und dass die genaue Anzahl der Bytes in Dateien größer als 2 GB abgerufen werden kann.</p>
<p>Hinzugefügt: Befehl <a href="lib/SetFormat.htm">SetFormat</a>, mit dem Floating-Point-Zahlen in einem anderen Format als dem Standardformat gespeichert werden können (z.B. die Zahl mit Leerzeichen/Nullen füllen oder ihre Anzahl von Dezimalstellen ändern).</p>
<p>Hinzugefügt: Explorer-Rechtsklick &gt;&gt;Neu &gt;&gt;AutoHotkey Script.</p>

<h2 id="v0.2.21.00">0.2.21 BETA - 26. Januar 2004</h2>
<p>Behoben: Ein <a href="lib/Loop.htm">Schleifen</a>-Bug, der durch die vorherige Version entstanden ist: Wenn eine <a href="lib/Loop.htm">Schleife</a> direkt unter einem <a href="lib/IfEqual.htm">IF</a> oder <a href="lib/Else.htm">ELSE</a> steht (also nicht von einem <a href="lib/Block.htm">Block</a> umschlossen ist), war der Ausführungsablauf falsch, was meist dazu führte, dass Teile des Skripts fälschlicherweise doppelt ausgeführt wurden. [danke Steve Drown]</p>
<p>Behoben: Das benutzerdefinierte Symbol-Feature des Ahk2Exe-Skript-Compilers.</p>
<p>Verbessert: <a href="Variables.htm">Variablennamen</a> können nun die folgenden Satzzeichen enthalten (vorher war nur der Unterstrich erlaubt): <code class="no-highlight"># _ @ $ ? [ ]</code></p>
<p>Hinzugefügt: Die Tatsache wurde dokumentiert, dass <a href="lib/MsgBox.htm">MsgBox</a> eine andere Standardschaltfläche als die erste haben kann (256 = zweite, 512 = dritte).</p>
<p>Hinzugefügt: Die Möglichkeit, Datums- und Zeitwerte zu vergleichen, zu addieren und zu subtrahieren. <a href="lib/EnvSub.htm">EnvSub</a> und <a href="lib/EnvAdd.htm">EnvAdd</a> haben nun einen optionalen dritten Parameter, der entweder Seconds, Minutes, Hours oder Days sein kann (oder jeweils nur der erste Buchstabe dieser Wörter). Das Datum-Zeit-Format ist <a href="lib/FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a> und wird von allen Datum-Zeit-Befehlen verwendet. Beispiel:</p>
<pre>var1 = 20050126
var2 = 20040126
EnvSub, Var1, %Var2%, days
MsgBox, %Var1%  <em>; Das Ergebnis ist 366, weil 2004 ein Schaltjahr ist.</em>
var1 =  <em>; Leer machen, damit unten stattdessen der aktuelle Zeitstempel verwendet wird.</em>
Var1 += 31, days
MsgBox, %Var1%  <em>; Das Ergebnis ist das Datum in 31 Tagen.</em></pre>

<h2 id="v0.2.20.00">0.2.20 BETA - 21. Januar 2004</h2>
<p>Hinzugefügt: Der erste Entwurf der Hilfedatei und des Installers ist endlich fertig. Sie sind in der aktuellen Version enthalten. [Vielen Dank an Robert Yaklin für seine Hilfe mit dem Installer.] Der Installer wird .ahk-Dateien mit der installierten AutoHotkey.exe verknüpfen, nicht mit einer alten Version, die Sie vielleicht haben.</p>
<p>Behoben: Ein durch 0.216 entstandener Bug hat verhindert, dass <a href="lib/_HotkeyModifierTimeout.htm">#HotkeyModifierTimeout</a> korrekt funktioniert. Skripte ohne installierten Tastatur-Hook kompensieren nun korrekt Tasten, die der Benutzer während des Send-Befehls gedrückt hält.</p>
<p>Behoben: Der dritte Parameter (<em>WertName</em>) von <a href="lib/RegDelete.htm">RegDelete</a> kann nun weggelassen werden. Wenn weggelassen, wird der komplette Unterschlüssel gelöscht.</p>
<p>Behoben: Skript-Compiler (Ahk2Exe) stürzt nicht mehr ab, wenn ein benutzerdefiniertes Symbol angegeben wird. Das benutzerdefinierte Symbol-Feature funktioniert leider immer noch nicht. Hoffentlich funktioniert es in der nächsten Version.</p>
<p>Geändert: Der Befehl GroupCloseAll wurde entfernt. Verwenden Sie stattdessen <code><a href="lib/GroupClose.htm">GroupClose</a>, MeineGruppe, A</code>.</p>
<p>Geändert: <a href="lib/IfWinActive.htm">IfWin[Not]Active</a> und <a href="lib/WinWaitActive.htm">WinWait[Not]Active</a> setzen nun das <a href="misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a>. [danke Robert]. Wenn eines Ihrer Skripte das Feature "Zuletzt Gefundenes Fenster" verwendet, müssen Sie es wahrscheinlich anpassen. </p>
<p>Geändert: Die <a href="lib/SetWinDelay.htm">Standardfensterverzögerung</a> ist nun 100 statt 250 und die <a href="lib/SetDefaultMouseSpeed.htm">Standardmausgeschwindigkeit</a> ist nun 2 statt 10 (d.h. der Mauszeiger bewegt sich nun standardmäßig schneller). AutoIt2-Skripte (.aut) verwenden immer noch eine Standardfensterverzögerung von 500, aber eine Standardmausgeschwindigkeit von 2 statt 1 (da Jon gesagt hat, dass Werte kleiner als 2 manchmal nicht mit MouseClickDrag funktionieren). Wenn jemand der Meinung ist, dass diese Werte zu aggressiv sind, lasst es mich wissen.</p>
<p>Verbessert: <a href="lib/MsgBox.htm">MsgBox</a> hat nun eine smarte Kommabehandlung: Kommas müssen nicht mehr mit einem Escapezeichen versehen werden (<code class="no-highlight">`,</code>), es sei denn, Sie verwenden den Zeitlimit-Parameter des Befehls.</p>
<p>Verbessert: <a href="lib/KeyHistory.htm">KeyHistory</a>-Befehl: Er zeigt nun die vom Skript erzeugten Tastaturereignisse im Fenster an (statt gar nichts), wenn kein Tastatur-Hook installiert ist.</p>
<p>Verbessert: <a href="lib/RegRead.htm">RegRead</a> ignoriert nun den zweiten Parameter (<em>WertTyp</em>), wenn der Befehl nur vier Parameter hat. Im 5-Parameter-Modus kann der zweite Parameter – der nicht verwendet wird und nur aus Gründen der Abwärtskompatibilität mit AutoIt2 vorhanden ist – leer gelassen werden.</p>
<p>Verbessert: Das Programm hat nun eine bessere Reaktionsfähigkeit (Tray-Menü, Hauptfenster usw.), wenn <a href="lib/SetBatchLines.htm">SetBatchLines</a> sehr hoch oder unendlich ist. Dies reduziert auch Tastatur- und Mausverzögerungen auf ein akzeptables Niveau, wenn solche Skripte Tastatur- oder Maus-Hooks verwenden.</p>
<p>Verbessert: <a href="lib/FileSetAttrib.htm">FileSetAttrib</a> und <a href="lib/FileSetTime.htm">FileSetTime</a> sind nun in der Lage, Unterordner rekursiv zu durchwandern. Obwohl alle Unterordner rekursiv durchwandert werden, selbst wenn ihre Namen nicht dem Platzhaltermuster entsprechen, bleiben die Attribute der Unterordner selbst unverändert, es sei denn, <em>OrdnerEinbeziehen</em> ist 1 und der Ordnername entspricht dem Muster (<code class="no-highlight">*.*</code> entspricht allen).</p>
<p>Hinzugefügt: <a href="lib/Loop.htm">Datei-Schleifen</a> haben nun u.a. einen Modus zum Durchwandern von Unterordnern.</p>
<p>Hinzugefügt: Befehl <a href="lib/SetControlDelay.htm">SetControlDelay</a>. Ähnlich wie <a href="lib/SetWinDelay.htm">SetWinDelay</a>, außer dass damit die Verzögerung eingestellt werden kann, die nach jedem Control-Befehl erfolgt, der ein Steuerelement ändert, namentlich <a href="lib/ControlClick.htm">ControlClick</a>, <a href="lib/ControlFocus.htm">ControlFocus</a> und <a href="lib/ControlSetText.htm">ControlSetText</a>. Diese Befehle sind von Natur aus etwas unzuverlässig; diese Verzögerung scheint ein wenig zu helfen. Die Standardeinstellung ist 20 (Millisekunden). In älteren Versionen hatte SetWinDelay Einfluss auf diese Befehle.</p>
<p>Hinzugefügt: Befehl <a href="lib/SoundPlay.htm">SoundPlay</a>. Neben WAV-Dateien kann der Befehl auch MP3, AVI usw. abspielen, je nachdem, welche Features auf Ihrem Betriebssystem installiert sind.</p>
<p>Hinzugefügt: <a href="lib/EnvAdd.htm">Operatoren</a> <code>++</code> und <code>--</code>, die den Wert der Zielvariable um 1 erhöhen bzw. verringern. Beispiele: <code>count++</code>, <code>++count</code>, <code>count--</code>, <code>--count</code></p>
<p>Hinzugefügt: Unterstützung für <a href="misc/Arrays.htm">Arrays</a> (AutoIt2-Stil). Dies wurde erreicht, indem der Name einer Variable zur Laufzeit aufgelöst werden kann, anstatt wie bisher ausschließlich zur Kompilierzeit. Mit anderen Worten, Befehle, die den Namen einer Variable (ohne umschließendes %%) erwarten, erlauben nun, dass dieser Variablenname Referenzen auf andere Variablen enthält. Beispiel:</p>
<pre><em>; In das Array schreiben:</em>
i = 0
loop, 5
{
    i++
    Random, Array%i%, 1, 100  <em>; Eine Zufallszahl in jedes Element einfügen.</em>
}

<em>; Aus dem Array lesen:</em>
i = 0
loop
{
    i++
    StringTrimRight, Element, Array%i%, 0
    if Element =
        break <em>; Ende des Arrays erreicht.</em>
    MsgBox, %Element%
}</pre>

<h2 id="v0.219">0.219 BETA - 12. Januar 2004</h2>
<p>Behoben: Suspend-Befehl: Beim Ausschalten der Suspension werden alle Hotkeys wieder aktiviert. Vorher blieben Hook-Hotkeys manchmal deaktiviert.</p>
<p>Geändert: Suspend-Befehl: Die Tastatur- und Maus-Hooks werden nie entfernt, wenn die entsprechenden Direktiven (#InstallKeybdHook und #InstallMouseHook) im Skript vorhanden sind.</p>
<p>Geändert: InputBox-Befehl: Bei Nicht-AutoIt2 (.aut)-Skripten wird ErrorLevel nun auf 1 und die Ausgabevariable auf den eingegebenen Wert gesetzt, wenn der Benutzer die Abbrechen-Schaltfläche drückt. Bei AutoIt2-Skripten ist das Verhalten gleich: ErrorLevel bleibt unverändert, und die Ausgabevariable wird leer gemacht, wenn der Benutzer auf Abbrechen drückt, auch wenn Text eingegeben wurde.</p>
<p>Geändert: FileDelete setzt nun ErrorLevel auf die Anzahl der Dateien, die nicht gelöscht werden konnten (wenn ein Platzhaltermuster angegeben wurde).</p>
<p>Geändert: KeyHistory-Befehl: Der Dateiname wird nun im zweiten Parameter angegeben. Er funktioniert nun wie folgt:</p>
<pre class="no-highlight">KeyHistory  <em>; wie zuvor (Kurzprotokoll im Fenster anzeigen)</em>
KeyHistory, On, C:\KeyHistory.txt  <em>; Protokollierung einschalten, optional mit Angabe der Datei, in die protokolliert werden soll.</em>
KeyHistory, Off  <em>; Protokollierung ausschalten.</em>
KeyHistory, Toggle [, Dateiname]  <em>; Auf den entgegengesetzten Zustand schalten (On oder Off).</em></pre>
<p>Verbessert: KeyHistory ist nun performanter beim Protokollieren in eine Datei, indem es die Datei geöffnet lässt, anstatt sie bei jedem Tasten- oder Mausereignis zu schließen und wieder zu öffnen. Dies sollte auch den "Verschleiß" der Festplatte verringern. Der einzige Nachteil ist, dass beim Betrachten einer geöffneten Protokolldatei aufgrund der Dateipufferung veraltete Inhalte angezeigt werden können. Um das zu umgehen, schalten Sie die Protokollierung vorübergehend aus, bevor Sie die Datei betrachten.</p>
<p>Verbessert: Run und RunWait sind nun performanter, da sie CreateProcess() vor ShellExecute() versuchen und nicht mehr umgekehrt. Ich glaube, CreateProcess() ist viel schneller.</p>
<p>Geändert: Die Befehle FileToggleHidden und FileSetDateModified wurden entfernt. Die Ersatzbefehle finden Sie unten.</p>
<p>Hinzugefügt: Die folgenden Befehle. Klicken Sie auf einen Link für Details:</p>
<ul>
  <li><a href="lib/ControlGetFocus.htm">ControlGetFocus</a></li>
  <li><a href="lib/FileSelectFolder.htm">FileSelectFolder</a></li>
  <li><a href="lib/FileGetAttrib.htm">FileGetAttrib</a></li>
  <li><a href="lib/FileSetAttrib.htm">FileSetAttrib</a></li>
  <li><a href="lib/FileGetTime.htm">FileGetTime</a></li>
  <li><a href="lib/FileSetTime.htm">FileSetTime</a></li>
  <li><a href="lib/FileGetSize.htm">FileGetSize</a></li>
  <li><a href="lib/FileGetVersion.htm">FileGetVersion</a></li>
</ul>

<h2 id="v0.218">0.218 BETA - 7. Januar 2004</h2>
<p> Hinzugefügt: Ein Skript-Compiler (macht aus einem Skript eine EXE) auf vielfachen Wunsch. Dank des offenen und modularen Programmierstils von Jon (AutoIt-Autor) war dies viel einfacher als erwartet. Erhältlich auf der <a href="https://www.autohotkey.com/download/">Download-Seite</a>. Hinweis: Derzeit werden .aut-Skripte nicht unterstützt, da das kompilierte Skript keine Möglichkeit hat, herauszufinden, ob es im AutoIt2-Modus (umgekehrter Schrägstrich als Escapezeichen) oder im AutoHotkey-Modus (<code class="no-highlight">`</code> als Escapezeichen) ausgeführt werden soll. Sie können aber, falls nötig, Ihre .aut-Datei automatisch in .ahk umwandeln, indem Sie sie in "was-auch-immer.aut.ahk" umbenennen und dann mit AutoHotkey.exe ausführen.</p>
<p>Hinzugefügt: Unterstützung für Befehlszeilenparameter, die als Skriptvariablen verwendet werden können. Das Befehlszeilenformat ist:</p>
<ul>
  <li>AutoHotkey.exe [Optionen] [Skriptdateiname] [Skriptparameter]</li>
  <li>KompiliertesSkript.exe [Optionen] [Skriptparameter]</li>
  <li>Folgende Optionen können angegeben werden:<ul>
  <li>/f oder /force -- Skript bedingungslos starten und Warndialogfenster überspringen.</li>
  <li>/r oder /restart -- Gibt an, dass das Skript neu gestartet werden soll (diese Option wird auch intern vom Reload-Befehl verwendet)</li></ul></li>
  <li>Skriptdateiname kann weggelassen werden, wenn keine Skriptparameter vorhanden sind. Wenn weggelassen, wird AutoHotkey.ini im aktuellen Verzeichnis ausgeführt (oder bei Nachfrage erstellt).</li>
  <li>Skriptparameter können beliebige Zeichenketten sein, die an das Skript übergeben werden sollen. Parameter, die Leerzeichen enthalten, müssen in doppelte Anführungszeichen gesetzt werden. Wie AutoIt2 sieht das Skript sie als die Variablen %1%, %2% und so weiter.</li>
</ul>
<p>Hinzugefügt: Direktive #NoTrayIcon. Fügen Sie sie irgendwo in das Skript ein, um die Anzeige des Tray-Symbols zu deaktivieren. Wenn Sie diese Direktive in einem Skript mit Hotkeys verwenden, ist es ratsam, einen Hotkey an den ExitApp-Befehl zu binden. Andernfalls gäbe es keine einfache Möglichkeit, das Programm zu beenden (ohne dabei den Computer neu zu starten oder den Prozess zu beenden). Beispiel: <code>#x::ExitApp</code></p>

<h2 id="v0.217">0.217 BETA - 5. Januar 2004</h2>
<p>Behoben: Variablenzuweisung (SetEnv und der neue Stil, <code>Var = Wert</code>) behandelt Escapesequenzen nun korrekt. Zeilen wie die folgende sollten jetzt richtig funktionieren: <code>Ergebnis = %Ergebnis% %Farbe% `%`n</code></p>
<p>Behoben: <kbd>Umschalt</kbd> blieb in seltenen Fällen dauerhaft gedrückt, wenn Ziffernblock-Hotkeys den Send-Befehl zum Senden von <kbd>Umschalt</kbd> aufrufen. Der Fix ist im Grunde ein Workaround für die Tatsache, dass das Betriebssystem, der Treiber oder das BIOS physische UMSCHALT-Ereignisse generiert, um sicherzustellen, dass Tastendrücke von multifunktionalen Ziffernblocktasten (Numpad1-9 und Dot) niemals erfolgen, wenn <kbd>Umschalt</kbd> unten ist. Nochmals vielen Dank an Robert Yaklin für seine Hilfe.</p>
<p>Behoben: Ziffernblock-Hotkeys (z.B. NumpadEnd), die ein Gegenstück auf der Haupttastatur haben (z.B. End): Das Gegenstück löst den Hotkey nicht mehr aus.</p>
<p>Hinzugefügt: Befehle IniRead/Write/Delete:</p>
<ul>
  <li>IniRead, AusgabeVar, DateiName, Sektion, Schlüssel, Standardwert (Rückgabewert, wenn Schlüssel nicht gefunden wird)</li>
  <li>IniWrite, Wert, DateiName, Sektion, Schlüssel</li>
  <li>IniDelete, DateiName, Sektion, Schlüssel</li>
  <li>Hinweis: Aus Kompatibilitätsgründen unterstützt IniRead den letzten Parameter nicht, wenn das Skript vom Typ .aut ist. Wenn dieser letzte Parameter weggelassen wird, wird AusgabeVar bei Misserfolg auf ERROR gesetzt. Dies entspricht dem Verhalten von AutoIt2. Außerdem setzt keiner dieser Befehle ErrorLevel, was dem Verhalten von AutoIt2 und 3 entspricht.</li>
</ul>
<p>Hinzugefügt: Befehl EnvUpdate, der laut der AutoIt3-Dokumentation: "Aktualisiert die Systemumgebung. Das ist dasselbe wie, als würde man sich aus- und wieder einloggen." Der Befehl setzt ErrorLevel bei Erfolg auf 0, andernfalls auf 1. Hinweis: Aufgrund der Funktionsweise dieses Features besteht eine geringe Chance, dass Tastatur- und Mausereignisse bei der Ausführung des Befehls verzögert werden, wenn der Tastatur- oder Maus-Hook installiert ist.</p>
<p>Hinzugefügt: Interne Variable A_Space, die ein Leerzeichen enthält. Dadurch entfällt die Notwendigkeit, einen Workaround zu verwenden, um eine Variable dazu zu bringen, ein Leerzeichen zu enthalten. Beispiel:</p>
<pre>Zkette = Zeichenkette mit Leerzeichen
IfInString, Zkette, %A_SPACE%
    MsgBox, Ein Leerzeichen wurde gefunden.

<em>; Um jedoch einer Variable nur ein Leerzeichen zuzuweisen, muss AutoTrim deaktiviert werden, damit die Zuweisung keine Leerzeichen am Anfang und Ende entfernt:</em>
AutoTrim, Off
MeinLeerzeichen = %A_SPACE%</pre>
<p>Hinzugefügt: Befehl Edit, der das aktuelle Skript zum Editieren öffnet, oder ein vorhandenes Editorfenster aktiviert, dessen Fenstertitel darauf hindeutet, dass die Datei geöffnet sein könnte. Dieser Befehl entspricht der Auswahl des Menüpunkts "Edit This Script" im Tray-Menü.</p>
<p>Hinzugefügt: Befehl Pause und zugehöriger Tray-Menüpunkt. Im Gegensatz zu Suspend, das die Hotkeys vollständig deaktiviert, pausiert Pause die aktuell laufende Subroutine (wenn keine vorhanden ist, hat Pause keine Wirkung). Für den ersten Parameter des Befehls können die Werte ON, OFF und TOGGLE (auf entgegengesetzten Zustand schalten) verwendet werden. Wenn der erste Parameter weggelassen wird, gilt standardmäßig TOGGLE, ähnlich wie beim Suspend-Befehl. Neue Hotkeys können noch gestartet werden, während das Skript pausiert ist, aber sobald ihre Subroutinen enden, bleibt die unterbrochene Subroutine darunter pausiert. <code>Pause, Off</code> entpausiert nur die zuletzt pausierte Subroutine. Jede Subroutine kann unabhängig von den anderen pausiert werden. Die Farbe des Tray-Symbols wechselt zu schwarz, wenn die aktuelle Subroutine des Skripts pausiert ist.</p>
<p>Verbessert: Suspend-Feature:</p>
<ul>
  <li>Es bewirkt nun, dass alle Hotkeys ihre ursprüngliche Funktion ausführen, anstatt nichts zu tun, wenn sie gedrückt werden.</li>
  <li>Das Tray-Symbol wechselt zu einem S, wenn Hotkeys suspendiert werden.</li>
  <li>Der erste Parameter kann nun PERMIT oder TOGGLE sein, zusätzlich zu ON oder OFF. TOGGLE ist dasselbe wie, als würde man den ersten Parameter weglassen (schaltet auf den entgegengesetzten Zustand). PERMIT ändert nicht den Suspend-Status. Stattdessen hat es den folgenden Effekt: Wenn es in der ersten Zeile einer Subroutine verwendet wird, darf diese Subroutine trotz suspendierter Hotkeys ausgeführt werden. Hinweis: Wie gehabt darf jede Subroutine, die Suspend als ersten Befehl hat, ausgeführt werden, während Hotkeys suspendiert sind (d.h. der PERMIT-Wert ist nur eine Möglichkeit, dies zu tun, ohne den Suspend-Status zu ändern).</li>
  <li>Hinweis: Suspend deaktiviert nicht das AlwaysOn/AlwaysOff-Feature von Scroll/Caps/NumLock, sofern im Skript verwendet.</li>
  <li>Hinweis: Das Skript wird immer angehalten, wenn es sein Tray-Menü anzeigt (dies gilt nicht als offiziell pausiert). Neue Hotkeys können jedoch noch gestartet werden.</li>
</ul>
<p>Verbessert: Das Verhalten von #SingleInstance-Skripten, wenn der Benutzer versucht, eine weitere Instanz zu starten: Es wird nun ein Dialogfenster angezeigt, das den Benutzer fragt, ob die alte Instanz beibehalten oder mit einer neuen Instanz ersetzt werden soll.</p>
<p>Verbessert: PixelSearchs Ausgabevariablen sind nun optional. Außerdem wurde ein optionaler Parameter hinzugefügt, der eine Zahl im Bereich von 0 bis 255 akzeptiert, um die erlaubte Anzahl von Variationsnuancen in beide Richtungen für die Intensität der Rot-, Grün- und Blauanteile der Farbe zu bestimmen. Dieser Parameter hilft bei variierenden Farben. Beispiel: <code>PixelSearch, FundX, FundY, %X1%, %Y1%, %X2%, %Y2%, %Farbe%, 10 <em>; Erlaubt 10 Variationsnuancen</em></code>. Hinweis: Wenn Sie 255 Variationsnuancen angeben, werden alle Farben übereinstimmen. Standardmäßig gelten 0 Variationsnuancen.</p>

<h2 id="v0.216">0.216 BETA - 29. Dezember 2003</h2>
<p>Behoben: Ein Bug, der durch die vorherige Version entstanden ist: Neue Hotkeys konnten nicht ausgelöst werden, wenn das Skript ein Dialogfenster wie z.B. MsgBox auf dem Bildschirm angezeigt hat.</p>
<p>Behoben: PixelSearch akzeptiert nun auch negative Koordinaten.</p>
<p>Geändert: Skriptverhalten: Die Standardwerte von Einstellungen wie KeyDelay und WinDelay werden nun für jede neue Hotkey-Subroutine wirksam. Sie können den automatischen Fortsetzungsbereich (der aus den Befehlen am Anfang des Skripts vor dem ersten Hotkey-Label besteht) verwenden, um die Standardeinstellungen nach Belieben zu ändern. Das heißt, wenn ein Hotkey gedrückt wird, verwendet die Subroutine nun immer vorerst die Standardwerte der folgenden Einstellungen:</p>
<ul>
  <li>DetectHiddenWindows</li>
  <li>DetectHiddenText</li>
  <li>SetTitleMatchMode</li>
  <li>SetBatchLines</li>
  <li>SetWinDelay</li>
  <li>SetKeyDelay</li>
  <li>SetDefaultMouseSpeed</li>
  <li>SetStoreCapsLockMode</li>
  <li>AutoTrim</li>
  <li>StringCaseSense</li>
</ul>
<p>Hinzugefügt: StringUpper und StringLower. Beispiel: <code>StringUpper, AusgabeVar, EingabeVar</code>. Hinweis: Wie bei allen Befehlen dieser Art können EingabeVar und AusgabeVar die gleiche Variable sein.</p>
<p>Hinzugefügt: Neue interne Variablen:</p>
<ul>
  <li>A_ThisHotkey: Der Labelname (z.B. <code class="no-highlight">#c</code>) der zuletzt ausgeführten Hotkey-Subroutine. Andernfalls leer.</li>
  <li>A_PriorHotkey: Dasselbe wie oben, aber für die vorherige Subroutine.</li>
  <li>A_TimeSinceThisHotkey: Millisekunden seit dem letzten Start der Hotkey-Subroutine. Enthält -1, wenn A_ThisHotkey leer ist.</li>
  <li>A_TimeSincePriorHotkey: Millisekunden seit dem letzten Start der vorherigen Hotkey-Subroutine. Enthält -1, wenn A_PriorHotkey leer ist.</li>
  <li>A_TickCount: Millisekunden seit dem letzten Neustart des Computers. Überschreitet dieser Wert 4294967295 (49,7 Tage), wird er auf Null zurückgesetzt und zählt von da an. </li>
</ul>

<h2 id="v0.215">0.215 BETA - 18. Dezember 2003</h2>
<p>Behoben: Kein Absturz mehr, der bei Variablenzuweisungen mit mehr als einer Quelle auftrat, z.B. Anweisungen wie <code>clipboard = %clipboard%%EineVar%</code>.</p>
<p>Behoben: Kein Absturz mehr beim Starten eines Skripts in Verbindung mit der in Version 0.212 eingeführten "else if"-Unterstützung.</p>
<p>Behoben: Die Zwischenablage wurde in seltenen Fällen blockiert (offen gehalten), z.B. wenn die Zwischenablage mit SplashTextOn angezeigt wird.</p>
<p>Behoben: PixelGetColor akzeptiert nun auch negative Koordinaten.</p>
<p>Behoben: Ein sehr obskures Problem: Ein ununterdrückter Maus-Hotkey wie <code>~LButton::</code> führte dazu, dass sich das Tray-Menü und die Kontextmenüs des Hauptfensters seltsam verhielten.</p>
<p>Hinzugefügt: Befehl SoundSetWaveVolume, mit dem die Wiedergabelautstärke für Dateien wie WAV und MP3 eingestellt werden kann. Zum Beispiel: <code>SoundSetWaveVolume, 50 <em>; Eine Zahl im Bereich von 0 bis 100</em></code>.</p>
<p>Hinzugefügt: Befehl EnvSet, der benötigt wird, da AutoHotkey im Gegensatz zu AutoIt2 seine Variablen nicht in der Systemumgebung speichert. Das liegt zum einen daran, dass die Performanz darunter leiden würde, und zum anderen daran, dass das Betriebssystem die Größe jeder Umgebungsvariable auf 32 KB begrenzt (AutoHotkey-Variablen, einschließlich der Zwischenablage, können praktisch unbegrenzt groß sein). ErrorLevel wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt. Zum Beispiel: <code>EnvSet, AutGUI, Beliebiger Text für die Variable.</code></p>
<p>Hinweis: Ein EnvGet-Befehl ist nicht erforderlich, da die Dereferenzierung einer leeren oder undefinierten Variable dieses Verhalten automatisch auslöst. Im folgenden Beispiel wird der Wert der ProgramFiles-Variable (sofern ungesetzt) aus der Systemumgebung geholt: <code>ZielDatei = %ProgramFiles%\Irgendetwas\setup.ini</code></p>
<p>Geändert: Das Feature, wonach bei einem Syntaxfehler zur richtigen Zeile in Notepad oder Metapad gesprungen wird (wenn das Skript bereits in einem solchen Editor geöffnet ist), wurde deaktiviert, da es nicht zuverlässig zu funktionieren scheint. Falls jemand von euch dieses Feature benutzt hat, lasst es mich wissen. Später plane ich, Unterstützung für ein externes Skript wie "RunWhenSyntaxError.ahk" hinzuzufügen, das automatisch ausgeführt wird, wenn der Start eines Skripts aufgrund eines Syntaxfehlers fehlschlägt.</p>
<p>Verbessert: PixelSearch setzt ErrorLevel nun auf 2, wenn ein anderer Fehler als "Farbe nicht gefunden" auftritt. Es setzt ErrorLevel immer noch auf 1, wenn die Farbe nicht gefunden wurde, oder auf 0, wenn sie gefunden wurde. </p>

<h2 id="v0.214">0.214 BETA - 16. Dezember 2003</h2>
<p>Hinzugefügt: Befehl WinMenuSelectItem (ähnlich wie der AutoIt3-Befehl). Die Menüsuche ist nicht Groß-/Kleinschreibung-sensitiv (d.h. Datei-&gt;Speichern ist dasselbe wie datei-&gt;speichern). Außerdem ist es nicht erforderlich, das Und-Zeichen (&amp;) für unterstrichene Buchstaben in einem Menüpunkt anzugeben. Zum Beispiel:</p>
<pre>WinMenuSelectItem, Unbenannt - Editor,, Datei, Speichern
WinMenuSelectItem, Unbenannt - Editor,, 1&amp;, 3&amp;  <em>; Wie oben, aber mit Menüpunktpositionen statt -texten.</em></pre>
<p>Hinweis: Die Positionsmethode existiert, um Menüs zu unterstützen, die keine Texte enthalten (z.B. Bilder statt Texte). Position 1 ist der erste Menüpunkt (z.B. das Dateimenü). Menütrennlinien zählen bei der Positionsbestimmung ebenfalls als Menüpunkte.</p>
<p>Hinzugefügt: Befehl ControlFocus. Zum Beispiel:</p>
<pre>ControlFocus, (StrlmntName oder StrlmntClassNN), FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</pre>
<p>Hinweis: Wie bei allen Befehlen, die FensterTitel/Text verwenden, ist es möglich, den Buchstaben A als Titel anzugeben, um das aktive Fenster zu verwenden, oder alle vier Fensterparameter leer zu lassen, um das zuletzt gefundene Fenster von Befehlen wie IfWinExist und WinWait zu verwenden.</p>
<p>Verbessert: Die folgenden Befehle setzen nun ErrorLevel auf 1, wenn ein unkritischer Fehler (z.B. ein nicht-existierendes Fenster oder Steuerelement) die Ausführung des Befehls verhindert hat: ControlSend, ControlClick, ControlSetText, ControlGetText, StatusBarGetText, WinGetText.</p>
<p>Verbessert: StatusBarWait setzt ErrorLevel nun auf 2, wenn ein Fehler aufgetreten ist (z.B. wenn das Zielfenster nicht existiert oder keine Statusleiste hat). Aber wie gehabt wird ErrorLevel auf 1 gesetzt, wenn der Befehl das Zeitlimit überschritten hat, oder auf 0, wenn der angegebene Text in der Statusleiste gefunden wurde.</p>
<p>Verbessert: Der KeyHistory-Befehl unterstützt nun die Protokollierung von Tastatur- und Maustasten in eine Datei. Er funktioniert immer noch auf die alte Weise (KeyHistory-Fenster anzeigen), wenn keine Parameter angegeben werden. Aber er verhält sich anders, sobald ein Parameter übergeben wird. Beispiele:</p>
<pre class="no-highlight">KeyHistory, C:\KeyHistory.txt  <em>; Dateiname angeben und Dateiprotokollierung einschalten.</em>
KeyHistory, Off     <em>; Dateiprotokollierung ausschalten.</em>
KeyHistory, On      <em>; Dateiprotokollierung einschalten, wobei der Dateiname von der vorherigen Nutzung dieses Befehls verwendet wird.</em>
KeyHistory, Toggle  <em>; Dateiprotokollierung umschalten (auf den entgegengesetzten Zustand schalten).</em></pre>
<p>Der Tastatur- oder Maus-Hook muss installiert sein, damit die Protokollierung funktioniert. Durch Hinzufügen der folgenden Zeilen können Sie die bedingungslose Installation der Hooks erzwingen:</p>
<pre>#InstallKeybdHook
#InstallMouseHook</pre>
<p>Die Protokolldatei ist eine Textdatei, die folgende tabulatorgetrennte Felder enthält:</p>
<ul>
  <li>Virtueller Tastencode (hexadezimal)</li>
  <li>Scancode (hexadezimal; die erste Ziffer ist 1, wenn es sich um eine "erweiterte" Taste handelt)</li>
  <li>Sekunden, die seit dem letzten Ereignis verstrichen sind</li>
  <li>Flag (h = Hook-Hotkey, s = unterdrückt (vor dem System versteckt) vom Hook, i = ignoriert vom Hook)</li>
  <li>d oder u (d = down bzw. unten, u = up bzw. oben)</li>
  <li>Tastenname</li>
  <li>Aktiver Fenstertitel (nur vorhanden, wenn er sich gegenüber dem vorherigen Ereignis geändert hat)</li>
</ul>
<p>Beispiel einer Protokolldatei:</p>
<pre class="no-highlight">59	015	15.0	 	u	Y	C:\
5B	15B	0.1	 	u	Left Windows
9E	000	1.1	 	d	WheelDown

9F	000	0.4	 	d	WheelUp
A4	038	0.4	 	d	Alt
09	00F	0.1	 	d	Tab
09	00F	0.2	 	u	Tab
A4	038	0.1	 	u	Alt	 Unbenannt - Editor
A3	11D	1.4	 	d	Right Ctrl
26	148	0.1	h	d	Up	C:\
26	148	0.1	s	u	Up
A3	11D	0.0	 	u	Right Ctrl
A3	11D	1.6	 	d	Right Ctrl
2E	153	0.1	h	d	Delete
A3	11D	0.0	i	u	Right Ctrl
A4	038	0.0	i	d	Alt
73	03E	0.0	i	d	F4
73	03E	0.0	i	u	F4
A4	038	0.0	i	u	Alt
A3	11D	0.0	i	d	Right Ctrl</pre>
<p>Hinweis: Jeder Tastendruck erzeugt zwei Zeilen, eine für down und eine für up.</p>

<h2 id="v0.213">0.213 BETA - 15. Dezember 2003</h2>
<p>Behoben: Hotkeys, die LWin/RWin (<kbd>Win</kbd>) als Modifikator haben und den Send-Befehl verwenden: In einigen Fällen wurde <kbd>Win</kbd> nach dem Send fälschlicherweise in den gedrückten Zustand versetzt. [Danke an Robert Yaklin für die Entdeckung dieses Problems.] Übrigens müsst ihr nicht den Sleep-Befehl verwenden, um dem Benutzer Zeit zu geben, die Modifikatortasten (Strg, Alt, Umschalt und Win) bei Hotkeys, die den Send-Befehl verwenden, loszulassen. Der Send-Befehl weiß, auf welchen Status er die Modifikatoren für jede zu sendende Taste setzen muss.</p>
<p>Behoben: Hotkeys, die Windows-Hotkeys wie z.B. <kbd>Win</kbd>+<kbd>E</kbd> und <kbd>Win</kbd>+<kbd>R</kbd> überschreiben: Das Startmenü erscheint nicht mehr beim Loslassen von <kbd>Win</kbd>.</p>
<p>Hinzugefügt: PixelGetColor und PixelSearch, die die gleichnamigen Befehle von AutoIt3 nachahmen. Diese können helfen, den Status von untypischen Steuerelementen zu erkennen und Vollbildanwendungen wie z.B. Videospiele zu automatisieren. Einzelheiten finden Sie in der Dokumentation.</p>
<p>Kleine Änderung: Die vorherige Änderung (siehe weiter unten) in Bezug auf "Escapezeichen, die am Ende einer Zeile oder vor einem Leerraumzeichen stehen" wurde rückgängig gemacht. In Übereinstimmung mit dem AutoIt2-Verhalten werden nun Escapezeichen, die nichts auslösen, entfernt (also unsichtbar gemacht).</p>
<p>Kleine Änderung: WinClose verwendet nun WM_CLOSE statt SC_CLOSE (<kbd>Alt</kbd>+<kbd>F4</kbd>) und verhält sich somit wie in AutoIt2 und AutoIt3. Die neue Methode ist etwas weniger sanft zum Zielfenster als die vorherige Methode, funktioniert aber wahrscheinlich bei mehr Fenstertypen.</p>
<p>Es gibt jetzt ein automatisiertes Verfahren, um eine .aut-Datei in eine .ahk-Datei zu konvertieren, so dass Sie die neuen Features in vollem Umfang nutzen können (einige der neuen Features, wie z.B. neu hinzugefügte Befehlsparameter, sind in .aut-Skripten deaktiviert, um die Kompatibilität mit AutoIt2 zu verbessern). Die Konvertierung ändert das Escapezeichen einfach in <code class="no-highlight">`</code> anstelle von <code class="no-highlight">\</code>. Dies ist schwieriger, als es klingt, da Escapesequenzen in jeder Zeile genau angeordnet sein müssen, weshalb ein simples Suchen und Ersetzen in einem Texteditor nicht möglich ist. Dieses automatisierte Verfahren sollte sich um alles kümmern:</p>
<ol>
  <li>Fügen Sie <code class="no-highlight">.ahk</code> an das Ende einer existierenden .aut-Datei an, so dass der Dateiname mit <code class="no-highlight">.aut.ahk</code> endet</li>
  <li>Führen Sie diese Datei mit AutoHotkey aus, das eine neue Datei im selben Verzeichnis mit der Endung <code class="no-highlight">-NEW.ahk</code> erstellt, anstatt die Datei auszuführen. Dies ist die konvertierte Version. Die ursprüngliche Version bleibt unverändert.</li>
  <li> Wenn Sie #EscapeChar im Skript verwendet haben, entfernen Sie es in der konvertierten Version.</li>
</ol>
<p>Nach der Konvertierung eines Skripts von .aut nach .ahk sollte man vor allem auf Befehle achten, die in .ahk-Dateien zusätzliche Parameter akzeptieren, in .aut-Dateien jedoch nicht. Wenn Sie in einem Parameter, der früher (in AutoIt2) der letzte Parameter war, jetzt aber nicht mehr der letzte Parameter ist, escapezeichenlose Kommas verwendet haben, werden diese Kommas als Trennzeichen interpretiert. Zum Beispiel:</p>
<pre>Msgbox, 0, Titel, Text, mit, Kommas</pre>
<p>Im obigen Beispiel würde AutoIt2 die Zeichenkette "Text, mit, Kommas" als letztes Argument interpretieren. Da AutoHotkey jedoch einen neuen Parameter (Zeitlimit) für die MsgBox unterstützt, würde die Zeichenkette "mit, Kommas" als Zeitlimit interpretiert werden (was in diesem Fall als Ladezeitfehler behandelt würde). Hier ein weiteres Beispiel:</p>
<pre>WinActivate, Titel, Text mit direkt geschriebenem Komma, hier.</pre>
<p>Das obige Beispiel wäre nach der Konvertierung problematisch, da die Zeichenkette "hier." als neuer <em>AusnahmeTitel</em>-Parameter interpretiert würde.</p>
<p>Hier eine Liste von Befehlen, die sowohl neue Parameter akzeptieren als auch problematisch sein können:</p>
<ul>
  <li>MsgBox</li>
  <li>StringReplace</li>
  <li>StringGetPos</li>
  <li>WinClose/Kill/Activate/Minimize/Maximize/Restore/Hide/Show</li>
  <li>WinSetTitle/WinGetTitle</li>
</ul>
<p>Hinweis #1: Auch wenn sie neue Parameter in .ahk-Dateien akzeptieren, sind Befehle wie IfWinExist in Bezug auf die obigen unproblematisch, da das Programm den Unterschied zwischen den AutoIt2- und AutoHotkey-Methoden erkennen kann. Auch die WinWait-Befehlsgruppe sollte kein Problem darstellen.</p>
<p>Hinweis #2: Wie immer kann AutoHotkey die meisten AutoIt2-Dateien (.aut) direkt ausführen, ohne sie in eine .ahk-Datei konvertieren zu müssen.</p>

<h2 id="v0.212">0.212 BETA - 8. Dezember 2003</h2>
<p>Unterstützung hinzugefügt, so dass Befehle nun auf derselben Zeile wie ihr ELSE stehen können. Beispiele:</p>
<pre>if x = 1
    Gosub, a1
else if x = 2
    Gosub, a2
else IfEqual, x, 3
{
    Gosub, a3
    Sleep, 1
}
else Gosub, a4  <em>; Befehle können unmittelbar nach einem ELSE folgen.</em>

<em>; Auch OK:</em>
IfEqual, y, 1, Gosub, b1
else {
    Sleep, 1
    Gosub, b2
}

<em>; Aber das ist illegal:</em>
if x = 1 {  <em>; Ungültig: Dies würde X mit der Zeichenkette "1 {" vergleichen, anstatt { als den Beginn eines Blocks zu behandeln.</em>
    Sleep, 1
    MsgBox, Test
}

<em>; Eine legale Alternative:</em>
IfEqual, x, 1, {
    Sleep, 1
    MsgBox, Test
}</pre>
<p>Diese Neuerung wurde hauptsächlich eingeführt, um "else if"-Anweisungen zu ermöglichen, die die Lesbarkeit des Skripts verbessern können.</p>
<p>Die Bedingungen für das Auslösen des Warndialogfensters "More than X hotkeys have been received in the last Y milliseconds" (Mehr als X Hotkeys wurden in den letzten Y Millisekunden empfangen) wurden gelockert (Danke an CyberSlug für die Idee), so dass die Autowiederholungsfunktion der Tastatur auf den meisten Systemen verwendet werden kann, ohne eine Warnung auszulösen. Außerdem können Sie dieses Verhalten mit den folgenden Direktiven anpassen:</p>
<pre>#HotkeyInterval 2000 <em>; Das ist der Standardwert (in Millisekunden).</em>
#MaxHotkeysPerInterval 50 <em>; Das ist der Standardwert.</em></pre>
<p>Achten Sie darauf, den obigen Wert nicht zu großzügig zu wählen, denn wenn Sie versehentlich eine Endlosschleife mit Tastendrücken erzeugen (via Send-Befehl, der versehentlich andere Hotkeys auslöst), kann es passieren, dass Ihr Computer aufgrund vieler schneller Tastaturereignisse nicht mehr reagiert. Beispiel für eine Endlosschleife von Tastendrücken: <code>^c::Send, ^c</code>.</p>
<p>Wenn Sie so etwas wie oben realisieren wollen, ohne eine Endlosschleife auszulösen, fügen Sie ein $ zur Hotkey-Definition hinzu (z.B. <code>$#y::</code>). Das $ weist den Hotkey an, den Hook zu verwenden, wodurch unsere SEND-Befehle nicht als Quelle für Hotkeys verwendet werden. Der Hook hat einige Nachteile, weshalb er nicht immer verwendet wird: 1) Nur eine einzige Instanz des Programms sollte den Hook installiert haben; 2) Der Hook kann die Systemleistung geringfügig beeinträchtigen.</p>
<p>Das Hotkey-Präfix <code>~</code> (Tilde) wurde verbessert (siehe Dokumentation), so dass es sowohl mit modifizierten Hotkeys (d.h. bei denen <kbd>Strg</kbd>, <kbd>Alt</kbd>, <kbd>Umschalt</kbd> oder <kbd>Win</kbd> gedrückt werden muss) als auch mit unmodifizierten Hotkeys funktioniert. Die einzige Ausnahme sind Maustasten, die unmodifiziert sein müssen, um "nicht unterdrückt" zu sein.</p>
<p>Alle fensterspezifischen Befehle unterstützen nun den Buchstaben A als ersten Parameter, um anzugeben, dass das aktive Fenster verwendet werden soll. Obwohl das Ergebnis bei Befehlen wie WinWait, WinActivate, IfWinExist und IfWinActive immer im Voraus "bekannt" ist (da das aktive Fenster per Definition aktiv ist und existiert), sorgt diese Änderung für mehr Konsistenz. So kann beispielsweise der erste Parameter zur Laufzeit bedingt in den Buchstaben A aufgelöst werden, was die Flexibilität erhöht. Außerdem kann mit dieser Änderung das Zuletzt Verwendete Fenster einfach zurückgesetzt werden. Zum Beispiel:</p>
<pre>#y::  <em>; WIN+Y</em>
Run, notepad
WinWait, Editor
WinActivate  <em>; Das zuletzt gefundene Fenster aktivieren.</em>
<em>; ...Angenommen, es ist etwas Zeit vergangen und wir sind uns nicht mehr sicher, welches Fenster das "zuletzt verwendete" ist.</em>
WinActivate, Editor
WinWait, a  <em>; ***** Macht das aktive Fenster zum "zuletzt verwendeten" Fenster.</em>
<em>; Nun können wir Befehle wie den folgenden ausführen, ohne das Fenster anzugeben (auch performanter):</em>
WinMinimize
ControlSend, , Ein Text`, der im Editor erscheint`, egal ob aktiv oder nicht (ControlSend kann das "zuletzt verwendete" Fenster verwenden; außerdem sendet es standardmäßig an das oberste Steuerelement).
WinMaximize
WinActivate
return</pre>
<p>Neuer Befehl:</p>
<pre>#HotkeyModifierTimeout 100  <em>; Wert in Millisekunden, Standard 100</em></pre>
<p>Das obige Beispiel ist nur relevant, wenn das Skript keinen Tastatur-Hook installiert hat (Sie können mit dem KeyHistory-Befehl herausfinden, ob Ihr Skript den Hook verwendet). Der Hook behält den Überblick darüber, welche Modifikatortasten (Alt, Strg, Win und Umschalt) der Benutzer physisch gedrückt hält. Zum Beispiel:</p>
<pre>^!a::Send, abcdefg</pre>
<p>Für das obige SEND müssen <kbd>Strg</kbd> und <kbd>Alt</kbd> losgelassen werden, damit die Tasten richtig gesendet werden können. Nach Ausführung von SEND weiß das Programm, sofern der Hook installiert ist, ob es <kbd>Strg</kbd> und <kbd>Alt</kbd> sicher wieder in den gedrückten Zustand versetzen kann. Wenn kein Hook installiert ist und das SEND mehr als HotkeyModifierTimeout Millisekunden nach Beginn der Hotkey-Subroutine endet, werden die Modifikatortasten nicht wiederhergestellt, d.h. Sie müssen sie loslassen und erneut drücken, wenn Sie dieselbe (oder eine andere) Taste erneut modifizieren wollen. Hinweis: Sie können den Wert auf -1 setzen, um die Modifikatoren nie das Zeitlimit überschreiten zu lassen, oder auf 0, um die Modifikatoren immer das Zeitlimit überschreiten zu lassen. Sie können auch sicherstellen, dass der Tastatur-Hook installiert ist, was das obige Beispiel überflüssig macht, indem Sie die Zeile #InstallKeybdHook irgendwo im Skript einfügen. Wenn der Tastatur-Hook nicht installiert ist, kann auch eine Reduzierung der Tastenverzögerung (via SetKeyDelay) auf 0 oder -1 helfen, da SEND dann schneller ausgeführt wird.</p>
<p>Behoben: Manchmal wurde das Warndialogfenster "Another instance of this program already has the keyboard or mouse hook installed" (eine andere Instanz dieses Programms hat den Tastatur- oder Maus-Hook bereits installiert) grundlos angezeigt, wenn der Menüpunkt "Reload This Script" verwendet wird. Die Ursache dafür war scheinbar die Tatsache, dass das Betriebssystem die vorherige Instanz und den Mutex nur langsam aus dem Speicher entlädt. Das Programm zeigt diese Warnung nun nicht mehr an, wenn ein gerade laufendes Skript neu gestartet wird.</p>
<p>Hinzugefügt: Hotkey-Modifikationssymbol $ (z.B. <code>$^c::</code>): Es bewirkt, dass eine alternative (leistungsfähigere) Methode zur Implementierung des Hotkeys verwendet wird. Verwenden Sie dieses Symbol, wenn die Standardmethode nicht richtig funktioniert (z.B. wegen rekursiver Verwendung des Send-Befehls). Technisch gesehen verwendet diese Methode den Tastatur-Hook anstelle von RegisterHotkey(), um den Hotkey zu implementieren.</p>
<p>Behoben: GetKeyState: Alle Tasten funktionieren nun. Zuvor funktionierten Tasten mit Ziffernblock-Äquivalenten, wie <kbd>Entf</kbd> und <kbd>Ende</kbd>, nicht.</p>
<p>Verbessert: GetKeyState unterstützt nun ein optionales drittes Argument, das der Buchstabe T (Status einer umschaltbaren Taste wie <kbd>Feststell</kbd>) oder P (physischer Tastenstatus) sein kann. Wenn das Argument weggelassen wird oder leer ist, wird der logische Status der Taste zurückgegeben. Der logische Status sollte der sein, den das Betriebssystem und die Vordergrundanwendung für diese Taste vermuten, während der physische Status angibt, ob die Tastatur- oder Maustaste physisch unten oder oben ist. Zum Beispiel:</p>
<pre>GetKeyState, Status, CapsLock, T  <em>; Setzt "Status" auf D, wenn FESTSTELL-Taste AN ist, andernfalls auf U.</em></pre>
<p>Derzeit ist der "physische" Status immer derselbe wie der logische Status, wenn keine Hooks installiert sind, weil Windows XP (und wahrscheinlich auch NT/2k, aber möglicherweise nicht Win9x) den folgenden Code nicht richtig zu implementieren scheint. Wenn jemand einen Workaround hat, würde ich ihn gerne hören:</p>
<pre class="no-highlight">#define IsPhysicallyDown(vk) (GetAsyncKeyState(vk) &amp; 0x80000000)</pre>
<p>Der Tastatur-Hook wird installiert, um z.B. links/rechts-Modifikator-spezifische Hotkeys, Platzhalter-Hotkeys, "SetNum/Scroll/CapsLock, AlwaysOn/Off" und das Überschreiben von Explorer-Hotkeys wie <kbd>Win</kbd>+<kbd>E</kbd> zu unterstützen. Der Hook wird nicht automatisch installiert, da er die Systemleistung leicht beeinträchtigt und nicht für die gleichzeitige Verwendung durch mehrere Skripte vorgesehen ist (Sie können die Installation jedoch erzwingen). Um festzustellen, welche Hooks (Maus und Tastatur) installiert sind, weisen Sie einem Hotkey den KeyHistory-Befehl zu.</p>
<p>Durch Hinzufügen der folgenden Zeilen können Sie die bedingungslose Installation von Hooks erzwingen:</p>
<pre>#InstallKeybdHook <em>; Dieser Hook wird benötigt, um die Zuverlässigkeit beim Wiederherstellen von Modifikatoren mit dem Send-Befehl zu maximieren (siehe oben).</em>
#InstallMouseHook <em>; Diesen Hook verwendet man in der Regel nur, wenn man Maustastenereignisse in der KeyHistory sehen möchte, da er automatisch installiert wird, sobald man Maus-Hotkeys verwendet.</em></pre>
<p>Geändert: Send-Befehl: ControlDown/Up wurde in CtrlDown/Up umbenannt, in Übereinstimmung mit AutoIt. Außerdem wurden LCtrl und RCtrl als alternative Tastennamen für LControl/RControl hinzugefügt, die für Hotkeys und Befehle wie Send und GetKeyState verwendet werden können.</p>
<p>Behoben: Send-Befehl: Wenn Modifikatortasten gesendet werden, die Teil der Hotkey-Definition selbst sind, werden diese Modifikatoren nach der Ausführung von Send wiederhergestellt. Dies behebt Probleme, wo man, wenn KeyDelay größer als -1 ist, die Modifikatoren loslassen und erneut drücken muss, damit derselbe Hotkey nach dem ersten Mal erneut ausgelöst wird. Zum Beispiel:</p>
<pre>^+0::Send, {SHIFTDOWN}a{SHIFTUP}</pre>
<p>Vielen Dank an CyberSlug für die Entdeckung dieses Problems. Schauen Sie sich die obigen Abschnitte an, um mehr zu erfahren.</p>
<p>Geändert: ControlSend: <code class="no-highlight">{ASC nnnn}</code>-Elemente werden nun ignoriert, da das Betriebssystem dieses Feature nicht unterstützt, wenn Tastendrücke direkt an ein Fenster oder Steuerelement gesendet werden.</p>
<p>Behoben: Der Send-Befehl sendete manchmal einen falschen Scancode (normalerweise ohne Folgen).</p>
<p>Kleine Änderung: Die Taste-Oben-Hotkey-Aktion eines Modifikators (falls vorhanden) wird nicht ausgelöst, wenn dieser Modifikator zum Modifizieren eines Maustastenklicks verwendet wurde (da z.B. <kbd>Strg</kbd>+Linksklick ein gültiges natives OS-Feature ist, auf das die meisten Benutzer nicht verzichten wollen).</p>
<p>Kleine Änderung: Escapezeichen, die ganz am Ende einer Zeile oder vor einem Leerraumzeichen stehen, werden nun literal (als direkt geschriebener Text) behandelt. Dies sollte mehr wie AutoIt2 sein. Beispiel: <code>var1 = dieses Zeichen ist nun literal --&gt;`</code></p>
<p>Tipp: Kommentarbereiche im C-Stil können verwendet werden, aber die Symbole müssen am Anfang einer Zeile stehen, um erkannt zu werden:</p>
<pre>/*
...
(auskommentierter Bereich)
...
*/</pre>

<h2 id="v0.211">0.211 BETA - 1. Dezember 2003</h2>
<p>Behoben: Der Reload-Befehl und der zugehörige Tray-Menüpunkt funktionieren nun auch mit Skriptdateinamen, die Leerzeichen enthalten.</p>
<p>Hinzugefügt: GetKeyState. Zum Beispiel:</p>
<pre>GetKeyState, AusgabeVar, LButton</pre>
<p>Dieser Befehl setzt <em>AusgabeVar</em> auf U (für up bzw. oben) oder D (für down bzw. unten), oder macht sie leer, wenn der Status aus irgendeinem Grund nicht ermittelt werden konnte. Der Tastenname kann praktisch jede in der Dokumentation aufgelistete Taste sein, einschließlich Maustasten (zumindest unter WinXP und wahrscheinlich auch unter anderen Betriebssystemen).</p>
<p>Hinzugefügt: Ein neuer optionaler Parameter für MouseClick. Wenn dieser Parameter D ist, wird die Taste so lange gedrückt gehalten, bis sie durch einen physischen Klick des Benutzers oder durch eine andere Aktion im Skript losgelassen wird. Wenn dieser Parameter U ist, wird die Taste losgelassen (auch wenn sie vorher nicht unten war, wird trotzdem ein Up-Ereignis gesendet).</p>
<p>Hinzugefügt: Hotkey-Definitionssymbol <code class="no-highlight">~</code> (Tilde), das verwendet werden kann, um anzugeben, dass die native Funktion dieses Hotkeys nicht unterdrückt (vor dem System versteckt) werden soll, wenn der Hotkey ausgelöst wird. Das folgende Beispiel sendet den Maustastenklick an das aktive Fenster, obwohl dies normalerweise nicht der Fall wäre:</p>
<pre>~RButton::Sleep, 1</pre>
<p>Hinweis: Spezielle Hotkeys, die etwas mit Alt-Tab zu tun haben, ignorieren immer diese Einstellung.</p>
<p>Geändert: Mausklickbefehle (MouseClick, LeftClick, etc.): Die Klicks selbst können keine Hotkey-Subroutinen mehr auslösen. Dies verhindert mögliche Endlosschleifen, wenn ein Skript Mausereignisse sendet, die zufällig gültige Hotkeys sind.</p>
<p>Geändert: Die Funktionsweise von Hotkeys, die eine Kombination aus Tastatur und Maus sind, wurde leicht angepasst: Normalerweise wird, wenn die Präfixtaste dieses Paares eine andere Taste modifiziert (auch eine, die kein Hotkey ist), deren Taste-Oben-Aktion nicht ausgelöst (sofern vorhanden). Dies wurde geändert, so dass Maustasten nun die Ausnahme sind. Zum Beispiel:</p>
<pre>Numpad0 &amp; Numpad1::MsgBox, Test1  <em>; Numpad0 ist nun eine Präfixtaste, die vom Tastatur-Hook behandelt wird.</em>
Numpad0::MsgBox, Test2  <em>; Nun ist Numpad0 sowohl Präfix als auch Suffix (Suffix, weil es eine eigene Aktion hat)</em></pre>
<p>Mit der alten Methode wurde, wenn Numpad0 gedrückt und dann eine Maustaste geklickt wurde, die Numpad0-Aktion nicht ausgelöst, wenn Numpad0 losgelassen wurde, wie es normalerweise der Fall wäre. Mit der neuen Methode wird sie ausgelöst, aber nur, wenn die Kombination aus Numpad0 und dieser Maustaste kein Hotkey ist (da standardmäßig die Tasten-/Mausereignisse, die einen Hotkey bilden, immer vor dem System versteckt werden, es sei denn, das oben beschriebene Symbol <code class="no-highlight">~</code> wird verwendet).</p>

<h2 id="v0.210">0.210 BETA - 19. November 2003</h2>
<p>Hinzugefügt: Befehl Suspend. Verhält sich wie der gleichnamige Tray-Menüpunkt. Der erste Parameter kann entweder leer sein (um auf den entgegengesetzten Zustand zu schalten), ON (um Hotkeys zu suspendieren) oder OFF (um fortzufahren). Hinweis: Alle Hotkeys, deren Subroutine in der ersten Zeile den Suspend-Befehl stehen hat, werden nicht suspendiert. Auf diese Weise können solche Hotkeys die Suspension deaktivieren.</p>

<h2 id="v0.209">0.209 BETA - 19. November 2003</h2>
<p>Verbessert: Run und RunWait versuchen nun CreateProcess() (die AutoIt-Methode), wenn ShellExecute() (die normale Methode) nicht funktioniert. Dies sollte die Dinge flexibler machen und mehr wie AutoIt sein. Hinweis: Intern wird immer zuerst die ShellExecute()-Methode versucht, weil ich glaube, dass sie mehr Fähigkeiten hat, wie z.B. die Möglichkeit, Dokumente auszuführen, URLs zu starten und Systemverben wie "properties" (siehe unten) auszuführen.</p>
<p>Verbessert: Run und RunWait unterstützen nun die folgenden Systemverben: properties, edit, print, find, explore, open und print. Zum Beispiel:</p>
<pre>Run, properties c:\autoexec.bat  <em>; Eigenschaftenfenster für diese Datei öffnen.</em>
Run, edit %A_SCRIPTFULLPATH%  <em>; Zugehörige "Bearbeiten"-Aktion für diese Datei ausführen (falls vorhanden).</em></pre>
<p>Hinzugefügt: Direktive #Delimiter. Damit kann das standardmäßig verwendete Trennzeichen (Komma) geändert werden. Mit diesem Trennzeichen werden Befehle und Parameter voneinander getrennt. Hinweis: Leerzeichen, Tabulatorzeichen (da einige Editoren Tabulatorzeichen mit Leerzeichen ersetzen) oder Zeichen, die bereits für einen anderen speziellen Zweck verwendet werden, sind nicht erlaubt. Zum Beispiel:</p>
<pre>#Delimiter . <em>; Als Trennzeichen den Punkt statt das Komma verwenden.</em></pre>
<p>Behoben (erneut): Tray-Menüpunkt "Edit This Script" funktionierte immer noch nicht richtig.</p>
<p>Hinzugefügt: Tray-Menüpunkt "Suspend". Diese Funktion verhindert den Start neuer Hotkey-Subroutinen (Alt-Tab-Hotkeys funktionieren jedoch weiterhin). Mit anderen Worten, das Drücken eines Hotkeys hat keine Wirkung, er wird vom System nicht einmal gesehen. Wäre z.B. <kbd>Strg</kbd>+<kbd>C</kbd> ein Hotkey, hätte er keine Wirkung und würde nicht einmal das normale Kopierverhalten zeigen. Hinweis: "Suspend" wird keine bereits laufenden Subroutinen anhalten.</p>

<h2 id="v0.208">0.208 BETA - 17. November 2003</h2>
<p><strong>FEHLERBEHEBUNGEN:</strong></p>
<p>Tray-Menüpunkt "Edit This Script" behoben.</p>
<p>Kompatibilitätsprüfung für AutoIt2 behoben: Einige Standardverhalten von AutoIt2 wurden nicht verwendet.</p>
<p>WinWait-Befehle behoben: <em>AusnahmeText</em> und <em>AusnahmeTitel</em> wurden nicht korrekt behandelt.</p>
<p>Debug-Protokollierung ausgeschaltet: Ältere Versionen erzeugten ggf. eine kleine Textdatei "C:\AutoHotkey SetForegroundWindowEx.txt", die Sie nach dem Upgrade auf diese Version bedenkenlos löschen können.</p>
<p>StringReplace wurde geändert, so dass es keine Leerzeichen mehr vom Ergebnis trimmt, was dem Verhalten von AutoIt2 entspricht.</p>
<p><strong>ÄNDERUNGEN:</strong></p>
<p>Das VC++-Projekt ist nun in der Quellcode-ZIP-Datei enthalten.</p>
<p>Die Standardeinstellung für AutoIt2-Skripte (.aut) wurde auf <code>DetectHiddenWindows, Off</code> geändert, so dass das Verhalten eher dem von AutoIt2 entspricht. Dies ist nun die Standardeinstellung für alle Skripte. Soweit ich das beurteilen kann, erkennt AutoIt3 im Gegensatz zu AutoIt2 versteckte Fenster immer. Da dies manchmal zu Problemen beim Vergleich und der Unterscheidung von Fenstern führen kann, scheint die AutoIt2-Methode die bessere Standardeinstellung zu sein.</p>
<p>Der SetTitleMatchMode-Befehl wurde geändert. Zusätzlich zu den traditionellen Modi 1 und 2 unterstützt der Befehl nun auch die Wörter <em>Fast</em> und <em>Slow</em> (z.B. <code>SetTitleMatchMode, Slow</code>). Die Standardeinstellung ist <em>Fast</em>, die von AutoIt2 verwendet wird, während AutoIt3 den langsamen Modus verwendet, um mehr Text in bestimmten Fenstern "sehen" zu können. Der schnelle Modus ist wesentlich performanter, was sich positiv auf die Geschwindigkeit von Skripten auswirken kann, die viele fensterspezifische Befehle ausführen. Der langsame Modus kann verwendet werden, um volle Kompatibilität mit AutoIt3 und dessen Window Spy zu garantieren (Window Spy ist im Lieferumfang von AutoHotkey enthalten). Ich denke darüber nach, Window Spy so zu modifizieren, dass es anzeigt, welche Texte eines Fensters nur im "langsamen" Modus verfügbar sind.</p>
<p>Zuverlässigkeit beim Auffinden von Fenstern: Der "langsame" Titelübereinstimmungsmodus wurde zuverlässiger gemacht, indem das Zeitlimit auf 5 Sekunden erhöht wurde, da einige Fenster beim Prüfen ihrer Meldungswarteschlangen sehr träge sind (z.B. bei langen Festplattenoperationen) und daher ihren Fenstertext nur sehr langsam ausgeben.</p>
<p>In dieser Version können standardmäßig mehrere Instanzen desselben Skripts gestartet werden. Wenn Sie ein Skript auf eine einzige Instanz beschränken möchten, verwenden Sie die unten beschriebene #SingleInstance-Direktive.</p>
<p><strong>NEUERUNGEN:</strong></p>
<p>DriveSpaceFree: Ruft den freien Speicherplatz eines Laufwerks ab (in Megabyte). Zum Beispiel: <code>DriveSpaceFree, AusgabeVar, C:\</code></p>
<p><code class="no-highlight">SetAutoTrim, On/Off</code> (standardmäßig On): Bestimmt, ob beim Zuweisen eines Wertes an eine Variable automatisch alle Leerraumzeichen am Anfang und Ende der Zeichenkette entfernt werden. In diesem Fall sind Leerraumzeichen nur Leer- und Tabulatorzeichen, KEINE Zeilenumbrüche (Wagenrückläufe). Daher glaube ich, dass die Einstellung "On" in dieser Hinsicht das gleiche Verhalten wie AutoIt2 bewirkt.</p>
<p>StringGetPos unterstützt einen neuen optionalen letzten Parameter. Wenn dieser Parameter der Buchstabe R ist, erfolgt die Suche von rechts nach links, d.h. es wird nicht das erste, sondern das letzte Vorkommen gefunden.</p>
<p>ControlSetText: Basiert auf der gleichnamigen Funktion von AutoIt3. Zum Beispiel: <code>ControlSetText, SteuerelementName, NeuerText, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</code></p>
<p>Beachten Sie, dass einige oder alle der letzten vier Parameter weggelassen werden können. Wenn alle weggelassen werden, wird das zuletzt gefundene Fenster von IfWinExist, IfWinNotExist oder WinWait verwendet. Dieses Verhalten gilt auch für fast alle anderen fensterspezifischen Befehle.</p>
<p>#AllowSameLineComments: Um die Kompatibilität mit AutoIt2 zu erhöhen, dürfen Skripte, die auf .aut enden, normalerweise keine Kommentare in derselben Zeile enthalten (z.B. <code>Run, notepad <em>; Kommentar</em></code>). Fügen Sie die Zeile #AllowSameLineComments am Anfang Ihres Skripts ein, um dies zu erlauben.</p>
<p>#SingleInstance: Diese Direktive irgendwo im Skript verhindert, dass neue Instanzen dieses Skripts gestartet werden, wenn bereits eine Instanz läuft. Stattdessen werden Sie gefragt, ob Sie die vorhandene Instanz schließen wollen. Hinweis: Für diese Direktive muss weder "On" noch "Off" verwendet werden.</p>
<p>#CommentFlag: Ermöglicht die Änderung des standardmäßig verwendeten Kommentar-Flags (Semikolon) in eine Zeichenkette Ihrer Wahl. Die Zeichenkette kann bis zu 15 Zeichen lang sein. Zum Beispiel: <code>#CommentFlag // <em>; C++-Kommentierung.</em></code></p>
<p>#EscapeChar: Das Escapezeichen ist normalerweise Akzent (<code class="no-highlight">`</code>), aber mit dieser Direktive können Sie es in das Escapezeichen von AutoIt2 (umgekehrter Schrägstrich) oder ein anderes Zeichen Ihrer Wahl ändern. Beachten Sie, dass Skripte, die auf .aut enden, standardmäßig den umgekehrten Schrägstrich als Escapezeichen verwenden.</p>
<p>#DerefChar: Das Dereferenzzeichen ist normalerweise <code>%</code> (z.B. <code>Sleep, %SleepTime%</code>). Mit dieser Direktive können Sie es in ein anderes Zeichen ändern.</p>
<p><strong>TIPPS</strong></p>
<p>Das erste Komma kann bei jedem Befehl weggelassen werden, z.B. <code>MsgBox Text des Mitteilungsfensters (Einzelparametermodus)</code>.</p>
<p>Sie können die <kbd>Feststell</kbd>-Taste als neuen "Modifikator" verwenden, ähnlich wie <kbd>Win</kbd>, ohne ihre native Funktion zu ändern (derzeit nur in WinNT/2k/XP möglich). Zum Beispiel:</p>
<pre>CapsLock &amp; A::run, notepad
CapsLock &amp; S::run, calc</pre>

<h2 id="v0.207">0.207 BETA - 12. November 2003</h2>
<p>Behoben: StringMid ist nun nicht mehr in der Lage, über die Länge der Eingabevariable hinaus zu lesen.</p>
<p>Das Automatische-Wiederherstellen-bei-Wiederaufnahme-Feature (Vordergrundfenster wiederherstellen, mit dem ein suspendierter Thread gearbeitet hat) wurde deaktiviert, da es wahrscheinlich mehr schadet als nützt.</p>

<h2 id="v0.206">0.206 BETA - 11. November 2003</h2>
<p>Behoben: Skripte blieben zufällig hängen (schliefen auf unbestimmte Zeit): Die Ursache dafür war, dass der Haupt-Timer des Threads beendet wurde, obwohl dies nicht der Fall sein sollte.</p>
<p>Behoben: WinWait-Befehle verhalten sich nun wie erwartet, wenn eine neue Hotkey-Subroutine gestartet wird, während der Befehl auf den Ablauf des Zeitlimits wartet: Die neue Subroutine überschrieb einen Puffer, der noch von der alten Subroutine benötigt wurde.</p>
<p>Behoben: Das Tray-Menü verhält sich nicht mehr seltsam, wenn ein modales Dialogfenster, wie z.B. MsgBox oder InputBox, auf dem Bildschirm angezeigt wird.</p>
<p>Behoben: Der REPEAT-Befehl verursacht keine Endlosschleife mehr, wenn der erste Parameter eine dereferenzierte Variable statt einer direkt geschriebenen Zahl ist.</p>

<h2 id="v0.205">0.205 BETA - 10. November 2003</h2>
<p>Erstveröffentlichung.</p>
</body>
</html>
