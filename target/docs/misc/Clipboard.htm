<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Clipboard / ClipboardAll - Definition &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Clipboard und ClipboardAll sind interne Variablen, die den aktuellen Inhalt der Windows-Zwischenablage widerspiegeln. ClipboardAll enthält alles, was sich in der Zwischenablage befindet, wie Bilder und Formatierungen." />
<meta name="ahk:equiv-v2" content="lib/A_Clipboard.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>

<body>
<h1>Clipboard / ClipboardAll</h1>

<p><em>Clipboard</em> ist eine interne <a href="../Variables.htm">Variable</a>, die den aktuellen Inhalt der Windows-Zwischenablage enthält, sofern dieser als Text ausgegeben werden kann. <em><a href="#ClipboardAll">ClipboardAll</a></em> enthält dagegen alles, was sich in der Zwischenablage befindet, also auch Bilder und Formatierungen.</p>
<p><span class="ver">[v1.1.35+]</span>: <code>A_Clipboard</code> ist ein Alias von <code>Clipboard</code>.</p>
<p id="CopiedFiles">Jede Textzeile in <em>Clipboard</em> endet normalerweise mit einem Wagenrücklauf-Zeilenvorschub-Paar (<code class="no-highlight">`r`n</code>). Dateien (die z.B. mit <kbd>Strg</kbd>+<kbd>C</kbd> kopiert wurden) werden als Text betrachtet: Jedes Mal, wenn auf <em>Clipboard</em> zugegriffen wird, werden sie automatisch in ihre Dateinamen umgewandelt (mit vollständigem Pfad). Um die Dateien einzeln zu durchlaufen, gehen Sie wie folgt vor:</p>
<pre><a href="../lib/LoopParse.htm">Loop, parse</a>, clipboard, `n, `r
{
    MsgBox, 4, , Datei Nr. %A_Index% ist %A_LoopField%.`n`nWeiter?
    IfMsgBox, No, break
}</pre>
<p>Mit dem <a href="../lib/Sort.htm">Sort</a>-Befehl können die Dateinamen alphabetisch sortiert werden. Um die Dateinamen aus der Zwischenablage in eine Datei zu schreiben, verwenden Sie <code><a href="../lib/FileAppend.htm">FileAppend</a>, %clipboard%`r`n, C:\Meine Datei.txt</code>. Mit <a href="../lib/_ClipboardTimeout.htm">#ClipboardTimeout</a> können Sie festlegen, wie lange das Skript versuchen soll, die Zwischenablage zu öffnen (z.B. wenn die Zwischenablage von einer anderen Anwendung blockiert wird).</p>
<strong>Einfache Beispiele:</strong>
<pre>clipboard := "mein Text"   <em>; Zwischenablage mit neuem Inhalt ersetzen.</em>
clipboard := ""   <em>; Zwischenablage leeren.</em>
clipboard := clipboard   <em>; Kopierte Dateien, HTML oder andere formatierte Texte in Klartext umwandeln.</em>
clipboard := clipboard " angefügter Text."   <em>; Etwas Text an die Zwischenablage anfügen.</em>
StringReplace, clipboard, clipboard, ABC, DEF, All   <em>; Alle Vorkommen von ABC mit DEF ersetzen (inkl. Umwandlung der Zwischenablage in Klartext).</em></pre>

<p><strong>Mit ClipWait die Zuverlässigkeit des Skripts erhöhen:</strong></p>
<pre>clipboard := ""  <em>; Für ClipWait leer machen.</em>
Send ^c
<a href="../lib/ClipWait.htm">ClipWait</a>  <em>; Warten, bis die Zwischenablage Text enthält.</em>
MsgBox STRG+C hat den folgenden Inhalt in die Zwischenablage kopiert:`n`n%clipboard%</pre>
<h2 id="ClipboardAll">ClipboardAll <span class="headnote">(Alles in der Zwischenablage speichern und wiederherstellen)</span></h2>
<p><em>ClipboardAll</em> enthält alles, was sich in der Zwischenablage befindet, wie Bilder und Formatierungen. Diese Variable wird häufig verwendet, um den aktuellen Inhalt der Zwischenablage zu sichern, damit die Zwischenablage vorübergehend für eine andere Operation verwendet werden kann. Nach Abschluss der Operation kann der ursprüngliche Inhalt der Zwischenablage wie folgt wiederhergestellt werden:</p>
<pre>ClipSicherung := ClipboardAll   <em>; Zwischenablage in eine beliebige Variable speichern.
; ... hier die Zwischenablage für etwas anderes verwenden, z.B. Unicode-Text mit <a href="../lib/Transform.htm#Unicode">Transform Unicode</a> einfügen ...</em>
Clipboard := ClipSicherung   <em>; Originale Zwischenablage wiederherstellen. Beachten Sie die Verwendung von <i>Clipboard</i> (nicht <i>ClipboardAll</i>).</em>
ClipSicherung := ""   <em>; Speicher freigeben, falls die Zwischenablage sehr groß war.</em></pre>
<p><em>ClipboardAll</em> kann auch in eine Datei gespeichert werden (in diesem Modus überschreibt FileAppend immer die vorhandene Datei):</p>
<pre><a href="../lib/FileAppend.htm">FileAppend</a>, %ClipboardAll%, C:\Firmenlogo.clip <em>; Die Dateiendung ist egal.</em></pre>
<p>Um die Datei später wieder in die Zwischenablage (oder in eine Variable) zu laden, gehen Sie wie folgt vor:</p>
<pre><a href="../lib/FileRead.htm">FileRead</a>, Clipboard, <strong>*c</strong> C:\Firmenlogo.clip <em>; Beachten Sie die Verwendung von *c, das vor dem Dateinamen stehen muss.</em></pre>

<h3 id="limitations">Einschränkungen</h3>
<p>Es gibt einige Einschränkungen bei der direkten Verwendung von <em>ClipboardAll</em>:</p>
<ul>
  <li><em>ClipboardAll</em> ist leer, wenn es auf andere Weise als oben beschrieben verwendet wird.</li>
  <li><em>ClipboardAll</em> wird nicht in <a href="../Variables.htm#comma">kommagetrennten Ausdrücken</a> unterstützt, d.h. die Zuweisung sollte auf einer separaten Zeile erfolgen, wie z.B. <code>ClipSicherung := ClipboardAll</code>.</li>
</ul>
<p>Eine Variable, die binäre Daten aus der Zwischenablage enthält, kann wie folgt verwendet werden:</p>
<ul>
  <li>Speichern Sie die Daten wieder in die Zwischenablage, indem Sie sie der <em>Clipboard</em>-Variable zuweisen, wie oben gezeigt.</li>
  <li>Verwenden Sie <a href="../lib/FileAppend.htm">FileAppend</a> wie oben gezeigt, um die Daten der Zwischenablage in eine Datei zu schreiben.</li>
  <li>Kopieren Sie wie folgt die Daten in eine andere Variable (oder <a href="../Functions.htm#ByRef">ByRef</a>-Parameter): <code>ClipSicherung2 := ClipSicherung</code>.</li>
  <li>Übergeben Sie die Daten an eine <a href="../Functions.htm">benutzerdefinierte Funktion</a>, entweder <a href="../Functions.htm#ByRef">via Referenz</a> oder in <span class="ver">[v1.0.46+]</span> via Wert.</li>
  <li>Ermitteln Sie die Größe der Daten, indem Sie sie an <a href="../lib/StrLen.htm">StrLen()</a> übergeben, wie <a href="#len">unten</a> beschrieben.</li>
  <li>Vergleichen Sie die zwei Variablen mit einer altmodischen If-Anweisung, wie <a href="#compare">unten</a> gezeigt.</li>
  <li>Verwenden Sie die <a href="../Variables.htm#amp">Adresse</a> der Variable oder übergeben Sie die Variable selbst an <a href="../lib/NumGet.htm">NumGet</a>, um die Daten zu untersuchen.</li>
</ul>
<p>Es gibt weitere Einschränkungen:</p>
<ul>
  <li>Wenn einer Variable binäre Daten aus der Zwischenablage zugewiesen werden, wird die Variable mit einem versteckten Attribut gekennzeichnet. Dieses Attribut kann nur gesetzt werden, wenn <a href="../lib/FileRead.htm">FileRead</a> mit der Option <code class="no-highlight">*c</code> verwendet wird, oder durch direkte Zuweisung von <em>ClipboardAll</em> (wie oben gezeigt) oder einer anderen Variable, die dieses Attribut hat.</li>
  <li>Wenn binäre Daten aus der Zwischenablage anders als oben beschrieben verwendet werden, werden sie in der Regel als Text interpretiert und am ersten Nullzeichen abgeschnitten, das normalerweise am Anfang der Daten steht. Dies geschieht zum Beispiel, wenn versucht wird, die Daten von einer Funktion zurückzugeben oder sie einer Eigenschaft oder einem Array-Element zuzuweisen.</li>
  <li>Das Clipboard-Attribut wird entfernt, wenn die Variable freigegeben oder ihr ein anderer Wert zugewiesen wird, selbst mit indirekten Mitteln wie <a href="../lib/StrReplace.htm">StrReplace()</a> oder <a href="../lib/StringReplace.htm">StringReplace</a>.</li>
  <li>Variablen ohne Clipboard-Attribut werden als Text behandelt, wenn sie der <em>Clipboard</em>-Variable zugewiesen oder an FileAppend übergeben werden, sogar wenn die Daten im korrekten Binärformat vorliegen.</li>
</ul>

<h3 id="Notes">Hinweise</h3>
<p>Wenn <em>ClipboardAll</em> nicht in der Lage ist, bestimmte Datenobjekte (Formate) aus der Zwischenablage abzurufen, werden diese übersprungen und der Rest wird gespeichert.</p>
<p>Mit <a href="../lib/ClipWait.htm">ClipWait</a> kann festgestellt werden, wann die Zwischenablage Daten enthält (optional auch Nicht-Text-Daten).</p>
<p id="len"><a href="../lib/StrLen.htm">StrLen()</a> kann verwendet werden, um die Gesamtgröße einer Variable zu ermitteln, der <em>ClipboardAll</em> zugewiesen wurde. Um die Größe (in Bytes) in den Unicode-Versionen von AutoHotkey abzurufen, muss die Länge mit 2 multipliziert werden. <a href="../Variables.htm#IsUnicode">A_IsUnicode</a> kann wie folgt verwendet werden, um ANSI- und Unicode-Versionen zu unterstützen: <code>Größe := StrLen(ClipSicherung) * (A_IsUnicode ? 2 : 1)</code>.</p>
<p id="compare">Variablen, denen <em>ClipboardAll</em> zugewiesen wurde, können mittels <a href="../lib/IfEqual.htm">If[Not]Equal</a>, <code>If Var1 = %Var2%</code> oder <code>If Var1 != %Var2%</code> miteinander verglichen werden (aber nicht direkt mit <em>ClipboardAll</em>). Im folgenden Beispiel wird zunächst die Länge jeder Variable überprüft. Wenn das nicht für die Feststellung ausreicht, wird der Inhalt verglichen:</p>
<pre>if ClipSicherung1 != %ClipSicherung2%   <em>; <u>Muss</u> eine altmodische IF-Anweisung sein, kein Ausdruck.</em>
    MsgBox Die beiden gesicherten Zwischenablagen sind unterschiedlich.</pre>
<p>Das Speichern von <em>ClipboardAll</em> in eine Variable wird nicht durch das Speicherlimit von <a href="../lib/_MaxMem.htm">#MaxMem</a> beeinflusst.</p>
<p>Eine gespeicherte Zwischenablagedatei besteht intern aus drei Elementen: Die ersten 4 Bytes enthalten den Formattyp, die nächsten 4 Bytes (wenn 32-Bit) oder 8 Bytes (wenn 64-Bit) die Datenblockgröße und der Rest den Datenblock des Formats. Wenn die Zwischenablage mehr als ein Format enthält (was fast immer der Fall ist), werden diese drei Elemente wiederholt, bis alle Formate enthalten sind. Die Datei endet mit einem vier Byte großen Formattyp von 0.</p>
<p>Bekannte Einschränkung: Wenn <em>ClipboardAll</em> abgerufen wird, während sich Zellen aus Microsoft Excel 2002/2003 (und evtl. anderen Versionen) in der Zwischenablage befinden, zeigt Excel möglicherweise ein "Keine Drucker"-Dialogfenster an. In neueren Versionen (z.B. 2007) ist diese Einschränkung nicht mehr reproduzierbar.</p>
<p>Zwischenablageprogramme, die mit AutoHotkey programmiert wurden:</p>
<ul>
  <li>Deluxe Clipboard: Erlaubt eine unbegrenzte Anzahl von privaten, benannten Zwischenablagen, um einen markierten Text zu kopieren, auszuschneiden, einzufügen, anzuhängen oder auszuschneiden und anzuhängen. <a href="https://www.autohotkey.com/board/topic/2515-">www.autohotkey.com/board/topic/2515-</a></li>
  <li>ClipStep: Mehrere Zwischenablagen nur mit <kbd>Strg</kbd>+<kbd>X</kbd>/<kbd>C</kbd>/<kbd>V</kbd> kontrollieren. <a href="https://www.autohotkey.com/board/topic/4567-">www.autohotkey.com/board/topic/4567-</a></li>
</ul>

<h2 id="OnClipboardChange">OnClipboardChange</h2>
<p>Skripte können mit <a href="../lib/OnClipboardChange.htm">OnClipboardChange</a> Änderungen in der Zwischenablage erkennen.</p>

</body>
</html>
