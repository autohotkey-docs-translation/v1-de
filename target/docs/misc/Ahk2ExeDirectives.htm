<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Skriptcompilerdirektiven | AutoHotkey v1</title>
<meta name="description" content="Skriptcompilerdirektiven ermöglichen es dem Benutzer, genau anzugeben, wie ein Skript mit Ahk2Exe kompiliert werden soll." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>
<h1>Skriptcompilerdirektiven <span class="ver">[v1.1.33+]</span></h1>
<h2 id="toc">Inhaltsverzeichnis</h2>
<ul>
  <li><a href="#Intro1">Einführung</a></li>
  <li><a href="#IgnoreKeep">Direktiven für das Skriptverhalten</a>:</li>
  <ul>
    <li><a href="#IgnoreKeep">IgnoreBegin</a></li>
    <li><a href="#IgnoreKeep">IgnoreEnd</a></li>
    <li><a href="#IgnoreKeep">IgnoreKeep</a></li>
  </ul>
  <li><a href="#Directives">Direktiven für die Metadaten der EXE-Datei</a>:</li>
  <ul>
    <li><a href="#Intro2">Einführung</a></li>
    <li><a href="#AddResource">AddResource</a>: Fügt eine Ressource zur EXE-Datei hinzu.</li>
    <li><a href="#Bin">Bin / Base</a> <span class="ver">[v1.1.33.10+]</span>: Gibt die zu verwendende Basisversion von AutoHotkey an.</li>
    <li><a href="#ConsoleApp">ConsoleApp</a>: Setzt den Konsolenmodus.</li>
    <li><a href="#Cont">Cont</a>: Gibt eine Fortsetzungszeile für eine Direktive an.</li>
    <li><a href="#Debug">Debug</a>: Zeigt Debugging-Text an.</li>
    <li><a href="#ExeName">ExeName</a>: Gibt den Speicherort und Namen der EXE-Datei an.</li>
    <li><a href="#Let">Let</a>: Setzt eine Benutzervariable.</li>
    <li><a href="#Nop">Nop</a> <span class="ver">[v1.1.34.03c+]</span>: Bewirkt nichts.</li>
    <li><a href="#Obey">Obey</a>: Führt einen Befehl oder Ausdruck aus.</li>
    <li><a href="#PostExec">PostExec</a>: Führt ein Programm nach der Kompilierung aus.</li>
    <li><a href="#ResourceID">ResourceID</a> <span class="ver">[v1.1.34+]</span>: Weist dem Hauptskript eine untypische Ressourcen-ID zu.</li>
    <li><a href="#SetMainIcon">SetMainIcon</a>: Setzt das Hauptsymbol.</li>
    <li><a href="#SetProp">Set<i>Eigenschaft</i></a>: Setzt eine Eigenschaft der EXE-Datei.</li>
    <li><a href="#Set">Set</a>: Setzt sonstige Eigenschaften.</li>
    <li><a href="#UpdateManifest">UpdateManifest</a>: Ändert das Manifest der EXE-Datei.</li>
    <li><a href="#UseResourceLang">UseResourceLang</a>: Ändert die Ressourcensprache.</li>
  </ul>
</ul>
<h2 id="Intro1">Einführung</h2>
<p>Skriptcompilerdirektiven ermöglichen es dem Benutzer, genau festzulegen, wie ein Skript mit <a href="../Scripts.htm#ahk2exe">Ahk2Exe</a> kompiliert werden soll. Einige der Features sind:</p>
<ul>
  <li>Versionsinformationen ändern (z.B. Name, Beschreibung, Version...)</li>
  <li>Ressourcen zum kompilierten Skript hinzufügen</li>
  <li>Verschiedene Aspekte der Kompilierung verfeinern</li>
  <li>Codeabschnitte aus dem kompilierten Skript entfernen und umgekehrt</li>
</ul>
<p>Der Skriptcompiler sucht nach speziellen Kommentaren im Quellskript und erkennt diese als Compilerdirektiven. Alle Compilerdirektiven werden durch die Zeichenkette <code class="no-highlight">@Ahk2Exe-</code> mit vorangestellter Kommentarmarkierung (standardmäßig <code class="no-highlight">;</code>) eingeleitet.</p>

<h2 id="IgnoreKeep">Direktiven für das Skriptverhalten</h2>
<p>Es ist möglich, Codeabschnitte aus dem kompilierten Skript zu entfernen. Setzen Sie die folgenden Direktiven vor und nach dem betroffenen Codeabschnitt:</p>
<pre class="NoIndent">MsgBox Diese Meldung erscheint sowohl im kompilierten als auch im unkompilierten Skript
<em>;@Ahk2Exe-IgnoreBegin</em>
MsgBox Diese Meldung erscheint NICHT im kompilierten Skript
<em>;@Ahk2Exe-IgnoreEnd</em>
MsgBox Diese Meldung erscheint sowohl im kompilierten als auch im unkompilierten Skript
</pre>
<p>Der umgekehrte Weg ist auch möglich, d.h. es kann ein Codeabschnitt markiert werden, der nur im kompilierten Skript ausgeführt werden soll:</p>
<pre class="NoIndent"><em>/*@Ahk2Exe-Keep
MsgBox Diese Meldung erscheint nur im kompilierten Skript
*/</em>
MsgBox Diese Meldung erscheint sowohl im kompilierten als auch im unkompilierten Skript
</pre>
<p>Dies hat gegenüber <a href="../Variables.htm#IsCompiled">A_IsCompiled</a> den Vorteil, dass der Code während der Präprozessierung vollständig aus dem kompilierten Skript entfernt und folglich dessen Größe verringert wird. Umgekehrt gilt dasselbe: <a href="../Variables.htm#IsCompiled">A_IsCompiled</a> muss nicht geprüft werden, da sich der Code im unkompilierten Skript innerhalb eines Kommentarblocks befindet.</p>

<h2 id="Directives">Direktiven für die Metadaten der EXE-Datei</h2>
<h3 id="Intro2">Einführung</h3>
<p>In den Parametern dieser Direktiven werden die folgenden Escapesequenzen unterstützt: <code class="no-highlight">``</code>, <code class="no-highlight">`,</code>, <code class="no-highlight">`n</code>, <code class="no-highlight">`r</code> und <code class="no-highlight">`t</code>. Kommas müssen <em>immer</em> mit einem Escapezeichen versehen werden, unabhängig von der Position des Parameters. "Integer" bezieht sich auf vorzeichenlose 16-Bit-Integer (0..0xFFFF).</p>

<p>Falls erforderlich, können Direktivenparameter auf die folgenden internen Variablen verweisen, wobei der Variablenname mit <code>%</code>-Zeichen umschlossen werden muss:</p>
<p id="group1"><strong>Gruppe 1:</strong> <a href="../Variables.htm#AhkPath">A_AhkPath</a>, <a href="../Variables.htm#AppData">A_AppData</a>, <a href="../Variables.htm#AppDataCommon">A_AppDataCommon</a>, <a href="../Variables.htm#ComputerName">A_ComputerName</a>, <a href="../Variables.htm#ComSpec">A_ComSpec</a>, <a href="../Variables.htm#Desktop">A_Desktop</a>, <a href="../Variables.htm#DesktopCommon">A_DesktopCommon</a>, <a href="../Variables.htm#MyDocuments">A_MyDocuments</a>, <a href="../Variables.htm#ProgramFiles">A_ProgramFiles</a>, <a href="../Variables.htm#Programs">A_Programs</a>, <a href="../Variables.htm#ProgramsCommon">A_ProgramsCommon</a>, <a href="../Variables.htm#ScriptDir">A_ScriptDir</a>, <a href="../Variables.htm#ScriptFullPath">A_ScriptFullPath</a>, <a href="../Variables.htm#ScriptName">A_ScriptName</a>, <a href="../Variables.htm#Space">A_Space</a>, <a href="../Variables.htm#StartMenu">A_StartMenu</a>, <a href="../Variables.htm#StartMenuCommon">A_StartMenuCommon</a>, <a href="../Variables.htm#Startup">A_Startup</a>, <a href="../Variables.htm#StartupCommon">A_StartupCommon</a>, <a href="../Variables.htm#Tab">A_Tab</a>, <a href="../Variables.htm#Temp">A_Temp</a>, <a href="../Variables.htm#UserName">A_UserName</a>, <a href="../Variables.htm#WinDir">A_WinDir</a>.</p>

<p><strong>Gruppe 2:</strong> <a href="../Variables.htm#AhkVersion">A_AhkVersion</a>, <a href="../Variables.htm#IsCompiled">A_IsCompiled</a>, <a href="../Variables.htm#IsUnicode">A_IsUnicode</a>, <a href="../Variables.htm#PtrSize">A_PtrSize</a>.</p>

<p id="WorkFileName">Zusätzlich zu diesen Variablennamen gibt es noch die Spezialvariable <strong>A_WorkFileName</strong>, die den temporären Namen der gerade verwendeten EXE-Datei enthält. Diese Variable kann verwendet werden, um den Dateinamen als Parameter an eine <a href="#PostExec">PostExec</a>-Direktive zu übergeben, die auf die erzeugte EXE-Datei zugreifen muss.</p>

<p id="BasePath"> <span class="ver">[v1.1.34.04b+]</span> Die Spezialvariable <strong>A_BasePath</strong> enthält den vollständigen Pfad und Namen der ausgewählten Basisdatei.</p>

<p id="PriorLine">Weiterhin gibt es die Spezialvariable <strong>A_PriorLine</strong>, die die Quellcodezeile enthält, die unmittelbar vor der aktuellen Compilerdirektive steht. Dazwischenliegende Leerzeilen, Kommentare und Compilerdirektiven werden ignoriert. Mit dieser Variable können konstante Informationen aus dem Quelltext des Skripts extrahiert werden, um sie später in den Compilerdirektiven zu verwenden. Zum Beispiel kann damit auf die Versionsnummer des Skripts zugegriffen werden, die häufig geändert wird. Diese Art des Zugriffs hat den Vorteil, dass die Versionsnummer nur einmal im Quellcode geändert werden muss – die Änderung wird dann an die entsprechende Direktive weitergeleitet. (Weitere Informationen finden Sie im RegEx-Beispiel unten.)</p>

<p>Darüber hinaus können spezielle Benutzervariablen im Format <code class="no-highlight">U_<i>Name</i></code> mit den unten beschriebenen <a href="#Let">Let</a>- und <a href="#Obey">Obey</a>-Direktiven erstellt werden.</p>

<p>Sämtliche Variablen stehen nicht nur für Direktivenparameter zur Verfügung, sondern können auch von jeder RT_MENU-, RT_DIALOG-, RT_STRING-, RT_ACCELERATORS-, RT_HTML- und RT_MANIFEST-Datei aus abgerufen werden, die der <a href="#AddResource">AddResource</a>-Direktive (siehe unten) übergeben wurde.</p>

<p>Falls erforderlich, kann der Rückgabewert der obigen Variablen manipuliert werden, indem am Ende des Namens der internen Variable, vor dem abschließenden <code>%</code>, bis zu 2 Parameter (genannt p2 und p3) eingefügt werden, jeweils getrennt durch ein Tildezeichen (<code>~</code>). Die Parameter p2 und p3 werden als Literale im zweiten und dritten Parameter einer <a href="../lib/RegExReplace.htm">RegExReplace</a>-Funktion verwendet, um den Rückgabewert zu manipulieren. (Siehe <a href="RegEx-QuickRef.htm">RegEx-Kurzübersicht</a>.) Beachten Sie, dass p3 optional ist.</p>

<p>Um ein Tildezeichen als Teil des Textes in p2 oder p3 einzufügen, setzen Sie ein umgekehrtes Häkchen davor, also <code class="no-highlight">`~</code>. Um ein umgekehrtes Häkchen als Teil des Textes in p2 oder p3 einzufügen, verdoppeln Sie es, also <code class="no-highlight">``</code>.</p>

<strong>RegEx-Beispiele:</strong>
<ul>
  <li>
    <pre class="NoIndent no-highlight">%A_ScriptName~\.[^\.]+$~.exe%</pre>
    <p>Dies ersetzt die Dateiendung des aktuellen Skriptnamens (inklusive Punkt) mit <code class="no-highlight">.exe</code>.<br>(<code class="no-highlight">\.[^\.]+$~.exe</code> sucht nach einem <code>.</code>, gefolgt von 1 oder mehr Nicht-<code>.</code>-Zeichen, gefolgt vom Ende der Zeichenkette, und ersetzt es mit <code class="no-highlight">.exe</code>)</p>
  </li>
  <li>
    <p>Angenommen, es gibt eine Quelltextzeile mit den folgenden zwei Compilerdirektiven:</p>
    <pre>CodeVersion := "1.2.3.4", Firma := "Meine Firma"</pre>
    <pre><em>;@Ahk2Exe-Let U_version = %A_PriorLine~U)^(.+"){1}(.+)".*$~$2%</em></pre>
    <pre><em>;@Ahk2Exe-Let U_company = %A_PriorLine~U)^(.+"){3}(.+)".*$~$2%</em></pre>
    <p>Diese Direktiven kopieren die Versionsnummer <code class="no-highlight">1.2.3.4</code> in die Spezialvariable <code class="no-highlight">U_version</code> und den Firmennamen <code class="no-highlight">Meine Firma</code> in die Spezialvariable <code class="no-highlight">U_company</code>, um sie später in anderen Direktiven zu verwenden.<br>
    (Das <code class="no-highlight">{1}</code> in der ersten RegEx-Zeichenkette wurde in der zweiten RegEx-Zeichenkette mit <code class="no-highlight">{3}</code> ersetzt, um den Firmennamen nach dem dritten <code class="no-highlight">"</code> zu extrahieren.)</p>
  </li>
</ul>
<p><strong>Weitere Beispiele:</strong> Weitere funktionierende Beispiele, die heruntergeladen und untersucht werden können, finden Sie <a href="https://github.com/AutoHotkey/Ahk2Exe/releases/tag/DemoCode_1">hier</a>.</p>

<h3 id="AddResource">AddResource</h3>
<p>Fügt eine Ressource zur kompilierten EXE-Datei hinzu. (Siehe auch <a href="#UseResourceLang">UseResourceLang</a>)</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-AddResource</span> DateiName <span class="optional">, RessourceName</span></pre>
<dl>
  <dt>DateiName</dt>
  <dd>Dateiname der Ressource, die hinzugefügt werden soll. Wenn kein absoluter Pfad angegeben ist, wird die Datei im (oder relativ zum) Arbeitsverzeichnis des Skripts vermutet. Der Typ der Ressource (als Integer oder Zeichenkette) kann explizit durch ein vorangestelltes Sternchen angegeben werden: <code class="no-highlight">*Typ Dateiname</code>. Wenn weggelassen, erkennt Ahk2Exe den Typ automatisch anhand der Dateiendung.</dd>
  <dt>RessourceName</dt>
  <dd><i>(Optional)</i> Der Name, den die Ressource haben wird (kann eine Zeichenkette oder ein Integer sein). Wenn weggelassen, wird standardmäßig der Dateiname (ohne Pfad) in Großbuchstaben verwendet.</dd>
</dl>
<p>Hier eine Liste mit gängigen Ressourcentypen und den Dateiendungen, die diese standardmäßig auslösen.</p>
<ul>
  <li>2 (RT_BITMAP): <code class="no-highlight">.bmp</code>, <code class="no-highlight">.dib</code></li>
  <li>4 (RT_MENU)</li>
  <li>5 (RT_DIALOG)</li>
  <li>6 (RT_STRING)</li>
  <li>9 (RT_ACCELERATORS)</li>
  <li>10 (RT_RCDATA): Jede andere Dateiendung.</li>
  <li>11 (RT_MESSAGETABLE)</li>
  <li>12 (RT_GROUP_CURSOR): <code class="no-highlight">.cur</code> (noch nicht unterstützt)</li>
  <li>14 (RT_GROUP_ICON): <code class="no-highlight">.ico</code></li>
  <li>23 (RT_HTML): <code class="no-highlight">.htm</code>, <code class="no-highlight">.html</code>, <code class="no-highlight">.mht</code></li>
  <li>24 (RT_MANIFEST): <code class="no-highlight">.manifest</code>. Wenn der Name für die Ressource nicht angegeben ist, wird standardmäßig 1 verwendet.</li>
</ul>
<p><strong>Beispiel 1:</strong> Standardsymbole ersetzen (außer <a href="#SetMainIcon">Hauptsymbol</a>):</p>
<pre><em>;@Ahk2Exe-AddResource Icon1.ico, 160  ; Ersetzt 'H auf Blau'
;@Ahk2Exe-AddResource Icon2.ico, 206  ; Ersetzt 'S auf Grün'
;@Ahk2Exe-AddResource Icon3.ico, 207  ; Ersetzt 'H auf Rot'
;@Ahk2Exe-AddResource Icon4.ico, 208  ; Ersetzt 'S auf Rot'</em></pre>

<p><strong>Beispiel 2:</strong> <span class="ver">[v1.1.34+]</span> Ein weiteres Skript als separate RCDATA-Ressource inkludieren (siehe <a href="../Program.htm#embedded-scripts">Eingebettete Skripte</a>):</p>
<pre><em>;@Ahk2Exe-AddResource MeinSkript1.ahk, #2
;@Ahk2Exe-AddResource MeinSkript2.ahk, MEINERESSOURCE</em></pre>
<p>Beachten Sie, dass jedes Skript, das mit dieser Direktive hinzugefügt wird, vollständig und separat vom Compiler verarbeitet wird und weitere Direktiven enthalten kann. Wenn es konkurrierende Direktiven gibt, wird die zuletzt vom Compiler gefundene verwendet.</p>

<h3 id="Bin">Bin / Base <span class="ver">[v1.1.33.10+]</span></h3>
<p>Gibt die Basisversion von AutoHotkey an, die zur Erzeugung der EXE-Datei verwendet werden soll. Diese Direktive kann mit einem in der GUI oder CLI angegebenen Basisdateiparameter überschrieben werden. Diese Direktive kann bei Bedarf mehrfach angegeben werden, allerdings nur in einer Top-Level-Skriptdatei (also nicht in einer <a href="../lib/_Include.htm">#Include</a>-Datei). Der Compiler wird mindestens einmal für jede gefundene Bin/Base-Direktive ausgeführt. (Wenn dieser Direktive aktuell ein Kommentar angehängt ist, muss dieser die <code> ;</code>-Markierung verwenden. Um diese Direktive tatsächlich auszukommentieren, fügen Sie nach der ersten Kommentarmarkierung ein Leerzeichen ein.)</p>

<pre class="Syntax"><span class="func">;@Ahk2Exe-Bin </span> [Pfad\]Name <span class="optional">, [EXE_Pfad\][Name], Codepage</span> <em>; Veraltet</em>
<span class="func">;@Ahk2Exe-Base</span> [Pfad\]Name <span class="optional">, [EXE_Pfad\][Name], Codepage</span> <em>; <span class="ver">[v1.1.33.10+]</span></em></pre>
<dl>
  <dt>[Pfad\]Name</dt>
  <dd>Die BIN-Datei oder in <span class="ver">[v1.1.33.10+]</span> die EXE-Datei, die verwendet werden soll. Wenn keine Dateiendung angegeben ist, wird <code class="no-highlight">.bin</code> vermutet. Wenn kein absoluter Pfad angegeben ist, wird die Datei im (oder relativ zum) Arbeitsverzeichnis des Compilers vermutet. Für <em>Name</em> kann auch ein Platzhaltermuster verwendet werden, z.B. <code class="no-highlight">ANSI*</code>, <code class="no-highlight">Unicode 32*</code>, <code class="no-highlight">Unicode 64*</code>, oder <code class="no-highlight">*bit</code> für alle drei. Der Compiler wird für jede gefundene BIN- oder EXE-Datei ausgeführt. Es dürfen nur die internen Variablen aus der <a href="#group1">ersten Gruppe</a> oben verwendet werden.</dd>
  <dt>[EXE_Pfad\][Name]</dt>
  <dd><i>(Optional)</i> Der Dateiname für die EXE-Datei. Jede angegebene Dateiendung wird mit <code class="no-highlight">.exe</code> ersetzt. Wenn kein Pfad angegeben ist, wird die EXE-Datei im Ordner des Skripts erstellt. Wenn kein Name angegeben ist, bekommt die EXE-Datei den Standardnamen zugewiesen. Es dürfen nur die internen Variablen aus der <a href="#group1">ersten Gruppe</a> oben verwendet werden. (Dieser Parameter kann mit der <a href="#ExeName">ExeName</a>-Direktive überschrieben werden.)</dd>
  <dt>Codepage</dt>
  <dd><i>(Optional)</i> Überschreibt die Standard-<a href="https://learn.microsoft.com/windows/win32/intl/code-page-identifiers">Codepage</a>, mit der die Skriptdateien verarbeitet werden. (Skripte sollten mit einer Byte-Order-Markierung (BOM) beginnen, was die Verwendung dieses Parameters überflüssig macht.)</dd>
</dl>

<h3 id="ConsoleApp">ConsoleApp</h3>
<p>Schaltet das Subsystem der EXE-Datei in den Konsolenmodus.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-ConsoleApp</span></pre>

<h3 id="Cont">Cont</h3>
<p>Gibt eine Fortsetzungszeile für die vorherige Direktive an. Dies ermöglicht es, eine langzeilige Direktive im Quellcode besser lesbar zu machen.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-Cont</span> Text</pre>
<dl>
  <dt>Text</dt>
  <dd>Der Text, der an die vorherige Direktivenzeile angehängt werden soll, bevor diese Zeile verarbeitet wird. Der Text beginnt nach dem einzelnen Leerzeichen hinter dem <code class="no-highlight">Cont</code>-Schlüsselwort.</dd>
</dl>

<h3 id="Debug">Debug</h3>
<p>Zeigt ein Mitteilungsfenster mit dem angegebenen Text an (für Debugging-Zwecke gedacht).</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-Debug</span> Text</pre>
<dl>
  <dt>Text</dt>
  <dd>Ein Text, der angezeigt werden soll. Fügen Sie Spezialvariablen zwischen <code>%</code>-Zeichen ein, um ihren (manipulierten) Inhalt zu sehen.</dd>
</dl>

<h3 id="ExeName">ExeName</h3>
<p>Gibt den Speicherort und Namen der erzeugten EXE-Datei an. (Siehe auch <a href="#Bin">Base</a>-Direktive.) Diese Direktive kann mit einer in der GUI oder CLI angegebenen Ausgabedatei überschrieben werden.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-ExeName</span> [Pfad\][Name]</pre>
<dl>
  <dt>[Pfad\][Name]</dt>
  <dd>Der Name der EXE-Datei. Jede angegebene Dateiendung wird mit <code class="no-highlight">.exe</code> ersetzt. Wenn kein Pfad angegeben ist, wird die EXE-Datei im Ordner des Skripts erstellt. Wenn kein Name angegeben ist, bekommt die EXE-Datei den Standardnamen zugewiesen.</dd>
</dl>
<strong>Beispiel:</strong>
<pre><em>;@Ahk2Exe-Obey U_bits, = %A_PtrSize% * 8
;@Ahk2Exe-Obey U_type, = "%A_IsUnicode%" ? "Unicode" : "ANSI"
;@Ahk2Exe-ExeName %A_ScriptName~\.[^\.]+$%_%U_type%_%U_bits%</em></pre>

<h3 id="Let">Let</h3>
<p>Erstellt (oder modifiziert) eine oder mehrere Benutzervariablen, auf die mit <code class="no-highlight">%U_<i>Name</i>%</code> zugegriffen werden kann, ähnlich wie bei den internen Variablen (siehe oben).</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-Let</span> Name = Wert <span class="optional">, Name = Wert, ...</span></pre>
<dl>
  <dt>Name</dt>
  <dd>Der Name der Variable (mit oder ohne vorangestelltem <code class="no-highlight">U_</code>).</dd>
  <dt>Wert</dt>
  <dd>Der zu verwendende Wert.</dd>
</dl>

<h3 id="Nop">Nop <span class="ver">[v1.1.34.03c+]</span></h3>
<p>Bewirkt nichts.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-Nop</span> <span class="optional">Text</span></pre>
<dl>
  <dt>Text</dt>
  <dd><i>(Optional)</i> Beliebiger Text, der ignoriert wird.</dd>
</dl>
<strong>Beispiel:</strong>
<pre>Ver := A_AhkVersion "" <em>; Wenn das in Anführungszeichen gesetzte Literal nicht leer ist, tue 'SetVersion'
;@Ahk2Exe-Obey U_V, = "%A_PriorLine~U)^(.+")(.*)".*$~$2%" ? "SetVersion" : "Nop"
;@Ahk2Exe-%U_V%        %A_AhkVersion%%A_PriorLine~U)^(.+")(.*)".*$~$2%</em></pre>

<h3 id="Obey">Obey</h3>
<p>Führt isolierte AutoHotkey-Befehle oder Ausdrücke aus, deren Ergebnis in <code class="no-highlight">U_<i>Name</i></code> gespeichert wird.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-Obey</span> Name, BefehlOderAusdruck <span class="optional">, Extra</span></pre>
<dl>
  <dt>Name</dt>
  <dd>Der Name der Variable (mit oder ohne vorangestelltem <code class="no-highlight">U_</code>), in der das Ergebnis gespeichert werden soll.</dd>
  <dt>BefehlOderAusdruck</dt>
  <dd>
    <p>Ein Befehl oder Ausdruck, der ausgeführt werden soll.</p>
    <p>Bei <strong>Befehlen</strong> muss <em>Name</em> als Ausgabevariable angegeben werden (häufig der erste Parameter), z.B.</p>
    <pre><em>;@Ahk2Exe-Obey U_date, FormatTime U_date`, R D2 T2</em></pre>
    <p>Bei <strong>Ausdrücken</strong> muss <code>=</code> vorangestellt werden, z.B.</p>
    <pre><em>;@Ahk2Exe-Obey U_type, = "%A_IsUnicode%" ? "Unicode" : "ANSI"</em></pre>
    <p>Ausdrücke können im Befehlsformat geschrieben werden, z.B.</p>
    <pre><em>;@Ahk2Exe-Obey U_bits, U_bits := %A_PtrSize% * 8</em></pre>
    <p>Falls erforderlich, trennen Sie mehrere Befehle und Ausdrücke mit <code class="no-highlight">`n</code>.</p>
  </dd>
  <dt>Extra</dt>
  <dd><i>(Optional)</i> Eine Zahl (1-9), die die Anzahl der zusätzlichen Ergebnisse angibt, die zurückgegeben werden sollen. Wenn Extra z.B. 2 ist, werden die Ergebnisse in <code class="no-highlight">U_<i>name</i></code>, <code class="no-highlight">U_<i>name</i>1</code> und <code class="no-highlight">U_<i>name</i>2</code> gespeichert. Der Wert in jedem <code class="no-highlight"><i>name</i></code> muss zuerst durch den Ausdruck oder Befehl gesetzt werden.</dd>
</dl>

<h3 id="PostExec">PostExec</h3>
<p>Gibt ein Programm an, das nach einer erfolgreichen Kompilierung ausgeführt werden soll, bevor (oder nachdem) eine <a href="../Scripts.htm#mpress">Komprimierung</a> der EXE-Datei erfolgt. Diese Direktive kann mehrfach angegeben werden und wird in der vom Compiler gesehenen Reihenfolge ausgeführt, gemäß der durch den <em>Bedingung</em>-Parameter definierten Warteschlange.</p>
<pre class="Syntax">
<span class="func">;@Ahk2Exe-PostExec</span> Programm [Parameter] <span class="optional">, Bedingung, ArbeitVerz, Versteckt, FehlerIgnorieren</span></pre>
<dl>
  <dt>Programm [Parameter]</dt>
  <dd>Das Programm, das ausgeführt werden soll, inklusive Parameter. Um den Zugriff auf die verarbeitete EXE-Datei zu ermöglichen, geben Sie die Spezialvariable <a href="#WorkFileName">A_WorkFileName</a> als Parameter in Anführungszeichen an, z.B. <code>"%A_WorkFileName%"</code>. Wenn das Programm die EXE-Datei ändert, muss das Programm die geänderte EXE-Datei in die via <code class="no-highlight">%A_WorkFileName%</code> angegebene Eingabedatei zurückschieben. (Beachten Sie, dass die EXE-Datei Binärdaten enthalten wird.)</dd>
  <dt>Bedingung</dt>
  <dd>
    <p><i>(Optional)</i> Lassen Sie diesen Parameter leer, wenn das Programm vor einer <a href="../Scripts.htm#mpress">Komprimierung</a> ausgeführt werden soll. Andernfalls geben Sie eine der folgenden Zahlen an, um das Programm nach einer bestimmten Komprimierung auszuführen:</p>
    <ul>
      <li>0 – Nur ausführen, wenn keine Komprimierung angegeben ist.</li>
      <li>1 – Nur ausführen, wenn die MPRESS-Komprimierung angegeben ist.</li>
      <li>2 – Nur ausführen, wenn die UPX-Komprimierung angegeben ist.</li>
    </ul>
  </dd>
  <dt>ArbeitVerz <span class="ver">[v1.1.33.03+]</span></dt>
  <dd><i>(Optional)</i> Das Arbeitsverzeichnis, in dem das Programm gestartet werden soll. Umschließen Sie den Namen nicht mit doppelten Anführungszeichen, selbst wenn er Leerzeichen enthält. Wenn weggelassen, wird standardmäßig das Verzeichnis des Compilers (Ahk2Exe) verwendet.</dd>
  <dt>Versteckt <span class="ver">[v1.1.33.03+]</span></dt>
  <dd><i>(Optional)</i> Wenn auf 1 gesetzt, wird das Programm versteckt gestartet.</dd>
  <dt>FehlerIgnorieren <span class="ver">[v1.1.33.03+]</span></dt>
  <dd><i>(Optional)</i> Wenn auf 1 gesetzt, werden Fehler während des Programmstarts oder der Programmausführung nicht an den Benutzer gemeldet.</dd>
</dl>
<p><strong>Beispiel 1:</strong> (Um die ersten beiden Beispiele zu verwenden, laden Sie zuerst <a href="https://github.com/AutoHotkey/Ahk2Exe/blob/master/BinMod.ahk">BinMod.ahk</a> herunter und kompilieren Sie es gemäß den Anweisungen des heruntergeladenen Skripts.)</p>
<p>Mit diesem Beispiel können alle Verweise auf "AutoHotkey" aus der erzeugten EXE-Datei entfernt werden, um zu verschleiern, dass es sich um ein kompiliertes AutoHotkey-Skript handelt:</p>
<pre><em>;@Ahk2Exe-Obey U_au, = "%A_IsUnicode%" ? 2 : 1    ; Skript ANSI oder Unicode?
;@Ahk2Exe-PostExec "BinMod.exe" "%A_WorkFileName%"
;@Ahk2Exe-Cont  "%U_au%2.&gt;AUTOHOTKEY SCRIPT&lt;. DATA              "</em></pre>
<p><strong>Beispiel 2:</strong> Dieses Beispiel ändert eine UPX-komprimierte EXE-Datei, sodass sie nicht mehr mit <code class="no-highlight">UPX -d</code> dekomprimiert werden kann:</p>
<pre><em>;@Ahk2Exe-PostExec "BinMod.exe" "%A_WorkFileName%"
;@Ahk2Exe-Cont  "11.UPX." "1.UPX!.", 2</em></pre>
<p>(Weitere Beispiele finden Sie im <a href="https://github.com/AutoHotkey/Ahk2Exe/blob/master/BinMod.ahk">BinMod.ahk</a>-Skript.)</p>
<p><strong>Beispiel 3:</strong> Dieses Beispiel spezifiziert die <a href="../Scripts.htm#mpress">Komprimierung</a>, die für ein kompiliertes Skript verwendet werden soll, wenn keine in der CLI oder GUI angegeben ist. Die Standardparameter, die der Compiler normalerweise verwendet, werden angezeigt.</p><p>Für MPRESS:</p>
<pre><em>;@Ahk2Exe-PostExec "MPRESS.exe" "%A_WorkFileName%" -q -x, 0,, 1</em></pre>
<p>Für UPX:</p>
<pre><em>;@Ahk2Exe-PostExec "UPX.exe" "%A_WorkFileName%"
;@Ahk2Exe-Cont  -q --all-methods --compress-icons=0, 0,, 1</em></pre>

<h3 id="ResourceID">ResourceID <span class="ver">[v1.1.34+]</span></h3>
<p>Weist eine untypische Ressourcen-ID zu, die für das Hauptskript bei Kompilierungen verwendet wird, die eine <a href="#Bin">EXE-Basisdatei</a> verwenden (siehe <a href="../Program.htm#embedded-scripts">Eingebettete Skripte</a>). Diese Direktive kann mit einer in der GUI oder CLI angegebenen Ressourcen-ID überschrieben werden. Diese Direktive wird ignoriert, wenn sie in einem Skript angegeben ist, das mit der <a href="#AddResource">AddResource</a>-Direktive eingefügt wurde.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-ResourceID</span> Name</pre>
<dl>
  <dt>Name</dt>
  <dd>Die zu verwendende Ressourcen-ID. Numerische Ressourcen-IDs müssen aus einem Rautezeichen (#) gefolgt von einer Dezimalzahl bestehen.</dd>
</dl>

<h3 id="SetMainIcon">SetMainIcon</h3>
<p>Überschreibt das EXE-Symbol, welches für die Kompilierung verwendet wird. (Um die anderen Symbole zu ändern, siehe <a href="#AddResource">AddResource</a>-Beispiel.) Diese Direktive kann mit einer in der GUI oder CLI angegebenen Symboldatei überschrieben werden. Das neue Symbol ist möglicherweise nicht sofort im Windows Explorer sichtbar, wenn die kompilierte Datei zuvor mit einem anderen Symbol vorhanden war. Das neue Symbol kann jedoch durch Auswählen von <code class="no-highlight">Refresh Windows Icons</code> im <code class="no-highlight">File</code>-Menü von Ahk2Exe angezeigt werden.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-SetMainIcon</span> <span class="optional">Symboldatei</span></pre>
<dl>
  <dt>Symboldatei</dt>
  <dd><i>(Optional)</i> Die zu verwendende Symboldatei. Wenn weggelassen, wird das Standardsymbol von AutoHotkey verwendet.</dd>
</dl>

<h3 id="SetProp">Set<em>Eigenschaft</em></h3>
<p>Ändert eine Eigenschaft in den Versionsinformationen der kompilierten EXE-Datei. Beachten Sie, dass alle Eigenschaften in alphabetischer Reihenfolge abgearbeitet werden, unabhängig von der Reihenfolge, in der sie angegeben sind.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-Set<i>Eigenschaft</i></span> Wert</pre>
<dl>
  <dt><em>Eigenschaft</em></dt>
  <dd>
    <p>Der Name der Eigenschaft, die geändert werden soll. Muss einer der unten aufgeführten sein.</p>
    <table class="info">
      <tr>
        <th abbr="Eigenschaft">Eigenschaft</th>
        <th abbr="Beschr">Beschreibung</th>
      </tr>
      <tr>
        <td>CompanyName</td>
        <td>Ändert den Firmennamen.</td>
      </tr>
      <tr>
        <td>Copyright</td>
        <td>Ändert die rechtlichen Copyright-Informationen.</td>
      </tr>
      <tr>
        <td>Description</td>
        <td>Ändert die Dateibeschreibung. In Windows 8 und höher ändert dies auch den Namen des Skripts im Task-Manager unter "Prozesse".</td>
      </tr>
      <tr>
        <td>FileVersion</td>
        <td>Ändert die Dateiversion, sowohl im Text- als auch Binärformat. (Einzelheiten finden Sie unter <em>Version</em> weiter unten.)</td>
      </tr>
      <tr>
        <td>InternalName</td>
        <td>Ändert den internen Namen.</td>
      </tr>
      <tr>
        <td>Language</td>
        <td>Ändert den <a href="Languages.htm">Sprachcode</a>. Bitte beachten Sie, dass Hexadezimalzahlen das Präfix <code>0x</code> haben müssen.</td>
      </tr>
      <tr>
        <td>LegalTrademarks</td>
        <td>Ändert die rechtlichen Informationen zum Markenzeichen.</td>
      </tr>
      <tr>
        <td>Name</td>
        <td>Ändert den Produktnamen und den internen Namen.</td>
      </tr>
      <tr>
        <td>OrigFilename</td>
        <td>Ändert die Informationen zum originalen Dateinamen.</td>
      </tr>
      <tr>
        <td>ProductName</td>
        <td>Ändert den Produktnamen.</td>
      </tr>
      <tr>
        <td>ProductVersion</td>
        <td>Ändert die Produktversion, sowohl im Text- als auch Binärformat. (Einzelheiten finden Sie unter <em>Version</em> weiter unten.)</td>
      </tr>
      <tr>
        <td>Version</td>
        <td>
          <p>Ändert die Dateiversion und die Produktversion, sowohl im Text- als auch Binärformat.</p>
          <p>Ahk2Exe füllt die binären Versionsfelder mit den durch Punkte getrennten Zahlen (bis zu vier), die am Anfang des Versionstextes stehen können. Ungefüllte Felder werden auf Null gesetzt. Zum Beispiel bewirkt <code class="no-highlight">1.3-Alpha</code>, dass die binäre Versionsnummer <code class="no-highlight">1.3.0.0</code> erzeugt wird. Wenn diese Eigenschaft nicht geändert wird, wird standardmäßig die AutoHotkey-Version verwendet, die zum Kompilieren des Skripts verwendet wurde.</p>
        </td>
      </tr>
    </table>
  </dd>
  <dt>Wert</dt>
  <dd>Der Wert, auf den die Eigenschaft gesetzt werden soll.</dd>
</dl>

<h3 id="Set">Set</h3>
<p>Ändert Eigenschaften in den Versionsinformationen der kompilierten EXE-Datei, die nicht von der <a href="#SetProp">SetEigenschaft</a>-Direktive abgedeckt werden. Beachten Sie, dass alle Eigenschaften in alphabetischer Reihenfolge abgearbeitet werden, unabhängig von der Reihenfolge, in der sie angegeben sind. Diese Direktive ist nur für spezielle Anwendungsfälle gedacht.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-Set</span> Eigenschaft, Wert</pre>
<dl>
  <dt>Eigenschaft</dt>
  <dd>Der Name der Eigenschaft, die geändert werden soll.</dd>
  <dt>Wert</dt>
  <dd>Der Wert, auf den die Eigenschaft gesetzt werden soll.</dd>
</dl>

<h3 id="UpdateManifest">UpdateManifest</h3>
<p>Ändert Details im Manifest der EXE-Datei. Diese Direktive ist nur für spezielle Anwendungsfälle gedacht.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-UpdateManifest</span> BenötigtAdmin <span class="optional">, Name, Version, UIAccess</span></pre>
<dl>
  <dt>BenötigtAdmin</dt>
  <dd>Setzen Sie diesen Parameter auf 1, wenn die EXE-Datei nur mit administrativen Rechten ausgeführt werden soll. Setzen Sie ihn auf 2, wenn die EXE-Datei nur mit den höchsten verfügbaren Rechten ausgeführt werden soll. Setzen Sie ihn auf 0, um nichts zu verändern.</dd>
  <dt>Name</dt>
  <dd><i>(Optional)</i> Ein Name, der im Manifest gesetzt werden soll.</dd>
  <dt>Version</dt>
  <dd><i>(Optional)</i> Eine Version, die im Manifest gesetzt werden soll.</dd>
  <dt>UIAccess</dt>
  <dd><i>(Optional)</i> Setzen Sie diesen Parameter auf 1, um UIAccess im Manifest zu aktivieren.</dd>
</dl>

<h3 id="UseResourceLang">UseResourceLang</h3>
<p>Ändert die Ressourcensprache, welche von <a href="#AddResource">AddResource</a> verwendet wird. Diese Direktive ist positionsabhängig und beeinflusst alle nachfolgenden <a href="#AddResource">AddResource</a>-Direktiven.</p>
<pre class="Syntax"><span class="func">;@Ahk2Exe-UseResourceLang</span> Sprachcode</pre>
<dl>
  <dt>Sprachcode</dt>
  <dd>Der <a href="Languages.htm">Sprachcode</a>. Bitte beachten Sie, dass Hexadezimalzahlen das Präfix <code>0x</code> haben müssen. Die Standard-Ressourcensprache ist US English (0x0409).</dd>
</dl>

</body>

</html>