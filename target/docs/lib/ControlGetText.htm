<!DOCTYPE HTML>
<html lang="de">
<head>
<title>ControlGetText - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der ControlGetText-Befehl ruft den Text eines Steuerelements ab." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlGetText</h1>

<p>Ruft den Text eines Steuerelements ab.</p>

<pre class="Syntax"><span class="func">ControlGetText</span>, AusgabeVar <span class="optional">, Steuerelement, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Ausgabevariable, in der der abgerufene Text gespeichert werden soll.</p></dd>

  <dt>Steuerelement</dt>
  <dd><p>Wenn leer oder weggelassen, wird das oberste Steuerelement des Zielfensters verwendet. Andernfalls geben Sie entweder die ClassNN-Bezeichnung (Klassenname und Instanznummer des Steuerelements) oder den Text des Steuerelements an, die beide mit dem internen Tool "Window Spy" ermittelt werden können. Wenn Text verwendet wird, ist das Übereinstimmungsverhalten abhängig von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>.</p>
    <p>Um mit dem Fensterhandle (HWND) eines Steuerelements zu arbeiten, lassen Sie den <em>Steuerelement</em>-Parameter leer und übergeben Sie <code class="no-highlight">ahk_id %StrlmntHwnd%</code> als <em>FensterTitel</em>-Parameter (funktioniert auch bei versteckten Steuerelementen, selbst wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> ausgeschaltet ist). Die HWND-Nummer eines Steuerelements kann üblicherweise via <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a> oder <a href="DllCall.htm">DllCall()</a> abgerufen werden.</p></dd>

  <dt>FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</dt>
  <dd>
    <p>Wenn jeder dieser Parameter leer ist oder weggelassen wird, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a> verwendet. Andernfalls geben Sie für <em>FensterTitel</em> einen <a href="../misc/WinTitle.htm">Fenstertitel oder andere Kriterien</a> zur Identifizierung des Zielfensters und/oder für <em>FensterText</em> eine Teilzeichenkette aus einem Textelement des Zielfensters an (Textelemente können mit dem internen Tool "Window Spy" in Erfahrung gebracht werden).</p>
    <p><em>AusnahmeTitel</em> und <em>AusnahmeText</em> können verwendet werden, um ein oder mehrere Fenster anhand ihres Titels oder Textes auszuschließen. Ihre Angabe ähnelt der von <em>FensterTitel</em> und <em>FensterText</em>, außer dass <em>AusnahmeTitel</em> keine anderen Kriterien als den Fenstertitel erkennt.</p>
    <p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Standardmäßig werden versteckte Fenster nicht erkannt und versteckte Textelemente erkannt, was mit <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> und <a href="DetectHiddenText.htm">DetectHiddenText</a> geändert werden kann. Standardmäßig muss ein Fenstertitel mit dem angegebenen <em>FensterTitel</em> oder <em>AusnahmeTitel</em> beginnen, um eine Übereinstimmung zu sein, was mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> geändert werden kann.</p>
  </dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h2 id="Remarks">Bemerkungen</h2>
<p class="note"><strong>Hinweis:</strong> Mit <a href="ControlGet.htm#List">ControlGet List</a> können stattdessen Texte aus einer ListView, ListBox oder ComboBox abgerufen werden.</p>
<p>Wenn der abgerufene Text gekürzt (unvollständig) ist, versuchen Sie es mit <code><a href="VarSetCapacity.htm">VarSetCapacity</a>(AusgabeVar, 55)</code> vor ControlGetText (ersetzen Sie 55 mit einer Zahl, die wesentlich größer ist als die Länge des gekürzten Textes). Dies ist in der Regel erforderlich, wenn AutoHotkey die Ausgabevariable für den Text zu klein macht, weil die Anwendung, deren Text abgerufen werden soll, nur sporadisch oder gar nicht auf die WM_GETTEXTLENGTH-Meldung reagiert.</p>
<p>Die Menge des abgerufenen Textes ist auf die maximale Kapazität einer Variable beschränkt (was mit der <a href="_MaxMem.htm">#MaxMem</a>-Direktive geändert werden kann). Dieser Befehl kann daher sehr viel Arbeitsspeicher beanspruchen, wenn das Zielsteuerelement eine große Menge an Text enthält (z.B. wenn ein großes Dokument in einem Texteditor geöffnet wurde). Allerdings kann der Speicher einer Variable nach ihrer Verwendung wieder freigegeben werden, indem ihr ein leerer Wert zugewiesen wird, d.h. <code>AusgabeVar := ""</code>.</p>
<p>Die meisten Steuerelemente verwenden ein Wagenrücklauf-Zeilenvorschub-Paar (`r`n) anstelle eines einzelnen Zeilenvorschubs (`n) für ihre abgerufenen Texte, um das Ende einer Zeile zu markieren.</p>
<p><code>SetTitleMatchMode Slow</code> muss nicht verwendet werden, da ControlGetText den Text immer im langsamen Modus abruft (dieser Modus funktioniert mit viel mehr Steuerelementen).</p>
<p>Mit <a href="WinGet.htm#ControlList">WinGet ControlList</a> kann eine Liste von Steuerelementen in einem Fenster abgerufen werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="ControlSetText.htm">ControlSetText</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="Control.htm">Control</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="ControlMove.htm">ControlMove</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="ControlClick.htm">ControlClick</a>, <a href="ControlSend.htm">ControlSend</a>, <a href="_MaxMem.htm">#MaxMem</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Ruft den aktuellen Text aus dem Notepad-Eingabefeld ab und speichert ihn in <var>AusgabeVar</var>. Dieses Beispiel kann unter Windows 11 oder höher fehlschlagen, da es die klassische Version von Notepad erfordert.</p>
<pre>ControlGetText, AusgabeVar, Edit1, Unbenannt -</pre>
</div>
<div class="ex" id="ExMainWin">
<p><a class="ex_number" href="#ExMainWin"></a> Ermittelt und meldet den aktuellen Text im Eingabefeld des <a href="../Program.htm#main-window">Hauptfensters</a>.</p>
<pre>ListVars
WinWaitActive ahk_class AutoHotkey
ControlGetText, AusgabeVar, Edit1 <em>; Verwendet das oben gefundene Fenster.</em>
MsgBox % AusgabeVar</pre>
</div>

</body>
</html>
