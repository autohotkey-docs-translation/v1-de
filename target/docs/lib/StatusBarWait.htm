<!DOCTYPE HTML>
<html lang="de">
<head>
<title>StatusBarWait - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der StatusBarWait-Befehl wartet, bis die Statusleiste eines Fensters eine bestimmte Zeichenkette enthält." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>StatusBarWait</h1>

<p>Wartet, bis die Statusleiste eines Fensters eine bestimmte Zeichenkette enthält.</p>

<pre class="Syntax"><span class="func">StatusBarWait</span> <span class="optional">, LeisteText, Zeitlimit, SegmentNummer, FensterTitel, FensterText, Intervall, AusnahmeTitel, AusnahmeText</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>LeisteText</dt>
  <dd><p>Wenn leer oder weggelassen, wartet der Befehl, bis die Statusleiste leer ist. Andernfalls geben Sie den Text oder einen Teil des Textes an, auf dessen Erscheinen der Befehl warten soll. Der Text ist Groß-/Kleinschreibung-sensitiv. Das Übereinstimmungsverhalten wird durch <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> bestimmt, ähnlich wie bei <em>FensterTitel</em> unten.</p>
    <p>Um stattdessen auf eine <em>Änderung</em> des Leistentextes zu warten, führen Sie <a href="StatusBarGetText.htm">StatusBarGetText</a> wiederholt mit einer Schleife aus oder verwenden Sie das RegEx-Beispiel am Ende dieser Seite.</p></dd>

  <dt>Zeitlimit</dt>
  <dd>
    <p>Wenn leer oder weggelassen, wird der Befehl unendlich lang warten. Andernfalls geben Sie die maximale Wartezeit in Sekunden an. Um auf einen Bruchteil einer Sekunde zu warten, geben Sie eine Floating-Point-Zahl an, z.B. 0.25, um maximal 250 Millisekunden zu warten. Die Angabe von 0 entspricht der Angabe von 0.5. Dieser Parameter kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p>
  </dd>

  <dt>SegmentNummer</dt>
  <dd><p>Wenn leer oder weggelassen, wird standardmäßig 1 verwendet, was üblicherweise das Segment ist, das den Text von Interesse enthält. Andernfalls geben Sie die Nummer des Leistensegments an, dessen Text abgerufen werden soll. Kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p></dd>

  <dt>FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</dt>
  <dd>
    <p>Wenn jeder dieser Parameter leer ist oder weggelassen wird, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a> verwendet. Andernfalls geben Sie für <em>FensterTitel</em> einen <a href="../misc/WinTitle.htm">Fenstertitel oder andere Kriterien</a> zur Identifizierung des Zielfensters und/oder für <em>FensterText</em> eine Teilzeichenkette aus einem Textelement des Zielfensters an (Textelemente können mit dem internen Tool "Window Spy" in Erfahrung gebracht werden).</p>
    <p><em>AusnahmeTitel</em> und <em>AusnahmeText</em> können verwendet werden, um ein oder mehrere Fenster anhand ihres Titels oder Textes auszuschließen. Ihre Angabe ähnelt der von <em>FensterTitel</em> und <em>FensterText</em>, außer dass <em>AusnahmeTitel</em> keine anderen Kriterien als den Fenstertitel erkennt.</p>
    <p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Standardmäßig werden versteckte Fenster nicht erkannt und versteckte Textelemente erkannt, was mit <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> und <a href="DetectHiddenText.htm">DetectHiddenText</a> geändert werden kann. Standardmäßig muss ein Fenstertitel mit dem angegebenen <em>FensterTitel</em> oder <em>AusnahmeTitel</em> beginnen, um eine Übereinstimmung zu sein, was mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> geändert werden kann.</p>
  </dd>

  <dt>Intervall</dt>
  <dd><p>Wenn leer oder weggelassen, wird standardmäßig 50 verwendet. Andernfalls geben Sie an, wie oft die Statusleiste geprüft werden soll, während der Befehl wartet (in Millisekunden). Kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p></dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, eine Ausnahme auszulösen, wenn der Zugriff auf die Statusleiste fehlschlägt. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn der Befehl das Zeitlimit überschritten hat, bevor eine Übereinstimmung in der Statusleiste gefunden werden konnte. Es wird auf 2 gesetzt, wenn der Zugriff auf die Statusleiste fehlgeschlagen ist. Es wird auf 0 gesetzt, wenn eine Übereinstimmung gefunden wurde.</p>
<h2 id="Remarks">Bemerkungen</h2>
<p>Dieser Befehl versucht, die erste <em>reguläre</em> Statusleiste eines Fensters zu lesen (allgemeines Microsoft-Steuerelement: msctls_statusbar32). Einige Programme verwenden eigene Statusleisten oder spezielle Versionen des MS-Steuerelements – in diesem Fall werden solche Leisten nicht unterstützt.</p>
<p>Anstatt <a href="StatusBarGetText.htm">StatusBarGetText</a> wiederholt mit einer Schleife auszuführen, ist es in der Regel effizienter, StatusBarWait zu verwenden, da es Optimierungen enthält, die den Overhead durch mehrfache Aufrufe von <a href="StatusBarGetText.htm">StatusBarGetText</a> vermeiden.</p>
<p>StatusBarWait ermittelt das Zielfenster, bevor es damit beginnt, auf eine Übereinstimmung zu warten. Wenn dieses Zielfenster geschlossen wird, hört der Befehl auf zu warten, auch dann, wenn ein anderes Fenster mit demselben <em>FensterTitel</em> und <em>FensterText</em> existiert.</p>
<p>Während der Befehl wartet, können neue <a href="../misc/Threads.htm">Threads</a> via <a href="../Hotkeys.htm">Hotkeys</a>, <a href="Menu.htm">benutzerdefinierte Menüpunkte</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="StatusBarGetText.htm">StatusBarGetText</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="ControlGetText.htm">ControlGetText</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExSearch">
<p><a class="ex_number" href="#ExSearch"></a> Schreibt ein neues Suchmuster in ein existierendes Explorer-/Suchfenster.</p>
<pre>if WinExist("Suchergebnisse") <em>; Setzt das zuletzt gefundene Fenster, um das folgende zu vereinfachen.</em>
{
    WinActivate
    Send, {tab 2}!o*.txt{enter}  <em>; Das Suchmuster in das Suchfenster schreiben.</em>
    Sleep, 400  <em>; Der Statusleiste Zeit geben, auf "wird durchsucht" zu wechseln.</em>
    StatusBarWait, gefunden, 30
    if ErrorLevel
        MsgBox, Das Zeitlimit wurde überschritten oder es gab ein Problem.
    else
        MsgBox, Die Suche war erfolgreich.
}</pre>
</div>

<div class="ex" id="ExChange">
<p><a class="ex_number" href="#ExChange"></a> Wartet auf eine Änderung der Statusleiste im aktiven Fenster. Dieses Beispiel benötigt <span class="ver">[v1.0.46.06+]</span>.</p>
<pre>SetTitleMatchMode RegEx  <em>; Akzeptiert <a href="SetTitleMatchMode.htm#RegEx">Reguläre Ausdrücke</a> für den nachfolgenden Gebrauch.</em>
if WinExist("A")  <em>; Macht das aktive Fenster zum zuletzt gefundenen Fenster.</em>
{
    StatusBarGetText, Originaltext
    StatusBarWait, ^(?!^\Q%Originaltext%\E$)  <em>; Dieser reguläre Ausdruck wartet auf eine Änderung des Textes.</em>
}</pre>
</div>

</body>
</html>
