<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Hotkey - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der Hotkey-Befehl erstellt, modifiziert, aktiviert oder deaktiviert einen Hotkey, während das Skript läuft." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Hotkey</h1>

<p>Erstellt, modifiziert, aktiviert oder deaktiviert einen Hotkey, während das Skript läuft.</p>

<pre class="Syntax">
<span class="func">Hotkey</span>, TasteName <span class="optional">, Label, Optionen</span>
<span class="func">Hotkey</span>, IfWinActive/Exist <span class="optional">, FensterTitel, FensterText</span>
<span class="func">Hotkey</span>, If <span class="optional">, Ausdruck</span>
<span class="func">Hotkey</span>, If, % FunktionObjekt
</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>TasteName</dt>
  <dd><p>Name der Taste zum Aktivieren des Hotkeys, optional mit <a href="../Hotkeys.htm#Symbols">Modifikatorsymbolen</a>. Zum Beispiel wäre <code class="no-highlight">#c</code> der Hotkey <kbd>Win</kbd>+<kbd>C</kbd>.</p>
    <p>Wenn <em>TasteName</em> bereits als Hotkey existiert – entweder via Hotkey-Befehl oder <a href="../Hotkeys.htm">Zweifach-Doppelpunkt-Label</a> – wird dieser Hotkey mit den anderen Parameterwerten des Befehls aktualisiert.</p>
    <p>Wenn der angegebene Hotkey bereits <em>existiert</em>, ist <em>TasteName</em> nicht Groß-/Kleinschreibung-sensitiv. Die Namen der Tasten müssen jedoch genauso geschrieben werden wie die des existierenden Hotkeys (z.B. ist Esc in diesem Fall nicht dasselbe wie Escape). Die Reihenfolge von <a href="../Hotkeys.htm#Symbols">Modifikatorsymbolen</a> wie z.B. <code class="no-highlight">^!+#</code> spielt keine Rolle. Mit <a href="GetKey.htm">GetKeyName()</a> kann die Standardschreibweise eines Tastennamens abgerufen werden.</p>
    <p>Jeder neu erstellte Hotkey – entweder via Hotkey-Befehl oder <a href="../Hotkeys.htm">Zweifach-Doppelpunkt-Label</a> – erhält einen festen Namen, der sich aus dem Tastennamen und der Reihenfolge der Modifikatorsymbolen zusammensetzt, widergespiegelt durch <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a>. Dieser Name wird von allen <a href="_IfWinActive.htm#variant">Varianten</a> des Hotkeys verwendet, und ändert sich auch dann nicht, wenn der Hotkey-Befehl später mit einer anderen Symbolreihenfolge auf den Hotkey zugreift.</p>
    <p><span class="ver">[v1.1.15+]</span>: Wenn die Hotkey-Variante bereits existiert, wird ihr Verhalten gemäß der Tatsache aktualisiert, ob <em>TasteName</em> das <a href="../Hotkeys.htm#Tilde">Tilde-Präfix (~)</a> enthält oder nicht. Vor <span class="ver">[v1.1.19]</span> wurde der Hotkey jedoch nicht aktualisiert, wenn <em>Label</em> weggelassen wurde.</p>
    <p><span class="ver">[v1.1.19+]</span>: Das <a href="../Hotkeys.htm#prefixdollar">Hook-Präfix ($)</a> kann auf existierende Hotkeys angewendet werden. Dieses Präfix beeinflusst alle Varianten des Hotkeys und kann nicht entfernt werden. Vor <span class="ver">[v1.1.19]</span> wurde das Präfix beim Modifizieren einer existierenden Hotkey-Variante ignoriert.</p>
    </dd>

  <dt>Label</dt>
  <dd><p>Name des <a href="../misc/Labels.htm">Labels</a>, dessen Inhalt beim Drücken des Hotkeys ausgeführt werden soll (als neuer <a href="../misc/Threads.htm">Thread</a>). Es können sowohl normale Labels als auch <a href="../Hotkeys.htm">Hotkey</a>-/<a href="../Hotstrings.htm">Hotstring</a>-Labels verwendet werden, aber wenn das Skript mehrere Labels mit demselben Namen enthält, kann nur das erste verwendet werden. Die Doppelpunkte am Ende müssen weggelassen werden. Wenn <em>Label</em> dynamisch ist (z.B. %VarMitLabelName%), prüfen Sie vorher mit <code><a href="IsLabel.htm">IsLabel</a>(VarMitLabelName)</code>, ob das Label existiert.</p>
  <p id="Functor"><span class="ver">[v1.1.20+]</span>: Dieser Parameter kann auch der Name einer Funktion sein, wenn kein Label mit diesem Namen existiert, oder eine einzelne Variablenreferenz mit einem <a href="../misc/Functor.htm">Funktionsobjekt</a>, wie in <code>Hotkey #z, %FunkObj%, On</code> oder <code>Hotkey #z, % FunkObj, On</code>.  Andere Ausdrücke, die Objekte zurückgeben, werden zurzeit nicht unterstützt. Beim Ausführen des Hotkeys wird die Funktion ohne Parameter aufgerufen. Hotkeys können auch ohne den Hotkey-Befehl <a href="../Hotkeys.htm#Function">als Funktionen definiert werden</a>.</p>
      <p>Dieser Parameter kann leer gelassen werden, wenn <em>TasteName</em> bereits als Hotkey existiert – in diesem Fall bleibt sein Label unverändert. Dies ist z.B. nützlich, um nur die <em>Optionen</em> des Hotkeys zu ändern.</p>
      <p class="note"><strong>Hinweis:</strong> Wenn das Label oder die Funktion angegeben ist, aber der Hotkey durch eine frühere Verwendung dieses Befehls deaktiviert wurde, bleibt der Hotkey deaktiviert. Um das zu verhindern, fügen Sie das Wort ON in <em>Optionen</em> ein.</p>
      <p>Dieser Parameter kann außerdem einer der folgenden speziellen Werte sein:</p>
      <p><strong>On:</strong> Aktiviert den Hotkey. Wirkungslos, wenn der Hotkey bereits On ist.</p>
      <p><strong>Off:</strong> Deaktiviert den Hotkey. Wirkungslos, wenn der Hotkey bereits Off ist.</p>
      <p><strong>Toggle:</strong> Schaltet den Hotkey auf den entgegengesetzten Zustand (aktiviert oder deaktiviert).</p>
      <p><strong>AltTab</strong> (und andere): Es gibt spezielle Alt-Tab-Hotkey-Aktionen, die <a href="../Hotkeys.htm#alttab">hier</a> beschrieben sind.</p>
      <p class="warning"><strong>Achtung:</strong> Die Benennung eines Labels mit On, Off, Toggle oder AltTab (oder einer anderen von diesem Befehl erkannten Variante) kann zu inkonsistentem Verhalten führen. Es wird dringend empfohlen, diese Werte nicht als Labelnamen zu verwenden.</p>
      </dd>

  <dt>Optionen</dt>
  <dd><p>Eine Zeichenkette, die aus beliebig vielen der folgenden Optionen besteht, optional durch Leerzeichen getrennt. Zum Beispiel: <code class="no-highlight">UseErrorLevel B0</code>.</p>
      <p id="UseErrorLevel"><strong>UseErrorLevel:</strong> Wenn der Befehl auf ein Problem stößt, bewirkt diese Option, dass das Warndialogfenster übersprungen wird, <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf einen der Codes aus der <a href="#ErrorLevel">unteren Tabelle</a> gesetzt wird und der <a href="../misc/Threads.htm">aktuelle Thread</a> fortgesetzt werden kann.</p>
      <p><strong>On:</strong> Aktiviert den Hotkey, wenn er aktuell deaktiviert ist.</p>
      <p><strong>Off:</strong> Deaktiviert den Hotkey, wenn er aktuell aktiviert ist. Dies wird in der Regel verwendet, um einen Hotkey vorerst im deaktivierten Zustand zu erstellen.</p>
      <p><strong>B</strong> oder <strong>B0</strong>: Geben Sie den Buchstaben B an, um den Hotkey zu puffern, wie in <a href="_MaxThreadsBuffer.htm">#MaxThreadBuffer</a> beschrieben. Geben Sie <code class="no-highlight">B0</code> (B mit der Zahl 0) an, um diese Art der Pufferung zu deaktivieren.</p>
      <p><strong>P</strong><em>n</em>: Geben Sie den Buchstaben P an, gefolgt von der <a href="../misc/Threads.htm">Thread-Priorität</a> des Hotkeys. Wenn die P-Option beim Erstellen eines Hotkeys weggelassen wird, wird standardmäßig 0 verwendet.</p>
      <p><strong>T</strong><em>n</em>: Geben Sie den Buchstaben T an, gefolgt von der Anzahl der Threads, die dieser Hotkey maximal haben darf, wie in <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a> beschrieben. Zum Beispiel: <code class="no-highlight">T5</code>.</p>
      <p><strong>I</strong><em>n</em> (InputLevel) <span class="ver">[v1.1.23+]</span>: Geben Sie den Buchstaben I (oder i) an, gefolgt vom <a href="_InputLevel.htm">Inputlevel</a> des Hotkeys. Zum Beispiel: <code class="no-highlight">I1</code>.</p>
      <p>Wenn einer der Optionsbuchstaben weggelassen wird und der Hotkey bereits existiert, bleibt diese Option unverändert. Sollte der Hotkey aber noch nicht existieren (also wenn er kurz davor ist, von diesem Befehl erstellt zu werden), gelten als Optionen standardmäßig solche, die gerade eben aktiv sind. Zum Beispiel wird nur die Instanz von <a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a> verwendet, die dem Ende des Skripts am nächsten ist. Wenn die <a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>-Direktive im Skript nicht vorkommt, wird ihre Standardeinstellung (in diesem Fall OFF) verwendet. Dieses Verhalten gilt auch für <a href="_IfWinActive.htm">#IfWin</a>: Nur das unterste Vorkommen gilt für neue Hotkeys, es sei denn, "<a href="#IfWin">Hotkey IfWin</a>" wurde seit dem Skriptstart ausgeführt.</p>
      </dd>

  <dt>IfWinActive<br>
    IfWinExist<br>
    IfWinNotActive<br>
    IfWinNotExist<br>
    If, Ausdruck<br>
    If, % FunktionObjekt</dt>
  <dd><p>Diese Unterbefehle machen alle danach erstellten Hotkeys und in <span class="ver">[v1.1.28+]</span> alle danach erstellten Hotstrings kontextabhängig. Einzelheiten finden Sie <a href="#IfWin">unten</a>.</p></dd>

  <dt>FensterTitel<br>
    FensterText</dt>
  <dd><p>Innerhalb dieser Parameter wird jede Variablenreferenz wie z.B. %var% nach Abschluss des Befehls dauerhaft wirksam. Mit anderen Worten, spätere Änderungen am Inhalt der Variable werden von existierenden IfWin-Hotkeys/Hotstrings nicht erkannt.</p>
      <p>Wie bei <a href="_IfWinActive.htm">#IfWinActive/Exist</a> verwenden <em>FensterTitel</em> und <em>FensterText</em> die Standardeinstellungen für <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> und <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>, die im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> gesetzt wurden. Einzelheiten finden Sie unter <a href="_IfWinActive.htm">#IfWinActive/Exist</a>.</p></dd>

  <dt id="If">If, Ausdruck</dt>
  <dd>
    <p><span class="ver">[AHK_L 4+]</span>: Verbindet nachfolgend erstellte Hotkeys und in <span class="ver">[v1.1.28+]</span> nachfolgend erstellte Hotstrings mit dem angegebenen #If-Ausdruck. <em>Ausdruck</em> muss ein Ausdruck sein, der irgendwo im Skript mit der <a href="_If.htm">#If-Direktive</a> verwendet wurde. Obwohl dieser Befehl nicht in der Lage ist, neue Ausdrücke zu erstellen, kann er neue Hotkeys/Hotstrings unter Verwendung eines existierenden Ausdrucks erstellen. Siehe <a href="_If.htm#ExDynamic">4. Beispiel von #If</a>.</p>
    <p class="note"><strong>Hinweis:</strong> Der Hotkey-Befehl verwendet die Zeichenkette, die Sie ihm übergeben haben, nicht den ursprünglichen Quellcode. Kommas und Dereferenzzeichen (Prozentzeichen) werden <em>vor</em> dem Aufruf des Befehls interpretiert, daher sollten sie jeweils mit einem Escapezeichen versehen werden, wenn sie Teil des ursprünglichen Ausdrucks sind. <a href="../misc/EscapeChar.htm">Escapesequenzen</a> werden beim Laden des Skripts aufgelöst, daher werden nur die resultierenden Zeichen berücksichtigt, z.B. stimmen sowohl <code>Hotkey, If, x = "`t"</code> als auch <code>Hotkey, If, % "x = """ A_Tab """"</code> mit <code>#If x = "`t"</code> überein.</p>
    <p><strong>Bekannte Einschränkung:</strong> Wenn <em>Ausdruck</em> einen <code>AND</code>/<code>OR</code>-Operator enthält, wird er nicht als existierender Ausdruck erkannt. Um das zu umgehen, verwenden Sie den äquivalenten <code>&amp;&amp;</code>/<code>||</code>-Operator sowohl im ursprünglichen #If-Ausdruck als auch im Ausdruck, der an den Hotkey-Befehl übergeben wurde.</p>
  </dd>
  
  <dt id="IfFn">If, % FunktionObjekt</dt>
  <dd>
    <p><span class="ver">[v1.1.25+]</span>: Verbindet nachfolgend erstellte Hotkeys und in <span class="ver">[v1.1.28+]</span> nachfolgend erstellte Hotstrings mit dem angegebenen <a href="../misc/Functor.htm">Funktionsobjekt</a>. Solche Hotkeys/Hotstrings werden nur ausgeführt, wenn der Aufruf des angegebenen Funktionsobjekts eine Zahl ungleich 0 zurückgibt. Dies ähnelt <code>Hotkey, If, Ausdruck</code>, außer dass jeder Hotkey/Hotstring mehrere <a href="#variant">Hotkey-Varianten</a> bzw. <a href="Hotstring.htm#variant">Hotstring-Varianten</a> haben kann (eine pro Objekt). <em>FunktionObjekt</em> muss eine einzelne Variable sein (kein Ausdruck), die ein Objekt mit einer <em>Call</em>-Methode enthält. Die Funktion oder <em>Call</em>-Methode kann einen Parameter akzeptieren – den <a href="../Variables.htm#ThisHotkey">Namen</a> des Hotkeys/Hotstrings.</p>
    <p>Einmal an den Hotkey-Befehl übergeben, wird das Objekt niemals gelöscht (allerdings wird der beanspruchte Speicher wieder freigegeben, wenn der Prozess beendet wird).</p>
    <p>Das <a href="#ExampleIfFn">Drei-Tasten-Kombinations-Beispiel</a> unten verwendet diesen Unterbefehl.</p>
  </dd>

</dl>

<h2 id="ErrorLevel">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird nur geändert, wenn: 1) der erste Parameter IfWin[Not]Active/Exist ist – in diesem Fall wird ErrorLevel bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt; oder 2) das Wort UseErrorLevel in den <em>Optionen</em> vorhanden ist.</p>
<p><span class="ver">[v1.1.25+]</span>: Wenn der erste Parameter "If" ist, wird eine Ausnahme ausgelöst, wenn der zweite Parameter ungültig ist oder eine Speicherreservierung fehlschlägt. ErrorLevel wird in solchen Fällen nicht gesetzt, wird aber bei Erfolg immer noch auf 0 gesetzt.</p>
<table class="info">
  <tr>
    <th>Error</th>
    <th abbr="Beschr">Beschreibung</th>
  </tr>
  <tr>
    <td>1</td>
    <td>Der <em>Label</em>-Parameter enthält einen nicht-existierenden Labelnamen.</td>
  </tr>
  <tr>
    <td>2</td>
    <td>Der <em>TasteName</em>-Parameter enthält eine oder mehrere Tasten, die entweder nicht erkannt oder von der aktuellen Tastaturbelegung/Sprache nicht unterstützt werden.</td>
  </tr>
  <tr>
    <td>3</td>
    <td>Nicht unterstützte Präfixtaste. Zum Beispiel wird die Verwendung des Mausrads als Präfix in einem Hotkey wie <code>WheelDown &amp; Enter::</code> nicht unterstützt.</td>
  </tr>
  <tr>
    <td>4</td>
    <td>Der <em>TasteName</em>-Parameter ist nicht für die Verwendung mit <a href="../Hotkeys.htm#alttab">AltTab oder ShiftAltTab</a> geeignet. Es ist eine Kombination aus (maximal) zwei Tasten erforderlich. Zum Beispiel: <code>RControl &amp; RShift::AltTab</code>.</td>
  </tr>
  <tr>
    <td>5</td>
    <td>Der Befehl hat versucht, einen nicht-existierenden Hotkey zu ändern.</td>
  </tr>
  <tr>
    <td>6</td>
    <td>Der Befehl hat versucht, eine nicht-existierende <a href="#variant">Variante</a> eines existierenden Hotkeys zu ändern. Um dieses Problem zu lösen, verwenden Sie <a href="#IfWin">Hotkey IfWin</a>, um die Kriterien mit denen des zu ändernden Hotkeys abzustimmen.</td>
  </tr>
  <tr>
    <td>98</td>
    <td>Die Erstellung dieses Hotkeys würde die maximale Anzahl von Hotkeys pro Skript überschreiten (allerdings kann jeder Hotkey unendlich viele <a href="#variant">Varianten</a> haben; und die Anzahl der <a href="../Hotstrings.htm">Hotstrings</a> ist unbegrenzt). Das Limit wurde in <span class="ver">[v1.0.48]</span> von 700 auf 1000 und in <span class="ver">[v1.1.30]</span> von 1000 auf 32762 erhöht.</td>
  </tr>
  <tr>
    <td>99</td>
    <td>Nicht genug Arbeitsspeicher. Dieses Problem tritt sehr selten auf und in der Regel nur dann, wenn das Betriebssystem instabil geworden ist.</td>
  </tr>
</table>
<p>Tipp: Mit der UseErrorLevel-Option kann geprüft werden, ob eine Hotkey-Variante existiert. Zum Beispiel:</p>
<pre>Hotkey, ^!p,, UseErrorLevel
if ErrorLevel in 5,6
    MsgBox Der Hotkey existiert nicht oder hat keine Variante mit den aktuellen IfWin-Kriterien.</pre>

<h2 id="Remarks">Bemerkungen</h2>
<p>Die <a href="#IfWin">aktuelle IfWin-Einstellung</a> bestimmt die <a href="#variant">Variante</a> eines Hotkeys, mit der der Hotkey-Befehl arbeiten wird, und in <span class="ver">[v1.1.28+]</span> die <a href="Hotstring.htm#variant">Variante</a> eines Hotstrings, mit der die <a href="Hotstring.htm">Hotstring</a>-Funktion arbeiten wird.</p>
<p>Wenn das Ziel darin besteht, bestimmte Hotkeys abhängig vom Typ des aktiven Fensters automatisch zu deaktivieren, dann ist <code>Hotkey, ^!c, Off</code> in der Regel weniger gut geeignet als <a href="_IfWinActive.htm">#IfWinActive/Exist</a> (oder das dynamische Äquivalent <a href="#IfWin">Hotkey IfWinActive/Exist</a>).</p>
<p>Die Erstellung von Hotkeys via <a href="../Hotkeys.htm">Zweifach-Doppelpunkt-Label</a> ist performanter als via Hotkey-Befehl, weil so die Hotkeys beim Start des Skripts gebündelt statt einzeln aktiviert werden können. Daher sollten mit diesem Befehl nur Hotkeys erstellt werden, deren Tastennamen erst nach dem Start des Skripts bekannt sind. Dies ist z.B. der Fall, wenn die Hotkeys eines Skripts über eine <a href="IniRead.htm">INI-Datei</a> konfigurierbar sind.</p>
<p>Ein bestimmtes Label kann das Ziel von mehreren Hotkeys sein. Wenn bekannt ist, dass ein Label durch einen Hotkey aufgerufen wurde, lässt sich der Hotkey durch Überprüfung der internen Variable <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a> ermitteln.</p>
<p>Wenn das Skript <a href="Suspend.htm">suspendiert</a> ist und neue Hotkeys hinzugefügt oder aktiviert werden, werden diese ebenfalls suspendiert, bis die Suspension wieder aufgehoben wird (es sei denn, sie sind davor geschützt, wie im <a href="Suspend.htm">Suspend</a>-Abschnitt beschrieben).</p>
<p>Die <a href="_InstallKeybdHook.htm">Tastatur</a>- und/oder <a href="_InstallMouseHook.htm">Maus</a>-Hooks werden bei diesem Befehl je nach Bedarf automatisch installiert oder entfernt.</p>
<p>Obwohl der Hotkey-Befehl nicht in der Lage ist, Hotkeys anderer Skripte direkt zu aktivieren oder zu deaktivieren, kann er sie durch Erstellen oder Aktivieren derselben Hotkeys <a href="../misc/Override.htm">überschreiben</a>. Ob das funktioniert, hängt von mehreren Faktoren ab: 1) Ob der Hotkey, der überschrieben werden soll, ein <a href="ListHotkeys.htm">Hook-Hotkey</a> im anderen Skript ist (hooklose Hotkeys können immer überschrieben werden); 2) Die Tatsache, dass die zuletzt gestarteten Hotkeys im Skript generell Vorrang vor den Hotkeys aus den anderen Skripten haben; 3) Ob der <a href="_InstallKeybdHook.htm">Tastatur</a>- oder <a href="_InstallMouseHook.htm">Maus</a>-Hook beim Aktivieren oder Erstellen des Hotkeys erneut aktiviert wird (in diesem Fall ist das Überschreiben immer erfolgreich).</p>
<p>Sobald ein Skript mindestens einen Hotkey hat, wird es <a href="../Scripts.htm#persistent">persistent</a>; das heißt, dass <a href="ExitApp.htm">ExitApp</a> anstelle von <a href="Exit.htm">Exit</a> verwendet werden sollte, um dieses Skript zu terminieren. Hotkey-Skripte sind außerdem automatisch <a href="_SingleInstance.htm">#SingleInstance</a>, es sei denn, <code>#SingleInstance Off</code> wurde angegeben.</p>

<h2 id="IfWin">Bemerkungen zu <em>Hotkey If</em></h2>
<p>Mit den "Hotkey If"-Befehlen können kontextabhängige <a href="../Hotkeys.htm">Hotkeys</a> und in <span class="ver">[v1.1.28+]</span> kontextabhängige <a href="../Hotstrings.htm">Hotstrings</a> erstellt oder geändert werden, während das Skript läuft (die Direktiven <a href="_If.htm">#If</a> und <a href="_IfWinActive.htm">#IfWinActive/Exist</a> sind hingegen positionsabhängig und werden bereits vor Beginn der Skriptausführung wirksam). Zum Beispiel:</p>
<pre>Hotkey, IfWinActive, ahk_class Notepad
Hotkey, ^!e, MeinLabel  <em>; Erstellt einen Hotkey, der nur in Notepad funktioniert.</em>
Hotstring("::bzw", "beziehungsweise")  <em>; Erstellt einen Hotstring, der nur in Notepad funktioniert.</em></pre>
<p>Die Verwendung von "Hotkey If" macht alle danach erstellten oder geänderten Hotkeys/Hotstrings kontextabhängig. Außerdem schließen sich die If-Unterbefehle gegenseitig aus, d.h. nur der aktuellste Unterbefehl ist wirksam.</p>
<p>Um die Kontextabhängigkeit auszuschalten (so dass danach erstellte Hotkeys/Hotstrings für alle Fenster wirksam sind), geben Sie einen beliebigen If-Unterbefehl ohne Parameter an. Zum Beispiel: <code>Hotkey, If</code> oder <code>Hotkey, IfWinActive</code>.</p>
<p>Wenn "Hotkey If" nie im Skript verwendet wird, wird die unterste im Skript angegebene <a href="_If.htm">#If</a>- oder <a href="_IfWinActive.htm">#IfWin</a>-Direktive (falls vorhanden) für den Hotkey-Befehl oder die <a href="Hotstring.htm">Hotstring</a>-Funktion wirksam.</p>
<p>Wenn ein Maus- oder Tastatur-Hotkey per If-Unterbefehl oder -Direktive deaktiviert wurde, wird er seine ursprüngliche Funktion ausführen, d.h. der Hotkey wird an das aktive Fenster weitergereicht, als gäbe es ihn nicht. Controller-Hotkeys werden allerdings immer weitergereicht, egal ob sie deaktiviert sind oder nicht.</p>

<h2 id="variant">Hotkey-Varianten (-Duplikate)</h2>
<p>Ein bestimmter Hotkey kann mehr als einmal erstellt werden, wenn für jede Definition ein anderes IfWin-Kriterium angegeben wird. Diese werden als <em>Hotkey-Varianten</em> bezeichnet. Zum Beispiel:</p>
<pre>Hotkey, IfWinActive, ahk_class Notepad
Hotkey, ^!c, MeinLabelFürNotepad
Hotkey, IfWinActive, ahk_class WordPadClass
Hotkey, ^!c, MeinLabelFürWordPad
Hotkey, IfWinActive
Hotkey, ^!c, MeinLabelFürAlleAnderenFenster</pre>
<p>Wenn mehr als eine Variante eines Hotkeys zum Auslösen geeignet ist, wird nur die zuerst erstellte Variante ausgelöst. Ausgenommen ist die globale Variante (die ohne IfWin-Kriterium): Sie hat immer die niedrigste Priorität, also wird sie nur ausgelöst, wenn keine andere Variante zum Auslösen geeignet ist.</p>
<p>Beim Erstellen von Hotkey-Duplikaten spielt die Reihenfolge von <a href="../Hotkeys.htm#Symbols">Modifikatorsymbolen</a> wie z.B. <code class="no-highlight">^!+#</code> keine Rolle. Zum Beispiel ist <code class="no-highlight">^!c</code> dasselbe wie <code class="no-highlight">!^c</code>. Die Tasten müssen jedoch einheitlich geschrieben sein. Zum Beispiel ist <em>Esc</em> in diesem Fall nicht dasselbe wie <em>Escape</em> (Groß-/Kleinschreibung ist jedoch egal). Außerdem werden Hotkeys mit einem <a href="../Hotkeys.htm#wildcard">Platzhalter-Präfix (*)</a> und platzhalterlose Hotkeys getrennt behandelt, z.B. hätten <code class="no-highlight">*F1</code> und <code class="no-highlight">F1</code> jeweils ihre eigenen Varianten.</p>
<p>Weitere Informationen zu IfWin-Hotkeys finden Sie unter <a href="_IfWinActive.htm#gen">Allgemeine Bemerkungen von #IfWin</a>.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="../Hotkeys.htm">Hotkeys</a>, <a href="_IfWinActive.htm">#IfWinActive/Exist</a>, <a href="_MaxThreadsBuffer.htm">#MaxThreadsBuffer</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="Suspend.htm">Suspend</a>, <a href="IsLabel.htm">IsLabel()</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Thread.htm">Thread</a>, <a href="Critical.htm">Critical</a>, <a href="Gosub.htm">Gosub</a>, <a href="Return.htm">Return</a>, <a href="Menu.htm">Menu</a>, <a href="SetTimer.htm">SetTimer</a>, <a href="Hotstring.htm">Hotstring()</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Erstellt einen STRG+ALT+Z-Hotkey.</p>
<pre>Hotkey, ^!z, MeinLabel
return

MeinLabel:
MsgBox Sie haben %A_ThisHotkey% gedrückt.
return</pre>
</div>

<div class="ex" id="ExAltTab">
<p><a class="ex_number" href="#ExAltTab"></a> Veranlasst RCtrl &amp; RShift, sich wie Alt-Tab zu verhalten.</p>
<pre>Hotkey, RCtrl &amp; RShift, AltTab</pre>
</div>

<div class="ex" id="ExOn">
<p><a class="ex_number" href="#ExOn"></a> Reaktiviert den WIN+C-Hotkey.</p>
<pre>Hotkey, #c, On</pre>
</div>

<div class="ex" id="ExOff">
<p><a class="ex_number" href="#ExOff"></a> Deaktiviert den UMSCHALT+WIN+C-Hotkey.</p>
<pre>Hotkey, $+#c, Off</pre>
</div>

<div class="ex" id="ExT">
<p><a class="ex_number" href="#ExT"></a> Erlaubt 5 Threads für einen Hotkey.</p>
<pre>Hotkey, ^!a, , T5</pre>
</div>

<div class="ex" id="ExIfWin">
<p><a class="ex_number" href="#ExIfWin"></a> Erstellt einen STRG+ALT+C-Hotkey, der nur in Notepad funktioniert.</p>
<pre>Hotkey, IfWinActive, ahk_class Notepad
Hotkey, ^!c, MeinLabelFürNotepad</pre>
</div>

<div class="ex" id="ExampleIfFn">
<p><a class="ex_number" href="#ExampleIfFn"></a> Erstellt eine GUI, mit der primitive Drei-Tasten-Kombinations-Hotkeys registriert werden können.</p>
<pre>Gui Add, Text, xm, Präfixtaste:
Gui Add, Edit, yp x100 w100 vPräfix, Space
Gui Add, Text, xm, Suffix-Hotkey:
Gui Add, Edit, yp x100 w100  vSuffix, f &amp; j
Gui Add, Button, Default, Registrieren
Gui Show
return

ButtonRegistrieren() {
    global
    Gui Submit, NoHide
    local fn
    fn := Func("HotkeySollteAuslösen").Bind(Präfix)
    Hotkey If, % fn
    Hotkey % Suffix, HotkeyAuslösen
}

HotkeySollteAuslösen(Präfix, thisHotkey) {
    return GetKeyState(Präfix)
}

HotkeyAuslösen() {
    MsgBox %A_ThisHotkey%
}

GuiClose:
GuiEscape:
ExitApp</pre>
</div>

</body>
</html>
