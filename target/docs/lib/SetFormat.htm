<!DOCTYPE HTML>
<html lang="de">
<head>
<title>SetFormat - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der SetFormat-Befehl bestimmt das Format von Integern und Floating-Point-Zahlen, die das Ergebnis von mathematischen Operationen sind." />
<meta name="ahk:equiv-v2" content="lib/Format.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>SetFormat</h1>

<p>Bestimmt das Format von Integern und Floating-Point-Zahlen, die das Ergebnis von mathematischen Operationen sind.</p>
<p class="warning"><strong>Veraltet:</strong> Dieser Befehl ist nicht für neue Skripte empfohlen. Verwenden Sie stattdessen die <a href="Format.htm">Format</a>-Funktion.</p>

<pre class="Syntax"><span class="func">SetFormat</span>, ZahlTyp, Format</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>ZahlTyp</dt>
  <dd><p>Muss entweder IntegerFast, FloatFast, Integer oder Float sein (die beiden schnellen Modi benötigen <span class="ver">[v1.0.48+]</span>; siehe <a href="#Fast">Schnell vs. Langsam</a> unten).</p></dd>

  <dt>Format</dt>
  <dd><p>Wenn <em>ZahlTyp</em> Integer oder IntegerFast ist, geben Sie H oder HEX für hexadezimal oder D für dezimal an. Hexadezimalzahlen beginnen mit dem 0x-Präfix (z.B. 0xFF). In <span class="ver">[AHK_L 42+]</span> sind die Buchstaben A-F von hexadezimalen Integern kleingeschrieben, wenn dieser Parameter <code class="no-highlight">h</code> ist, und großgeschrieben, wenn er <code class="no-highlight">H</code> ist.</p>
      <p id="sci">Wenn <em>ZahlTyp</em> Float oder FloatFast ist, kann <code><i>Gesamtbreite</i>.<i>Dezimalstellen</i></code> angegeben werden (z.B. <code class="no-highlight">0.6</code>). In <span class="ver">[v1.0.46.11+]</span> kann der Buchstabe "e" angefügt werden, um eine wissenschaftliche Schreibweise zu erzeugen, z.B. <code class="no-highlight">0.6e</code> oder <code class="no-highlight">0.6E</code> (der Großbuchstabe bewirkt, dass in jeder Zahl ein großes statt kleines E erscheint). Hinweis: In AutoHotkey 1.x muss die wissenschaftliche Schreibweise einen Dezimalpunkt enthalten; z.B. ist <code>1.0e1</code> gültig, aber nicht <code>1e1</code>.</p>
      <p><em>Gesamtbreite</em> ist üblicherweise 0, wodurch Zahlen nicht mit Nullen oder Leerzeichen aufgefüllt werden. Ein Wert größer 0 bewirkt, dass Zahlen mit Leerzeichen oder Nullen aufgefüllt werden (siehe <a href="#Float">Floating-Point-Format</a> unten), um sie auf diese Breite zu bringen.</p>
    <p id="DecimalPlaces"><em>Dezimalstellen</em> ist die Anzahl der Dezimalstellen, die angezeigt werden sollen (inklusive Rundung). Wenn dies leer oder 0 ist, wird weder der Nachkommabereich noch der Dezimalpunkt angezeigt, d.h. Floating-Point-Ergebnisse werden als Integer angezeigt, nicht als Floating-Point-Zahlen. Der Standardwert ist 6.</p>
    <p>Auffüllen: Wenn <em>Gesamtbreite</em> groß genug zum Auffüllen ist, werden Leerzeichen an die linke Seite angefügt, d.h. jede Zahl wird rechtsbündig sein. Um stattdessen eine Linksbündigkeit zu bewirken, setzen Sie ein Minuszeichen vor <em>Gesamtbreite</em>. Um stattdessen mit Nullen aufzufüllen, setzen Sie eine Null vor <em>Gesamtbreite</em> (z.B. <code class="no-highlight">06.2</code>).</p></dd>

</dl>

<h2 id="Fast">Schnell vs. Langsam</h2>
<p>In <span class="ver">[v1.0.48+]</span> ist es möglich, IntegerFast anstelle von Integer und FloatFast anstelle von Float zu verwenden.</p>
<p><strong>Vorteile:</strong> Der schnelle Modus bewahrt die Fähigkeit von Variablen, Integer und Floating-Point-Zahlen <a href="../Concepts.htm#caching">zwischenzuspeichern</a>, was numerisch-intensive Operationen erheblich beschleunigt. (Der langsame Modus hingegen bewirkt, dass alle numerischen Ergebnisse sofort in Zeichenketten umgewandelt und als solche gespeichert werden.)</p>
<p id="FastDisadv"><strong>Nachteile:</strong> Beim Speichern einer Zahl in eine Variable verzögert der schnelle Modus die Effekte von SetFormat, bis das Skript tatsächlich eine Text-/Zeichenkettenversion dieser Variable benötigt (z.B. zur Anzeige in einem <a href="MsgBox.htm">Mitteilungsfenster</a>). Da zu diesem Zeitpunkt ein anderes SetFormat aktiv sein kann (z.B. mehr oder weniger Dezimalstellen), können die Ergebnisse unerwartet ausfallen. Um das verzögerte Format sofort in Kraft treten zu lassen, verwenden Sie eine Operation wie <code>HexWert .= ""</code>, die eine leere Zeichenkette an die aktuell in <em>HexWert</em> gespeicherte Zahl anfügt.</p>
<p>Wenn der langsame Modus "Integer" oder "Float" irgendwo im Skript verwendet wird (ohne dass diese SetFormat-Zeile ausgeführt werden muss), wird die <a href="../Concepts.htm#caching">Zwischenspeicherung</a> von Integern bzw. Floating-Point-Zahlen deaktiviert, sobald das Skript gestartet wird.</p>

<h2 id="Float">Floating-Point-Format</h2>
<p>In <span class="ver">[v1.0.48+]</span> haben Floating-Point-Variablen intern eine Genauigkeit von etwa 15 Stellen, es sei denn, <code>SetFormat Float</code> (also der langsame Modus) ist irgendwo im Skript vorhanden, dann wird die gespeicherte Genauigkeit von Floating-Point-Zahlen durch <em><a href="#DecimalPlaces">Dezimalstellen</a></em> ermittelt (wie es schon in den Versionen vor 1.0.48 der Fall war). Mit anderen Worten, sobald ein Floating-Point-Ergebnis in eine Variable gespeichert wurde, geht die zusätzliche Genauigkeit verloren und kann nicht wiederverwendet werden, ohne die Berechnung erneut mit so etwas wie <code>SetFormat, Float, 0.15</code> durchzuführen. Um den Verlust dieser Genauigkeit zu vermeiden, verzichten Sie auf <code>SetFormat Float</code> oder verwenden Sie stattdessen <code>SetFormat FloatFast</code>.</p>
<p>Egal ob der langsame oder schnelle Modus aktiv ist, Floating-Point-Ergebnisse und -Variablen werden jedes Mal auf <em><a href="#DecimalPlaces">Dezimalstellen</a></em> abgerundet, wenn sie angezeigt oder in Zeichenketten umgewandelt werden (z.B. <a href="MsgBox.htm">MsgBox</a> oder <a href="FileAppend.htm">FileAppend</a>). Um die volle Genauigkeit zu sehen, verwenden Sie so etwas wie <code>SetFormat, FloatFast, 0.15</code>.</p>
<p>Um eine Floating-Point-Zahl in einen Integer umzuwandeln, verwenden Sie <code>Var := <a href="Math.htm#Round">Round</a>(Var)</code>, <code>Var := <a href="Math.htm#Floor">Floor</a>(Var)</code> oder <code>Var := <a href="Math.htm#Ceil">Ceil</a>(Var)</code>. Um einen Integer in eine Floating-Point-Zahl umzuwandeln, addieren Sie 0.0 (z.B. <code>Var += 0.0</code>) oder verwenden Sie so etwas wie <code>MeinFloat := <a href="Math.htm#Round">Round</a>(MeinInteger, 1)</code>.</p>
<p>Die interne Variable <strong>A_FormatFloat</strong> enthält das aktuelle Floating-Point-Format (z.B. <code class="no-highlight">0.6</code>).</p>
<h2 id="Integer">Integer-Format</h2>
<p>Integer-Ergebnisse werden normalerweise im dezimalen und nicht im hexadezimalen Format angezeigt. Um auf hexadezimal zu wechseln, verwenden Sie <code>SetFormat, IntegerFast, Hex</code>. Dies kann auch verwendet werden, um einen Integer in einen Hexadezimalwert umzuwandeln (oder umgekehrt), wie im Beispiel ganz unten auf dieser Seite gezeigt.</p>
<p>Direkt geschriebene Integer können hexadezimal oder dezimal sein. Hexadezimale Integer beginnen mit dem 0x-Präfix (z.B. <code>0xA9</code>). Sie können überall dort verwendet werden, wo ein numerischer Wert erwartet wird. Zum Beispiel ist <code>Sleep 0xFF</code> äquivalent zu <code>Sleep 255</code>, unabhängig vom aktuellen Integer-Format, das mit SetFormat bestimmt wurde.</p>
<p>AutoHotkey unterstützt vorzeichenfähige 64-Bit-Integer im Bereich von -9223372036854775808 (-0x8000000000000000) bis 9223372036854775807 (0x7FFFFFFFFFFFFFFF).</p>
<p>Die interne Variable <strong>A_FormatInteger</strong> enthält das aktuelle Integer-Format (H oder D).</p>

<h2 id="remarks">Allgemeine Bemerkungen</h2>
<p>Wenn SetFormat nicht verwendet wird, sind Integer standardmäßig im Dezimalformat und Floating-Point-Zahlen standardmäßig im <code class="no-highlight">0.6</code>-Format. Jeder neue <a href="../misc/Threads.htm">Thread</a> (z.B. ein <a href="../Hotkeys.htm">Hotkey</a>, ein <a href="Menu.htm">benutzerdefinierter Menüpunkt</a> oder eine <a href="SetTimer.htm">zeitgesteuerte</a> Subroutine) verwendet zunächst diese Standardeinstellungen. Um diese zu ändern, muss SetFormat im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> (ganz oben im Skript) angegeben werden.</p>
<p>Eine altmodische Zuweisung wie <code>x = %y%</code> entfernt alle Leerzeichen am Anfang und Ende, die z.B. beim Auffüllen entstehen. Um das zu verhindern, verwenden Sie <a href="AutoTrim.htm">AutoTrim</a> oder den <a href="SetExpression.htm">Doppelpunkt-Gleich-Operator</a> (z.B. <code>x := y</code>).</p>
<p>Ob eine Variable einen numerischen Wert enthält, können Sie mit <a href="IfIs.htm">If Var is [not] Typ</a> feststellen.</p>
<p>Um einen Integer mit Nullen oder Leerzeichen aufzufüllen, ohne Floating-Point-Berechnungen durchzuführen, gehen Sie wie folgt vor:</p>
<pre>Var := "          " . Var  <em>; Zwischen den Anführungszeichen sind 10 Leerzeichen. Um stattdessen mit Nullen aufzufüllen, ersetzen Sie die Leerzeichen mit Nullen.</em>
Var := SubStr(Var, -9)  <em>; Dies füllt die Zahl in <i>Var</i> mit Leerzeichen bis zu einer Gesamtbreite von 10 Zeichen auf.</em>
Var := SubStr("          " . Var, -9)  <em>; Eine einzeilige Alternative für die beiden oberen Zeilen.</em></pre>

<h2 id="Related">Siehe auch</h2>
<p><a href="Format.htm">Format()</a>, <a href="../Concepts.htm#caching">Caching (Zwischenspeicherung)</a>, <a href="SetExpression.htm">Ausdruckszuweisung (:=)</a>, <a href="EnvAdd.htm">EnvAdd</a>, <a href="EnvSub.htm">EnvSub</a>, <a href="EnvMult.htm">EnvMult</a>, <a href="EnvDiv.htm">EnvDiv</a>, <a href="AutoTrim.htm">AutoTrim</a>, <a href="IfIs.htm">If Var is [not] Typ</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Zeigt verschiedene Verwendungsmöglichkeiten.</p>
<pre>Var := 11.333333
SetFormat, float, 6.2
Var -= 1  <em>; Setzt Var auf 10.33 mit einem Leerzeichen am Anfang, da die Gesamtbreite 6 ist.</em>
SetFormat, float, 0.2
Var += 1  <em>; Setzt Var auf 11.33 ohne Leerzeichen am Anfang.</em>
SetFormat, float, 06.0
Var += 0  <em>; Setzt Var auf 000011</em>

<em>; Wandelt einen dezimalen Integer in hexadezimal um:</em>
SetFormat, IntegerFast, hex
Var += 0  <em>; Setzt Var (das vorher 11 enthielt) auf 0xb.</em>
Var .= ""  <em>; Notwendig wegen schnellem Modus.</em>
SetFormat, IntegerFast, d</pre>
</div>

</body>
</html>
