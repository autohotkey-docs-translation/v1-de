<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Input - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der Input-Befehl wartet auf die Eingabe einer Zeichenkette durch den Benutzer." />
<meta name="ahk:equiv-v2" content="lib/InputHook.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Input</h1>

<p>Wartet auf die Eingabe einer Zeichenkette durch den Benutzer.</p>

<pre class="Syntax"><span class="func">Input</span> <span class="optional">, AusgabeVar, Optionen, EndTasten, VergleichListe</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Ausgabevariable, in der die Benutzereingabe gespeichert werden soll (standardmäßig werden auch künstliche Eingaben erfasst).</p>
      <p>Wenn dieser und die anderen Parameter weggelassen werden, wird jede Eingabeerfassung, die in einem anderen <a href="../misc/Threads.htm">Thread</a> aktiv ist, beendet und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf das Wort NewInput gesetzt. Das <a href="../misc/ErrorLevel.htm">ErrorLevel</a> des aktuellen Befehls wird dagegen auf 0 gesetzt, wenn der Befehl eine vorherige Eingabeerfassung beendet hat, oder auf 1, wenn es keine zum Beenden gibt.</p>
      <p>In <em>AusgabeVar</em> werden keine Tastendrücke im eigentlichen Sinne gespeichert. Stattdessen werden Zeichen gespeichert, die durch die Tastendrücke erzeugt werden, gemäß der Tastaturbelegung/Sprache des aktiven Fensters. Folglich werden Tastendrücke, die keine Zeichen erzeugen (wie z.B. <kbd>Bild↑</kbd> und <kbd>Pos1</kbd>), nicht gespeichert (sie können aber über den <em>EndTasten</em>-Parameter unten erkannt werden).</p>
      <p class="warning"><strong>Hinweis:</strong> <kbd>Esc</kbd> wird in das ASCII-ESC-Zeichen <code>Chr(27)</code> übersetzt. Dies kann durch Einfügen von <code class="no-highlight">{Esc}</code> in <em>EndTasten</em> verhindert werden, aber dann wird die Eingabeerfassung durch Drücken von <kbd>Esc</kbd> beendet.</p>
      <p>Leerraumzeichen wie z.B. <kbd>Tab</kbd> (`t) werden direkt gespeichert. <kbd>Enter</kbd> wird als Zeilenvorschub (`n) gespeichert.</p></dd>

  <dt>Optionen</dt>
  <dd><p>Eine Zeichenkette, die aus beliebig vielen der folgenden Optionen besteht (in beliebiger Reihenfolge, optional durch Leerzeichen getrennt):</p>
      <p><strong>B:</strong> <kbd>Backspace</kbd> wird ignoriert. Normalerweise wird durch Drücken von <kbd>Backspace</kbd> während einer Eingabeerfassung das zuletzt gedrückte Zeichen vom Ende der Zeichenkette entfernt. Hinweis: Wenn der Eingabetext sichtbar ist (z.B. in einem Texteditor) und die Pfeiltasten oder andere Mittel zur Navigation innerhalb des Textes verwendet werden, entfernt <kbd>Backspace</kbd> weiterhin das letzte Zeichen, nicht das Zeichen nach dem Textcursor (Einfügemarke).</p>
      <p><strong>C:</strong> Groß-/Kleinschreibung-sensitiv. Normalerweise ist <em>VergleichListe</em> nicht Groß-/Kleinschreibung-sensitiv (in den Versionen vor 1.0.43.03 wurden nur die Groß- und Kleinbuchstaben von A bis Z erkannt, nicht aber Buchstaben wie ü/Ü).</p>
      <p><strong>I:</strong> Ignoriert Eingaben, die von <a href="Send.htm#SendEvent">SendEvent</a> mit einem <a href="SendLevel.htm">Sendlevel</a> von 0 erzeugt werden. <a href="Send.htm#SendInput">SendInput</a> und <a href="Send.htm#SendPlay">SendPlay</a> werden hingegen immer ignoriert, egal ob diese Einstellung aktiv ist oder nicht. <span class="ver">[v1.1.31+]</span>: Direkt nach dem Optionsbuchstaben kann eine Zahl angegeben werden, um den minimalen Sendlevel zu bestimmen. <code class="no-highlight">I</code> und <code class="no-highlight">I1</code> sind äquivalent. <code class="no-highlight">I0</code> ist dasselbe wie, als würde die Option fehlen.</p>
      <p><strong>L:</strong> Längenlimit (z.B. <code class="no-highlight">L5</code>). Die maximal erlaubte Länge der Eingabe. Wenn der Text diese Länge erreicht, wird die Eingabeerfassung beendet und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf das Wort Max gesetzt, es sei denn, der Text stimmt mit einem der Schlüsselwörter in <em>VergleichListe</em> überein, dann wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf das Wort Match gesetzt. Wenn diese Option nicht angegeben ist, gilt standardmäßig ein Längenlimit von 16383 Zeichen, was auch der maximal zulässige Wert in Versionen vor <span class="ver">[v1.1.31]</span> ist.</p>
      <p><strong>M:</strong> Modifizierte Tastendrücke wie <kbd>Strg</kbd>+<kbd>A</kbd> bis <kbd>Strg</kbd>+<kbd>Z</kbd> werden erkannt und in echte ASCII-Zeichen umgewandelt, falls möglich. Das folgende Beispiel zeigt, wie <kbd>Strg</kbd>+<kbd>C</kbd> erkannt werden kann:</p>
      <pre>StrgC := Chr(3) <em>; Speichert das Zeichen für STRG+C in die Variable StrgC.</em>
Input, AusgabeVar, L1 M
if (AusgabeVar = StrgC)
    MsgBox, Sie haben STRG+C gedrückt.
ExitApp</pre>
      <p class="note"><strong>Hinweis:</strong> <kbd>Strg</kbd>+<kbd>A</kbd> bis <kbd>Strg</kbd>+<kbd>Z</kbd> sind die Zeichen von <a href="Chr.htm">Chr(1)</a> bis <a href="Chr.htm">Chr(26)</a>. Durch die M-Option kann es passieren, dass sich einige Tastaturkurzbefehle, wie z.B. <kbd>Strg</kbd>+<kbd>←</kbd>, während einer aktiven Eingabeerfassung falsch verhalten.</p>
      <p><strong>T:</strong> Zeitlimit (z.B. <code class="no-highlight">T3</code>). Die zu wartenden Sekunden, bevor die Eingabeerfassung beendet und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf das Wort Timeout gesetzt wird. Wenn die Eingabeerfassung das Zeitlimit überschreitet, wird <em>AusgabeVar</em> auf die Zeichenkette gesetzt, die der Benutzer währenddessen eingeben konnte. Es kann eine Floating-Point-Zahl wie z.B. <code class="no-highlight">T2.5</code> angegeben werden.</p>
      <p id="vis"><strong>V:</strong> Sichtbar. Normalerweise wird die Eingabe des Benutzers blockiert (unsichtbar für das Betriebssystem gemacht). Verwenden Sie diese Option, damit die Tastendrücke des Benutzers direkt an das aktive Fenster gesendet werden.</p>
      <p id="asterisk"><strong>*:</strong> Platzhalter (überall finden). Normalerweise muss alles, was der Benutzer eingibt, exakt mit einem der Schlüsselwörter in <em>VergleichListe</em> übereinstimmen, um eine Übereinstimmung zu bewirken. Verwenden Sie diese Option, um häufiger eine Übereinstimmung zu finden, indem die gesamte Länge des Eingabetextes durchsucht wird.</p>
      <p id="E"><strong>E</strong> <span class="ver">[v1.1.20+]</span>: Einzelzeichen-Endungstasten werden als Zeichencode statt als Tastencode behandelt. Dies ermöglicht konsistentere Ergebnisse, wenn die Tastaturbelegung des aktiven Fensters von der des Skripts abweicht. Dies verhindert auch, dass Tastenkombinationen, die die angegebenen Endungszeichen nicht erzeugen, die Eingabeerfassung beenden; z.B. wird @ als Endungstaste in einer US-Belegung durch <kbd>Umschalt</kbd>+<kbd>2</kbd> ausgelöst, aber nicht durch <kbd>Strg</kbd>+<kbd>Umschalt</kbd>+<kbd>2</kbd> (wenn die E-Option verwendet wird). Wenn zusätzlich noch die C-Option angegeben ist, ist das Endungszeichen Groß-/Kleinschreibung-sensitiv.</p>
      </dd>

  <dt>EndTasten</dt>
  <dd><p>Eine Liste beliebig vieler Tasten, von denen jede, wenn gedrückt, zur Beendigung der Eingabeerfassung führt (die Endungstaste selbst wird nicht in <em>AusgabeVar</em> geschrieben). Bei einer auf diese Weise beendeten Eingabeerfassung wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf das Wort EndKey gefolgt von einem Doppelpunkt und den Namen der Endungstaste gesetzt. Beispiele: <code class="no-highlight">EndKey:.</code>, <code class="no-highlight">EndKey:Escape</code>.</p>
      <p><em>EndTasten</em> verwendet ein ähnliches Format wie der <a href="Send.htm">Send</a>-Befehl. Zum Beispiel würde die Angabe von <code class="no-highlight">{Enter}.{Esc}</code> bewirken, dass die Eingabeerfassung durch <kbd>Enter</kbd>, <kbd>.</kbd> oder <kbd>Esc</kbd> beendet wird. Um die geschweiften Klammern als Endungstasten zu verwenden, geben Sie <code class="no-highlight">{{}</code> und/oder <code class="no-highlight">{}}</code> an.</p>
      <p>Um <kbd>Strg</kbd>, <kbd>Alt</kbd> oder <kbd>Umschalt</kbd> als Endungstasten zu verwenden, geben Sie die linke und/oder rechte Version der Taste an, nicht die neutrale Version. Zum Beispiel müssen Sie <code class="no-highlight">{LControl}{RControl}</code> anstelle von <code class="no-highlight">{Control}</code> angeben.</p>
      <p><span class="ver">[v1.0.14+]</span>: Obwohl modifizierte Tasten wie <kbd>Alt</kbd>+<kbd>C</kbd> (!c) nicht unterstützt werden, können bestimmte Zeichen, die das Gedrückthalten von <kbd>Umschalt</kbd> oder <kbd>AltGr</kbd> erfordern - insbesondere Satzzeichen wie z.B. <code class="no-highlight">?!:@&amp;{}</code> - verwendet werden. <span class="ver">[v1.1.20+]</span>: Andere Zeichen werden mit der oben beschriebenen E-Option unterstützt. Verwendet man sowohl die E- als auch M-Option, werden die modifizierten Tasten von <kbd>Strg</kbd>+<kbd>A</kbd> bis <kbd>Strg</kbd>+<kbd>Z</kbd> durch Einfügen der entsprechenden ASCII-Steuerzeichen in <em>EndTasten</em> unterstützt.</p>
      <p>Es kann auch explizit ein eindeutiger virtueller Tastencode wie <code class="no-highlight">{vkFF}</code> angegeben werden. Dies ist nützlich für den seltenen Fall, dass eine Taste keinen Namen hat und beim Drücken kein sichtbares Zeichen erzeugt. Schauen Sie sich die Anleitung am Ende der <a href="../KeyList.htm#SpecialKeys">Tastenliste</a> an, um zu erfahren, wie der virtuelle Tastencode einer solchen Taste ermittelt werden kann.</p>
    </dd>

  <dt>VergleichListe</dt>
  <dd><p>Eine kommagetrennte Liste von Schlüsselwörtern, von denen jedes zur Beendigung der Eingabeerfassung führt (in diesem Fall wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf das Wort Match gesetzt). Alles, was der Benutzer eingibt, muss exakt mit einem der Schlüsselwörter in der Liste übereinstimmen, um eine Übereinstimmung zu bewirken (es sei denn, die <a href="#asterisk">*-Option</a> wird verwendet). <strong>Alle Leer- und Tabulatorzeichen neben den Kommas sind relevant</strong>, d.h. sie sind Teil der Vergleichszeichenkette. Wenn <em>VergleichListe</em> z.B. <code class="no-highlight">ABC , XYZ</code> ist, muss der Benutzer ein Leerzeichen nach ABC oder vor XYZ eingeben, damit eine Übereinstimmung erfolgt.</p>
      <p>Zwei aufeinanderfolgende Kommas ergeben ein direkt geschriebenes Komma. Zum Beispiel würde das Folgende ein direkt geschriebenes Komma nach dem Wort Zkette1 erzeugen: <code class="no-highlight">Zkette1,,,Zkette2</code>. Entsprechend enthält die folgende Liste nur ein einzelnes Element mit einem direkt geschriebenen Komma dazwischen: <code class="no-highlight">einzelnes,,Element</code>.</p>
    <p>Da die Elemente in <em>VergleichListe</em> nicht als einzelne Parameter behandelt werden, kann die Liste komplett in einer Variable enthalten sein. Tatsächlich muss sie ganz oder teilweise in einer Variable enthalten sein, wenn ihre Länge 16383 Zeichen überschreitet, da dies die maximale Länge einer Skriptzeile ist. Zum Beispiel könnte <em>VergleichListe</em> aus <code class="no-highlight">%Liste1%,%Liste2%,%Liste3%</code> bestehen, wobei jede der Variablen eine lange Unterliste von Schlüsselwörtern enthält.</p>
    </dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, eine Ausnahme auszulösen, wenn er ohne Parameter aufgerufen wird und wenn keine Eingabeerfassung aktiv ist. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf einen der folgenden Werte gesetzt:</p>
<table class="info">
  <tr>
    <th style="width:15%">Wert</th>
    <th abbr="Beschr">Beschreibung</th>
  </tr>
  <tr>
    <td><p>1 oder 0</p></td>
    <td><p>Jedes Mal, wenn der Befehl ohne Parameter verwendet wird, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt, wenn der Befehl eine vorherige Eingabeerfassung beendet, oder auf 1, wenn keine Eingabeerfassung aktiv ist.</p></td>
  </tr>
  <tr>
    <td>NewInput</td>
    <td>Die Eingabeerfassung wurde von einem anderen <a href="../misc/Threads.htm">Thread</a> unterbrochen, der den Input-Befehl verwendet hat.</td>
  </tr>
  <tr>
    <td>Max</td>
    <td>Die Eingabeerfassung hat die maximal erlaubte Länge erreicht und stimmt mit keinem der Schlüsselwörter in <em>VergleichListe</em> überein.</td>
  </tr>
  <tr>
    <td>Timeout</td>
    <td>Die Eingabeerfassung hat das Zeitlimit überschritten.</td>
  </tr>
  <tr>
    <td>Match</td>
    <td>Die Eingabeerfassung stimmt mit einem der Schlüsselwörter in <em>VergleichListe</em> überein.</td>
  </tr>
  <tr>
    <td>EndKey:<em>Name</em></td>
    <td>
      <p>Eine der Endungstasten in <em>EndTasten</em> wurde gedrückt, um die Eingabeerfassung zu beenden. In diesem Fall enthält <a href="../misc/ErrorLevel.htm">ErrorLevel</a> das Wort EndKey, gefolgt von einem Doppelpunkt und den Namen der verantwortlichen Endungstaste ohne geschweifte Klammern, z.B. <code class="no-highlight">EndKey:Enter</code>, <code class="no-highlight">EndKey:Escape</code>, etc.</p>
      <p>Beachten Sie, dass <em>Name</em> der "normalisierte" Name der Taste ist, unabhängig von der Schreibweise in <em>EndTasten</em>. Zum Beispiel bewirkt sowohl <code class="no-highlight">{Esc}</code> als auch <code class="no-highlight">{vk1B}</code>, dass <code class="no-highlight">EndKey:Escape</code> erzeugt wird. Mit <a href="GetKey.htm">GetKeyName()</a> kann der normalisierte Name abgerufen werden.</p>
      <p>Wenn die <a href="#E">E-Option</a> verwendet wurde, ist <em>Name</em> das tatsächlich eingegebene Zeichen (sofern vorhanden). Andernfalls wird der Tastenname gemäß der aktiven Tastaturbelegung des Skripts ermittelt.</p>
      <p>Vor <span class="ver">[v1.1.20]</span>, wenn der VK-Code der Endungstaste im Bereich von 0x41 (A) bis 0x5A (Z) war, enthielt ErrorLevel üblicherweise das entsprechende ASCII-Zeichen, selbst wenn es für die aktuelle Tastaturbelegung nicht korrekt war. In <span class="ver">[v1.1.20+]</span> wird das korrekte Zeichen verwendet. Wenn ein Zeichen im Bereich von A bis Z verwendet wird, ist es aus Gründen der Abwärtskompatibilität großgeschrieben; andernfalls ist es in der Regel kleingeschrieben.</p>
    </td>
  </tr>
</table>

<h2 id="Remarks">Bemerkungen</h2>
<p>Wenn dieser Befehl verwendet wird, während eine Eingabeerfassung in einem anderen <a href="../misc/Threads.htm">Thread</a> aktiv ist, wird diese Eingabeerfassung beendet und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf das Wort NewInput gesetzt. Danach wird die neue Eingabeerfassung gestartet (sofern Parameter angegeben sind).</p>
<p>Während eine Eingabeerfassung aktiv ist, können neue <a href="../misc/Threads.htm">Threads</a> wie <a href="Menu.htm">benutzerdefinierte Menüpunkte</a> oder <a href="SetTimer.htm">zeitgesteuerte Subroutinen</a> erstellt werden.</p>
<p>Tastatur-<a href="../Hotkeys.htm">Hotkeys</a> funktionieren auch während einer aktiven Eingabeerfassung, können aber nicht ausgelöst werden, wenn eine der erforderlichen Modifikatortasten unterdrückt ist oder wenn der Hotkey die <em>reg</em>-Methode verwendet und seine Suffix-Taste unterdrückt ist. Zum Beispiel <em>könnte</em> der Hotkey <code>^+a::</code> durch Input überschrieben werden, während <code>$^+a::</code> Vorrang vor Input hätte.</p>
<p>Wenn die Eingabeerfassung nicht <a href="#vis">sichtbar</a> ist, werden alle Tasten unterdrückt, außer <a href="../KeyList.htm#modifier">reguläre Modifikatortasten</a>, CapsLock, NumLock und ScrollLock. Sogar <em>EndTasten</em> und Tastendrücke, die <em>AusgabeVar</em> nicht verändern, werden unterdrückt. Zum Beispiel hat <kbd>Pos1</kbd> keinen Effekt, während <kbd>LWin</kbd>+<kbd>D</kbd> das Startmenü öffnet (weil <kbd>D</kbd> unterdrückt ist und <kbd>LWin</kbd> nicht).</p>
<p>Wenn ein Skript diesen Befehl zum ersten Mal verwendet, wird der <a href="_InstallKeybdHook.htm">Tastatur-Hook</a> installiert (falls noch nicht geschehen). Außerdem wird das Skript <a href="_Persistent.htm">persistent</a>; das heißt, dass <a href="ExitApp.htm">ExitApp</a> anstelle von <a href="Exit.htm">Exit</a> verwendet werden sollte, um dieses Skript zu terminieren. Jedes Mal, wenn das Skript einen <a href="Suspend.htm">Suspend</a>- oder <a href="Hotkey.htm">Hotkey</a>-Befehl erreicht, wird geprüft, ob der Tastatur-Hook noch von Hotkeys oder Hotstrings beansprucht wird. Ist dies nicht der Fall, wird der Hook wieder deinstalliert.</p>
<p>Bei mehreren Sprachen oder Tastaturbelegungen verwendet Input die Tastaturbelegung des aktiven Fensters, nicht die des Skripts (egal ob die Eingabeerfassung <a href="#vis">sichtbar</a> ist oder nicht). In den Versionen vor 1.0.44.03 wird die Tastaturbelegung des Skripts verwendet.</p>
<p>Trotz ihrer geringeren Flexibilität sind <a href="../Hotstrings.htm">Hotstrings</a> in der Regel einfacher zu verwenden als der Input-Befehl.</p>
<p><a href="InputHook.htm">InputHook()</a> ist flexibler als der Input-Befehl.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="KeyWait.htm">KeyWait</a>, <a href="../Hotstrings.htm">Hotstrings</a>, <a href="InputBox.htm">InputBox</a>, <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="IfIn.htm">If Var [not] in/contains VergleichListe</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExAnyKey">
<p><a class="ex_number" href="#ExAnyKey"></a> Wartet, bis der Benutzer eine beliebige Taste drückt. Tasten, die keine sichtbaren Zeichen erzeugen (z.B. Modifikatortasten, Funktionstasten und Pfeiltasten), sind als Endungstasten aufgelistet, so dass auch diese erkannt werden.</p>
<pre>Input, EinzelTaste, L1, {LControl}{RControl}{LAlt}{RAlt}{LShift}{RShift}{LWin}{RWin}{AppsKey}{F1}{F2}{F3}{F4}{F5}{F6}{F7}{F8}{F9}{F10}{F11}{F12}{Left}{Right}{Up}{Down}{Home}{End}{PgUp}{PgDn}{Del}{Ins}{BS}{CapsLock}{NumLock}{PrintScreen}{Pause}</pre>
</div>

<div class="ex" id="ExHotkey">
<p><a class="ex_number" href="#ExHotkey"></a> Dies ist ein funktionierendes Hotkey-Beispiel. Da der Hotkey das Tilde-Präfix (~) hat, wird sein eigener Tastendruck an das aktive Fenster weitergereicht. Wenn Sie also <code class="no-highlight">&lt;btw</code> (oder eines der anderen Schlüsselwörter) in einem Texteditor eingeben, wird das Skript automatisch eine Aktion Ihrer Wahl ausführen (z.B. den eingegebenen Text ersetzen). Eine alternative Version dieses Beispiels finden Sie unter <a href="Switch.htm#ExInput">Switch</a>.</p>
<pre>~&lt;::
Input, BenutzerEingabe, V T5 L4 C, {enter}.{esc}{tab}, btw,otoh,fl,ahk,ca
if (ErrorLevel = "Max")
{
    MsgBox, Ihre Eingabe "%BenutzerEingabe%" hat die maximale Textlänge erreicht.
    return
}
if (ErrorLevel = "Timeout")
{
    MsgBox, Sie haben "%BenutzerEingabe%" innerhalb der verfügbaren Zeit eingegeben.
    return
}
if (ErrorLevel = "NewInput")
    return
If InStr(ErrorLevel, "EndKey:")
{
    MsgBox, Sie haben "%BenutzerEingabe%" eingegeben und die Eingabeerfassung mit %ErrorLevel% beendet.
    return
}
<em>; Andernfalls wurde eine Übereinstimmung gefunden.</em>
if (BenutzerEingabe = "btw")
    Send, {backspace 4}by the way
else if (BenutzerEingabe = "otoh")
    Send, {backspace 5}on the other hand
else if (BenutzerEingabe = "fl")
    Send, {backspace 3}Florida
else if (BenutzerEingabe = "ca")
    Send, {backspace 3}California
else if (BenutzerEingabe = "ahk")
    Run, https://www.autohotkey.com
return
</pre>
</div>

</body>
</html>
