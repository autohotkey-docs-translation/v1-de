<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Menu - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der Menu-Befehl erstellt, löscht, ändert und zeigt Menüs und Menüpunkte an, ändert das Tray-Symbol und dessen Tooltip, oder bestimmt, ob das versteckte Hauptfenster eines kompilierten Skripts geöffnet werden kann." />
<meta name="ahk:equiv-v2" content="lib/Menu.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Menu</h1>

<p>Erstellt, löscht, ändert und zeigt Menüs und Menüpunkte. Ändert das <a href="../Program.htm#tray-icon">Tray-Symbol</a> und dessen Tooltip. Bestimmt, ob das <a href="../Program.htm#main-window">Hauptfenster</a> eines <a href="../Scripts.htm#ahk2exe">kompilierten Skripts</a> geöffnet werden kann.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, <a href="#SubCommands">Unterbefehl</a> <span class="optional">, Wert1, Wert2, Wert3, Wert4</span></pre>
<p>Der <em>MenüName</em>-Parameter kann <code class="no-highlight">Tray</code> oder der Name eines benutzerdefinierten Menüs sein. Ein benutzerdefiniertes Menü wird automatisch erstellt, wenn dessen Name zum ersten Mal zusammen mit dem <a href="#Add">Add</a>-Unterbefehl verwendet wird. Zum Beispiel: <code>Menu, MeinMenü, Add, Menüpunkt1</code>. Sobald ein benutzerdefiniertes Menü erstellt wurde, kann es mit dem <a href="#Show">Show</a>-Unterbefehl angezeigt werden. Mit dem <a href="#Add">Add</a>-Unterbefehl kann es auch als Untermenü zu anderen Menüs hinzugefügt werden.</p>
<p>Die Parameter <em>Unterbefehl</em>, <em>Wert1</em>, <em>Wert2</em>, <em>Wert3</em> und <em>Wert4</em> sind voneinander abhängig und können wie folgt verwendet werden.</p>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul>
    <li><a href="#SubCommands">Unterbefehle</a></li>
    <li><a href="#MenuItemName">Der <em>MenüpunktName</em>-Parameter</a></li>
    <li><a href="#Win32_Menus">Win32-Menüs</a></li>
    <li><a href="#Remarks">Bemerkungen</a></li>
    <li><a href="#Related">Siehe auch</a></li>
    <li><a href="#Examples">Beispiele</a></li>
</ul>

<h2 id="SubCommands">Unterbefehle</h2>
<p>Geben Sie für <em>Unterbefehl</em> Folgendes an:</p>
<ul>
    <li><a href="#Add">Add</a>: Fügt einen Menüpunkt hinzu, aktualisiert einen Menüpunkt mit einem neuen Untermenü oder Label, oder wandelt einen normalen Menüpunkt in ein Untermenü um (oder umgekehrt).</li>
    <li><a href="#Insert">Insert</a> <span class="ver">[v1.1.23+]</span>: Fügt einen neuen Menüpunkt vor einem bestimmten Menüpunkt ein.</li>
    <li><a href="#Delete">Delete</a>: Löscht einen bestimmten Menüpunkt aus dem Menü.</li>
    <li><a href="#DeleteAll">DeleteAll</a>: Löscht alle benutzerdefinierten Menüpunkte aus dem Menü.</li>
    <li><a href="#Rename">Rename</a>: Benennt einen bestimmten Menüpunkt um.</li>
    <li><a href="#Check">Check</a>: Setzt ein sichtbares Häkchen neben einen bestimmten Menüpunkt.</li>
    <li><a href="#Uncheck">Uncheck</a>: Entfernt das Häkchen von einem bestimmten Menüpunkt.</li>
    <li><a href="#ToggleCheck">ToggleCheck</a>: Setzt ein Häkchen neben einen bestimmten Menüpunkt oder entfernt es wieder.</li>
    <li><a href="#Enable">Enable</a>: Erlaubt die Interaktion mit einem bestimmten Menüpunkt, falls sie zuvor verboten wurde.</li>
    <li><a href="#Disable">Disable</a>: Verbietet die Interaktion mit einem bestimmten Menüpunkt.</li>
    <li><a href="#ToggleEnable">ToggleEnable</a>: Verbietet die Interaktion mit einem bestimmten Menüpunkt oder erlaubt sie wieder.</li>
    <li><a href="#Default">Default</a>: Macht einen bestimmten Menüpunkt zum Standardmenüpunkt und stellt ihn fett dar.</li>
    <li><a href="#NoDefault">NoDefault</a>: Macht das Setzen eines benutzerdefinierten Standardmenüpunkts rückgängig.</li>
    <li><a href="#Standard">Standard</a>: Fügt die vordefinierten Menüpunkte am Ende des Menüs an.</li>
    <li><a href="#NoStandard">NoStandard</a>: Entfernt alle vordefinierten Menüpunkte aus dem Menü.</li>
    <li><a href="#Icon">Icon</a>: Ändert das Tray-Symbol oder in <span class="ver">[AHK_L 17+]</span> das Symbol eines bestimmten Menüpunkts.</li>
    <li><a href="#NoIcon">NoIcon</a>: Entfernt das Tray-Symbol oder in <span class="ver">[AHK_L 17+]</span> das Symbol eines bestimmten Menüpunkts.</li>
    <li><a href="#Tip">Tip</a>: Ändert den Tooltip des Tray-Symbols.</li>
    <li><a href="#Show">Show</a>: Zeigt ein bestimmtes Menü an.</li>
    <li><a href="#Color">Color</a>: Ändert die Hintergrundfarbe des Menüs.</li>
    <li><a href="#Click">Click</a>: Wie oft das Tray-Symbol geklickt werden muss, um den Standardmenüpunkt auszuwählen.</li>
    <li><a href="#MainWindow">MainWindow</a>: Ermöglicht das Öffnen des skripteigenen Hauptfensters über das Tray-Symbol.</li>
    <li><a href="#NoMainWindow">NoMainWindow</a>: Verhindert das Öffnen des skripteigenen Hauptfensters über das Tray-Symbol.</li>
    <li><a href="#UseErrorLevel">UseErrorLevel</a>: Überspringt jegliche Warndialogfenster und Thread-Terminierungen, wann immer der Menu-Befehl einen Fehler erzeugt.</li>
</ul>

<h3 id="Add">Add</h3>
<p>Fügt einen Menüpunkt hinzu, aktualisiert einen Menüpunkt mit einem neuen Untermenü oder Label, oder wandelt einen normalen Menüpunkt in ein Untermenü um (oder umgekehrt).</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Add <span class="optional">, MenüpunktName, LabelOderUntermenü, Optionen</span></pre>
<p>Dieser Unterbefehl ist für mehrere Zwecke gedacht. <em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren). Wenn <em>MenüpunktName</em> noch nicht existiert, wird er zum Menü hinzugefügt. Andernfalls wird <em>MenüpunktName</em> mit dem neuen <em>LabelOderUntermenü</em> aktualisiert.</p>
<p>Um eine Trennlinie zum Menü hinzuzufügen, lassen Sie alle drei Parameter weg.</p>
<p>Die Label-Subroutine wird als neuer <a href="../misc/Threads.htm">Thread</a> ausgeführt, wenn der Benutzer den Menüpunkt auswählt (vergleichbar mit <a href="Gosub.htm">Gosub</a> und <a href="../Hotkeys.htm">Hotkey-Subroutinen</a>). Wenn <em>LabelOderUntermenü</em> weggelassen wird, wird <em>MenüpunktName</em> sowohl als Labelname als auch als Menüpunktname verwendet.</p>
<p id="Functor"><span class="ver">[v1.1.20+]</span>: Für <em>LabelOderUntermenü</em> kann auch der Name einer Funktion, sofern dieser Name nicht als Label existiert, oder eine einzelne Variablenreferenz mit einem <a href="../misc/Functor.htm">Funktionsobjekt</a> angegeben werden. Zum Beispiel <code>%FunkObj%</code> oder <code>% FunkObj</code>. Ein voll funktionsfähiges Beispiel finden Sie unter <a href="#ExBoundFunc">Beispiel #5</a>. Andere Ausdrücke, die Objekte zurückgeben, werden zurzeit nicht unterstützt. Für die Funktion können optional die folgenden Parameter definiert werden:</p>
<pre>FunktionName(PunktName, PunktPos, MenüName)</pre>
<p>Wenn <em>MenüpunktName</em> ein Untermenü werden soll - also ein Menüpunkt, der ein neues Menü öffnet - muss für <em>LabelOderUntermenü</em> ein Doppelpunkt gefolgt vom <em>MenüName</em> eines existierenden benutzerdefinierten Menüs angegeben werden. Zum Beispiel:</p>
<pre>Menu, MeinUntermenü, Add, Menüpunkt1
Menu, Tray, Add, Dieser Menüpunkt ist ein Untermenü, :MeinUntermenü</pre>
<p>Sofern vorhanden, muss <em>Optionen</em> eine Liste von einer oder mehreren der folgenden Optionen sein, die jeweils mit einem Leer- oder Tabulatorzeichen voneinander getrennt sind:</p>
<table class="info">
    <tr>
      <th>Option</th>
      <th abbr="Beschr">Beschreibung</th>
    </tr>
    <tr>
        <td>P<em>n</em></td>
        <td>Geben Sie für <em>n</em> die <a href="../misc/Threads.htm">Thread-Priorität</a> des Menüpunkts an, z.B. <code class="no-highlight">P1</code>. Wenn diese Option beim Hinzufügen eines Menüpunkts weggelassen wird, wird standardmäßig Priorität 0 verwendet. Wenn diese Option beim Ändern eines Menüpunkts weggelassen wird, bleibt die Priorität des Menüpunkts unverändert. Verwenden Sie eine dezimale (nicht hexadezimale) Zahl für diese Option.</td>
    </tr>
    <tr>
        <td>+Radio</td>
        <td><span class="ver">[v1.1.23+]</span>: Wenn der Menüpunkt abgehakt ist, wird ein fetter Punkt anstelle eines Häkchens angezeigt.</td>
    </tr>
    <tr>
        <td>+Right</td>
        <td><span class="ver">[v1.1.23+]</span>: Macht den Menüpunkt innerhalb der Menüleiste rechtsbündig. Dies gilt nur für <a href="Gui.htm#Menu">Menüleisten</a>, nicht für Kontextmenüs oder Untermenüs.</td>
    </tr>
    <tr>
        <td>+Break</td>
        <td><span class="ver">[v1.1.23+]</span>: Der Menüpunkt beginnt eine neue Spalte in einem Kontextmenü.</td>
    </tr>
    <tr>
        <td>+BarBreak</td>
        <td><span class="ver">[v1.1.23+]</span>: Dasselbe wie oben, aber mit Trennlinien zwischen den Spalten.</td>
    </tr>
</table>
<p>Das Pluszeichen (+) ist optional und kann mit einem Minuszeichen (-) ersetzt werden, um die Option zu entfernen, wie z.B. <code class="no-highlight">-Radio</code>. Optionen sind nicht Groß-/Kleinschreibung-sensitiv.</p>
<p>Um die Optionen eines existierenden Menüpunkts zu ändern, ohne sein Label oder Untermenü zu beeinflussen, lassen Sie einfach den <em>LabelOderUntermenü</em>-Parameter weg.</p>

<h3 id="Insert">Insert <span class="ver">[v1.1.23+]</span></h3>
<p>Fügt einen neuen Menüpunkt vor einem bestimmten Menüpunkt ein.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Insert <span class="optional">, MenüpunktName, EinzufügenderPunkt, LabelOderUntermenü, Optionen</span></pre>
<p>Die Verwendung ist identisch zum <a href="#Add">Add</a>-Unterbefehl oben, außer dass <em>MenüpunktName</em> immer der Name oder die Position eines existierenden Menüpunkts ist (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren) und dass <em>EinzufügenderPunkt</em> der Name eines neuen Menüpunkts ist, der vor <em>MenüpunktName</em> eingefügt werden soll. Menüpunkte können auch durch Weglassen von <em>MenüpunktName</em> (zwei aufeinanderfolgende Kommas) angefügt werden. Im Gegensatz zum <a href="#Add">Add</a>-Unterbefehl erstellt der Insert-Unterbefehl immer einen neuen Menüpunkt, egal ob <em>MenüpunktName</em> bereits als Menüpunkt existiert.</p>

<h3 id="Delete">Delete</h3>
<p>Löscht einen bestimmten Menüpunkt aus dem Menü.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Delete <span class="optional">, MenüpunktName</span></pre>
<p><em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren). Vordefinierte Menüpunkte wie "Exit" (siehe unten) können nicht einzeln gelöscht werden. Die Löschung des <em>Standardmenüpunkts</em> hat denselben Effekt wie, als hätte man den <a href="#NoDefault">NoDefault</a>-Unterbefehl verwendet.</p>
<p>Wenn <em>MenüpunktName</em> weggelassen wird, wird das gesamte <em>MenüName</em>-Menü gelöscht, sowie alle Menüpunkte in anderen Menüs, die <em>MenüName</em> als Untermenü verwenden. Die Löschung eines Menüs bewirkt zudem, dass das aktuelle <a href="#Win32_Menus">Win32-Menü</a> von jedem seiner Untermenüs zerstört wird, damit es später bei Bedarf neu erstellt werden kann. Andere Menüs, die solche Untermenüs enthalten, könnten ebenfalls betroffen sein. Dies lässt sich vermeiden, indem man vor dem Löschen des Menüs die Menüpunkte mit <a href="#DeleteAll">DeleteAll</a> löscht.</p>

<h3 id="DeleteAll">DeleteAll</h3>
<p>Löscht alle benutzerdefinierten Menüpunkte aus dem Menü.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, DeleteAll</pre>
<p>Eventuell vorhandene <em>vordefinierte</em> Menüpunkte (siehe unten) bleiben davon unberührt. Im Gegensatz zu einem Menü, das via <a href="#Delete">Delete</a>-Unterbefehl (siehe oben) gelöscht wurde, bleibt ein leeres Menü weiterhin existent, d.h. andere Menüs, die es als Untermenü verwenden, behalten solche Untermenüs.</p>

<h3 id="Rename">Rename</h3>
<p>Benennt einen bestimmten Menüpunkt in <em>NeuerName</em> um.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Rename, MenüpunktName <span class="optional">, NeuerName</span></pre>
<p>Wenn <em>NeuerName</em> leer ist, wird der angegebene Menüpunkt in eine Trennlinie umgewandelt. <em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren). Das aktuelle Ziellabel oder Untermenü des Menüpunkts bleibt unverändert. <span class="ver">[v1.1.23+]</span>: Um eine Trennlinie in einen normalen Menüpunkt umzuwandeln, geben Sie die Position der Trennlinie wie z.B. <code class="no-highlight">1&amp;</code> für <em>MenüpunktName</em> und einen nicht-leeren Namen für <em>NeuerName</em> an und verwenden Sie dann den <a href="#Add">Add</a>-Unterbefehl, um dem Menüpunkt ein Label oder Untermenü zuzuweisen.</p>

<h3 id="Check">Check</h3>
<p>Setzt ein sichtbares Häkchen neben einen bestimmten Menüpunkt (sofern noch nicht geschehen).</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Check, MenüpunktName</pre>
<p><em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren).</p>

<h3 id="Uncheck">Uncheck</h3>
<p>Entfernt das Häkchen (sofern vorhanden) von einem bestimmten Menüpunkt.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Uncheck, MenüpunktName</pre>
<p><em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren).</p>

<h3 id="ToggleCheck">ToggleCheck</h3>
<p>Setzt ein Häkchen neben einen bestimmten Menüpunkt, sofern noch nicht geschehen, oder entfernt es wieder.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, ToggleCheck, MenüpunktName</pre>
<p><em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren).</p>

<h3 id="Enable">Enable</h3>
<p>Erlaubt dem Benutzer, einen bestimmten Menüpunkt wieder auszuwählen, falls er zuvor deaktiviert (ausgegraut) wurde.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Enable, MenüpunktName</pre>
<p><em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren).</p>

<h3 id="Disable">Disable</h3>
<p>Stellt einen bestimmten Menüpunkt grau dar, um kenntlich zu machen, dass der Benutzer ihn nicht auswählen kann.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Disable, MenüpunktName</pre>
<p><em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren).</p>

<h3 id="ToggleEnable">ToggleEnable</h3>
<p>Verbietet die Interaktion mit einem bestimmten Menüpunkt, falls noch nicht geschehen, oder erlaubt sie wieder.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, ToggleEnable, MenüpunktName</pre>
<p><em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren).</p>

<h3 id="Default">Default</h3>
<p>Macht einen bestimmten Menüpunkt zum Standardmenüpunkt und stellt ihn fett dar.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Default <span class="optional">, MenüpunktName</span></pre>
<p>Das Setzen des Standardmenüpunkts ist für ein anderes Menü als TRAY rein kosmetischer Natur. <em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren). Wenn der Benutzer das <a href="../Program.htm#tray-icon">Tray-Symbol</a> doppelt anklickt, wird der Standardmenüpunkt ausgewählt. Wenn es keinen Standardmenüpunkt gibt, ist der Doppelklick wirkungslos. Wenn <em>MenüpunktName</em> weggelassen wird, ist der Effekt derselbe wie, als hätte man den <a href="#NoDefault">NoDefault</a>-Unterbefehl unten verwendet.</p>

<h3 id="NoDefault">NoDefault</h3>
<p>Macht das Setzen eines benutzerdefinierten Standardmenüpunkts rückgängig.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, NoDefault</pre>
<p>Beim Tray-Menü: Stellt den vordefinierten Standardmenüpunkt wieder her - bei unkompilierten Skripten ist das "Open" und bei <a href="../Scripts.htm#ahk2exe">kompilierten Skripten</a> nichts (außer wenn der <a href="#MainWindow">MainWindow</a>-Unterbefehl aktiv ist). Wenn der Menüpunkt "Open" nicht existiert, weil zuvor der <a href="#NoStandard">NoStandard</a>-Unterbefehl verwendet wurde, gibt es keinen Standardmenüpunkt, d.h. ein Doppelklick auf das <a href="../Program.htm#tray-icon">Tray-Symbol</a> ist wirkungslos. Bei anderen Menüs als TRAY: Der Standardmenüpunkt (falls vorhanden) wird nicht mehr fett dargestellt.</p>

<h3 id="Standard">Standard</h3>
<p>Fügt die vordefinierten Menüpunkte am Ende des Menüs an (sofern noch nicht vorhanden).</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Standard</pre>
<p>Dieser Unterbefehl kann für das Tray-Menü oder jedes andere Menü verwendet werden.</p>

<h3 id="NoStandard">NoStandard</h3>
<p>Entfernt alle vordefinierten (nicht benutzerdefinierten) Menüpunkte aus dem Tray-Menü (sofern vorhanden).</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, NoStandard</pre>
<p>Dieser Unterbefehl kann für das Tray-Menü oder jedes andere Menü verwendet werden.</p>

<h3 id="Icon">Icon</h3>
<p>Beeinflusst je nach folgender Syntaxnutzung das <a href="#TrayIcon">Tray-Symbol</a> oder in <span class="ver">[AHK_L 17+]</span> das <a href="#MenuIcon">Symbol des Menüpunkts</a>.</p>

<h4 id="TrayIcon">Tray-Symbol setzen</h4>
<p>Ersetzt das <a href="../Program.htm#tray-icon">Tray-Symbol</a> des Skripts mit eines der Symbole aus <em>DateiName</em>.</p>
<pre class="Syntax"><span class="func">Menu</span>, Tray, Icon <span class="optional">, DateiName, SymbolNummer, Einfrieren</span></pre>
<p>Folgende Dateitypen werden unterstützt: ICO, CUR, ANI, EXE, DLL, CPL, SCR und andere Typen, die Symbolressourcen enthalten. Um eine andere Symbolgruppe als die erste in der Datei zu verwenden, geben Sie für <em>SymbolNummer</em> die entsprechende Nummer an (wenn weggelassen, wird standardmäßig 1 verwendet). Zum Beispiel bewirkt 2, dass das Standardsymbol aus der zweiten Symbolgruppe geladen wird. Wenn <em>SymbolNummer</em> negativ ist, wird dessen Absolutwert als Ressourcen-ID eines Symbols innerhalb einer EXE-Datei vermutet. Geben Sie für <em>DateiName</em> ein Sternchen (*) an, um das Standardsymbol wiederherzustellen.</p>
<p>Geben Sie 1 für <em>Einfrieren</em> an, um das Symbol einzufrieren, oder 0, um es wieder aufzutauen (oder lassen Sie es leer, um den gefrorenen/ungefrorenen Zustand unverändert zu lassen). Ein eingefrorenes Symbol kann nicht durch <a href="Pause.htm">Pause</a> oder <a href="Suspend.htm">Suspend</a> geändert werden. Hinweis: Um das <em>aktuelle</em> Symbol einzufrieren oder aufzutauen, verwenden Sie den <em>Einfrieren</em>-Parameter wie folgt: <code>Menu, Tray, Icon,,, 1</code>.</p>
<p>Das Ändern des Tray-Symbols ändert auch das angezeigte Symbol in einem <a href="InputBox.htm">InputBox</a>-, <a href="Progress.htm">Progress</a>- und jedem danach erstellten <a href="Gui.htm">GUI</a>-Fenster. <a href="../Scripts.htm#ahk2exe">Kompilierte Skripte</a> sind davon ebenfalls betroffen, selbst wenn beim Kompilieren ein benutzerdefiniertes Symbol angegeben wurde.</p>
<p class="note"><strong>Hinweis:</strong> Das Ändern des Symbols wird das Tray-Symbol nicht sichtbar machen, wenn es zuvor mit Mitteln wie <a href="_NoTrayIcon.htm">#NoTrayIcon</a> versteckt wurde; verwenden Sie stattdessen <code>Menu, Tray, Icon</code> (ohne Parameter).</p>
<p id="distort">Es können leichte Verformungen auftreten, wenn Tray-Symbole aus anderen Dateitypen als ICO geladen werden. Dieses Problem tritt insbesondere bei 16x16-Symbolen auf. Um das zu verhindern, speichern Sie das gewünschte Tray-Symbol in eine ICO-Datei.</p>
<p>Es gibt einige Symbole in den DLL- und CPL-Dateien des Betriebssystems, die nützlich sein können. Zum Beispiel: <code>Menu, Tray, Icon, Shell32.dll, 174</code>.</p>
<p>Die internen Variablen <strong>A_IconNumber</strong> und <strong>A_IconFile</strong> enthalten die Nummer und den Namen (mit vollständigem Pfad) des aktuellen Symbols (beide sind leer, wenn das Standardsymbol verwendet wird).</p>
<p><span class="ver">[v1.1.23+]</span>: Anstelle eines Dateinamens kann auch ein <a href="../misc/ImageHandles.htm">Symbol-Handle</a> verwendet werden. Zum Beispiel <code>Menu Tray, Icon, HICON:*%Handle%</code>. Das Sternchen ist notwendig, da das Symbol zweimal "geladen" werden muss: Einmal für das kleine Symbol und einmal für das große Symbol.</p>
<p><span class="ver">[v1.1.27+]</span>: Nicht-Symbol-Bilder und <a href="../misc/ImageHandles.htm">Bitmap-Handles (HBITMAP)</a> werden für <em>DateiName</em> unterstützt. Zum Beispiel <code>Menu Tray, Icon, HBITMAP:*%Handle%</code>.</p>

<h4 id="MenuIcon">Menüpunktsymbol setzen <span class="ver">[AHK_L 17+]</span></h4>
<p>Setzt ein Symbol für einen bestimmten Menüpunkt.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Icon, MenüpunktName, DateiName <span class="optional">, SymbolNummer, SymbolBreite</span></pre>
<p><em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren). <em>DateiName</em> kann entweder eine Symboldatei oder ein beliebiges Bild in einem von AutoHotkey unterstützten Format sein. Um eine andere Symbolgruppe als die erste in der Datei zu verwenden, geben Sie für <em>SymbolNummer</em> die entsprechende Nummer an (wenn weggelassen, wird standardmäßig 1 verwendet). Wenn <em>SymbolNummer</em> negativ ist, wird dessen Absolutwert als Ressourcen-ID eines Symbols innerhalb einer EXE-Datei vermutet. Geben Sie für <em>SymbolBreite</em> die gewünschte Breite des Symbols an. Wenn die via <em>SymbolNummer</em> angegebene Symbolgruppe mehrere Symbolgrößen enthält, wird das am ehesten passende Symbol verwendet und auf die angegebene Größe skaliert. Anwendungsbeispiele finden Sie unter <a href="#ExIcon">Beispiel #4</a>.</p>
<p>Derzeit ist es notwendig, die "tatsächliche Größe" beim Setzen des Symbols anzugeben, wenn in Windows Vista oder höher dessen Transparenz erhalten bleiben soll, z.B. <code>Menu, MeinMenü, Icon, Menüpunkt1, Dateiname.png,, 0</code>.</p>

<p>Bekannte Einschränkung: In Windows XP und höher werden Symbole in GUI-Menüleisten falsch positioniert.</p>
<p><span class="ver">[v1.1.23+]</span>: Anstelle eines Dateinamens kann auch ein <a href="../misc/ImageHandles.htm">Bitmap- oder Symbol-Handle</a> verwendet werden. Zum Beispiel <code class="no-highlight">HBITMAP:%handle%</code>.</p>


<h3 id="NoIcon">NoIcon</h3>
<p>Beeinflusst je nach folgender Syntaxnutzung das <a href="#RemoveTrayIcon">Tray-Symbol</a> oder in <span class="ver">[AHK_L 17+]</span> das <a href="#RemoveMenuIcon">Symbol des Menüpunkts</a>.</p>

<h4 id="RemoveTrayIcon">Tray-Symbol entfernen</h4>
<p>Entfernt das <a href="../Program.htm#tray-icon">Tray-Symbol</a>, falls vorhanden.</p>
<pre class="Syntax"><span class="func">Menu</span>, Tray, NoIcon</pre>
<p>Wenn Sie diesen Unterbefehl ganz oben im Skript verwenden, werden Sie feststellen, dass das Tray-Symbol beim Start des Skripts kurz sichtbar ist. Um das zu verhindern, verwenden Sie stattdessen <a href="_NoTrayIcon.htm">#NoTrayIcon</a>. Die interne Variable <strong>A_IconHidden</strong> enthält 1, wenn das Tray-Symbol gerade versteckt ist, andernfalls 0.</p>

<h4 id="RemoveMenuIcon">Menüpunktsymbol entfernen <span class="ver">[AHK_L 17+]</span></h4>
<p>Entfernt das Symbol von einem bestimmten Menüpunkt, falls vorhanden.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, NoIcon, MenüpunktName</pre>
<p><em>MenüpunktName</em> ist der Name oder die Position eines Menüpunkts (siehe <a href="#MenuItemName">MenüpunktName</a>, um mehr zu erfahren).</p>

<h3 id="Tip">Tip</h3>
<p>Ändert den Tooltip des <a href="../Program.htm#tray-icon">Tray-Symbols</a>.</p>
<pre class="Syntax"><span class="func">Menu</span>, Tray, Tip <span class="optional">, Text</span></pre>
<p>Der Tooltip des Tray-Symbols wird angezeigt, wenn sich der Mauszeiger darüber befindet. Um einen Tooltip mehrzeilig zu machen, trennen Sie jede Zeile mit einem Zeilenvorschubzeichen (`n), z.B. <code class="no-highlight">Zeile1`nZeile2</code>. Es werden nur die ersten 127 Zeichen von <em>Text</em> angezeigt. Außerdem wird <em>Text</em> am ersten Tabulatorzeichen abgeschnitten, falls vorhanden. Wenn <em>Text</em> weggelassen wird, wird der Standardtext des Tooltips wiederhergestellt. Die interne Variable <strong>A_IconTip</strong> enthält den aktuellen Text des Tooltips (sie ist leer, wenn der Standardtext verwendet wird).</p>
<p>Windows 10 und niedriger: Um ein Und-Zeichen (&amp;) im Tooltip anzuzeigen, versehen Sie es mit zwei zusätzlichen Und-Zeichen. Zum Beispiel bewirkt <code class="no-highlight">A &amp;&amp;&amp; B</code>, dass "A &amp; B" im Tooltip angezeigt wird.</p>

<h3 id="Show">Show</h3>
<p>Zeigt <em>MenüName</em> an.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Show <span class="optional">, X, Y</span></pre>
<p>Der Benutzer kann einen Menüpunkt mit Pfeiltasten, Tastaturkurzbefehlen (unterstrichene Buchstaben) oder mit dem Mauszeiger auswählen. Mit Ausnahme von <a href="Gui.htm">GUI</a>-Menüleisten kann jedes Menü, einschließlich des Tray-Menüs, angezeigt werden. Wenn sowohl X als auch Y weggelassen werden, wird das Menü an der aktuellen Position des Mauszeigers angezeigt. Wenn nur eine der beiden Koordinaten angegeben ist, wird für die jeweils andere die aktuelle Position des Mauszeigers verwendet. Die Koordinaten sind relativ zum aktiven Fenster. Geben Sie davor <code><a href="CoordMode.htm">CoordMode</a>, Menu</code> an, um sie relativ zum gesamten Bildschirm zu machen.</p>

<h3 id="Color">Color</h3>
<p>Setzt die Hintergrundfarbe des Menüs auf den angegebenen <em>FarbeWert</em>.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, Color, FarbeWert <span class="optional">, Single</span></pre>
<p><em>FarbeWert</em> ist einer der 16 primären HTML-Farbnamen oder ein 6-stelliger RGB-Farbwert (siehe <a href="Progress.htm#colors">Farbentabelle</a>). Lassen Sie den <em>FarbeWert</em>-Parameter leer (oder verwenden Sie das Wort Default), um die Standardfarbe des Menüs wiederherzustellen. Fehlt das Wort Single im nächsten Parameter, werden auch die Hintergrundfarben der Untermenüs geändert.</p>

<h3 id="Click">Click</h3>
<p>Wie oft das <a href="../Program.htm#tray-icon">Tray-Symbol</a> geklickt werden muss, um den Standardmenüpunkt auszuwählen.</p>
<pre class="Syntax"><span class="func">Menu</span>, Tray, Click, KlicksAnzahl</pre>
<p>Wenn <em>KlicksAnzahl</em> 1 ist, muss das Tray-Symbol nur einmal angeklickt werden, um den Standardmenüpunkt auszuwählen. Wenn <em>KlicksAnzahl</em> 2 ist, wird das Standardverhalten (Doppelklick) wiederhergestellt. Zum Beispiel: <code>Menu, Tray, Click, 1</code>. Wenn <em>KlicksAnzahl</em> größer als 2 ist, wird automatisch 2 verwendet. Wenn <em>KlicksAnzahl</em> kleiner als 1 ist, wird automatisch 1 verwendet.</p>

<h3 id="MainWindow">MainWindow</h3>
<p>Aktiviert die Möglichkeit, das <a href="../Program.htm#main-window">Hauptfenster</a> eines Skripts über das <a href="../Program.htm#tray-icon">Tray-Symbol</a> zu öffnen, was bei <a href="../Scripts.htm#ahk2exe">kompilierten</a> oder <a href="../Program.htm#embedded-scripts">eingebetteten</a> Skripten standardmäßig nicht möglich ist.</p>
<pre class="Syntax"><span class="func">Menu</span>, Tray, MainWindow</pre>
<p>Dieser Unterbefehl stellt den Menüpunkt "Open" im Tray-Menü wieder her, sofern nicht der <a href="#NoStandard">NoStandard</a>-Unterbefehl verwendet wurde. Er aktiviert außerdem die Menüpunkte im View-Menü des versteckten Hauptfensters des Skripts, wie z.B. "Lines most recently executed", was den Quellcode des Skripts und andere Informationen anzeigt.</p>
<p>Dieser Modus wird standardmäßig für Skripte verwendet, die weder <a href="../Scripts.htm#ahk2exe">kompiliert</a> noch <a href="../Program.htm#embedded-scripts">eingebettet</a> sind.</p>

<h3 id="NoMainWindow">NoMainWindow</h3>
<p>Verhindert, dass das <a href="../Program.htm#main-window">Hauptfenster</a> über das <a href="../Program.htm#tray-icon">Tray-Symbol</a> geöffnet werden kann.</p>
<pre class="Syntax"><span class="func">Menu</span>, Tray, NoMainWindow</pre>
<p>Dieser Unterbefehl entfernt den vordefinierten Menüpunkt "Open" aus dem Tray-Menü. Er deaktiviert außerdem die Menüpunkte im View-Menü des versteckten Hauptfensters des Skripts, wie z.B. "Lines most recently executed". Die folgenden Befehle sind jedoch weiterhin in der Lage, das Hauptfenster zu öffnen und die entsprechenden View-Optionen auszuwählen, wenn sie während der Skriptausführung erreicht werden: <a href="ListLines.htm">ListLines</a>, <a href="ListVars.htm">ListVars</a>, <a href="ListHotkeys.htm">ListHotkeys</a> und <a href="KeyHistory.htm">KeyHistory</a>.</p>
<p>Dieser Unterbefehl verhindert nicht, dass das Hauptfenster mit <a href="WinShow.htm">WinShow</a> sichtbar gemacht oder mit <a href="ControlGetText.htm">ControlGetText</a> oder ähnlichem inspiziert werden kann, aber er verhindert, dass der Quellcode des Skripts und andere Informationen via Hauptfenster preisgegeben werden, außer wenn einer der oben aufgeführten Befehle vom Skript aufgerufen wird.</p>
<p>Dieser Modus wird standardmäßig für Skripte verwendet, die <a href="../Scripts.htm#ahk2exe">kompiliert</a> oder <a href="../Program.htm#embedded-scripts">eingebettet</a> sind.</p>
<p><span class="ver">[v1.1.34+]</span>: Dieser Unterbefehl kann auch in einem unkompilierten Skript verwendet werden.</p>

<h3 id="UseErrorLevel">UseErrorLevel</h3>
<p>Überspringt jegliche Warndialogfenster und Thread-Terminierungen, wann immer der Menu-Befehl einen Fehler erzeugt.</p>
<pre class="Syntax"><span class="func">Menu</span>, MenüName, UseErrorLevel <span class="optional">, Off</span></pre>
<p>Wenn dieser Unterbefehl nie im Skript verwendet wird, gilt standardmäßig OFF. Die OFF-Einstellung zeigt ein Dialogfenster an und terminiert den <a href="../misc/Threads.htm">aktuellen Thread</a>, wann immer der Menu-Befehl einen Fehler erzeugt. Geben Sie <code>Menu, Tray, UseErrorLevel</code> an, um das Dialogfenster und die Terminierung des Threads zu verhindern; stattdessen wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt. Um diesen Unterbefehl wieder auszuschalten, geben Sie OFF (oder 0 in <span class="ver">[v1.1.30+]</span>) im nächsten Parameter an. Diese Einstellung ist global, d.h. sie wirkt sich auf alle Menüs aus, nicht nur auf <em>MenüName</em>.</p>


<h2 id="MenuItemName">Der <em>MenüpunktName</em>-Parameter</h2>
<p>Name oder Position eines Menüpunkts. Es gelten einige allgemeine Regeln für diesen Parameter, der bei vielen Unterbefehlen zu finden ist:</p>
<ul>
    <li>Um einen Buchstaben im Namen eines Menüpunkts zu unterstreichen, stellen Sie ihm ein Und-Zeichen (&amp;) voran. Sobald das Menü angezeigt wird, kann ein solcher Menüpunkt durch Drücken der entsprechenden Taste ausgewählt werden. Um ein direkt geschriebenes Und-Zeichen anzuzeigen, geben Sie wie folgt zwei aufeinanderfolgende Und-Zeichen an: <code class="no-highlight">Save &amp;&amp; Exit</code></li>
    <li>Beim Verweis auf ein existierendes Menü oder einen existierenden Menüpunkt via Name muss nicht zwischen Groß- und Kleinschreibung unterschieden werden, allerdings müssen alle Und-Zeichen enthalten sein. Zum Beispiel: <code class="no-highlight">&amp;Open</code></li>
    <li><span class="ver">[v1.1.23+]</span>: Um einen existierenden Menüpunkt via Position innerhalb des Menüs zu identifizieren, geben Sie die Position des Menüpunkts gefolgt von einem Und-Zeichen an. Zum Beispiel ist <code class="no-highlight">1&amp;</code> der erste Menüpunkt.</li>
</ul>

<h2 id="Win32_Menus">Win32-Menüs</h2>
<p>Beim Hinzufügen oder Ändern von Menüpunkten zeichnet der Menu-Befehl den Namen und andere Eigenschaften der einzelnen Menüpunkte auf, aber das eigentliche <a href="https://learn.microsoft.com/windows/win32/menurc/menus">Win32-Menü</a> wird nicht sofort konstruiert. Dies geschieht, wenn das Menü oder sein übergeordnetes Menü angezeigt oder mit einer GUI verbunden wird, entweder zum ersten Mal oder wenn das Menü seit seiner letzten Anzeige "zerstört" wurde. Die folgenden Dinge können dazu führen, dass dieses Win32-Menü zerstört wird:</p>
<ul>
  <li>Ein Menü löschen.</li>
  <li>Das Untermenü eines Menüpunkts mit einem Label oder anderen Menü ersetzen.</li>
  <li>Vor <span class="ver">[v1.1.27.03]</span> den <a href="#NoStandard">NoStandard</a>- (wenn die vordefinierten Menüpunkte vorhanden waren) oder <a href="#DeleteAll">DeleteAll</a>-Unterbefehl aufrufen.</li>
</ul>
<p>Beim Zerstören des Win32-Menüs kann auch das Win32-Menü aller Untermenüs und des übergeordneten Menüs zerstört werden.</p>
<p>Wenn das Win32-Menü eines Menüs, das die vordefinierten Menüpunkte enthält, neu erstellt wird, werden die voreingestellten Menüpunkte am Anfang des Menüs platziert.</p>
<p>Alle Änderungen, die direkt via Win32-API-Aufrufe am Menü vorgenommen werden, gelten nur für die aktuelle "Instanz" des Menüs, und gehen verloren, wenn das Menü zerstört wird.</p>
<p>Jeder Menüpunkt bekommt eine ID zugewiesen, wenn er das erste Mal zum Menü hinzugefügt wird. Skripte können sich nicht darauf verlassen, dass ein Menüpunkt eine bestimmte ID erhält, aber sie können die ID eines Menüpunkts via GetMenuItemID abrufen, wie im <a href="MenuGetHandle.htm#Examples">MenuGetHandle-Beispiel</a> gezeigt. Diese ID kann nicht mit dem Menu-Befehl verwendet werden, sondern nur mit diversen <a href="https://learn.microsoft.com/windows/win32/menurc/menus">Win32-Funktionen</a>.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Ein typisches Menü sieht wie folgt aus:</p>
<img src="../static/ctrl_menu.png" alt="Menu" style="border: 1px solid silver;" />
<p>Die Namen der Menüs und Menüpunkte können bis zu 260 Zeichen lang sein.</p>
<p>Mit <code>Menu, MeinMenü, Add</code> (also ohne die restlichen Parameter) können Trennlinien zum Menü hinzugefügt werden. <span class="ver">[v1.1.23+]</span>: Um einzelne Trennlinien gezielt zu löschen, identifizieren Sie sie via Position innerhalb des Menüs. Zum Beispiel können Sie <code>Menu, MeinMenü, Delete, 3&amp;</code> verwenden, wenn zwei Menüpunkte vor der Trennlinie sind. Alternativ können Sie auch <code>Menu, MeinMenü, DeleteAll</code> verwenden und dann Ihre benutzerdefinierten Menüpunkte neu hinzufügen.</p>
<p>Neue Menüpunkte werden immer am Ende des Menüs hinzugefügt. Beim Tray-Menü: Wenn Sie Ihre Menüpunkte vor die vordefinierten Menüpunkte setzen wollen (nachdem Sie Ihre Menüpunkte hinzugefügt haben), führen Sie <code>Menu, Tray, NoStandard</code> gefolgt von <code>Menu, Tray, Standard</code> aus.</p>
<p>Es ist nicht möglich, auf vordefinierte Menüpunkte wie z.B. "Pause Script" und "Suspend Hotkeys" einzeln mit einem Menu-Unterbefehl zuzugreifen.</p>
<p>Wenn ein Menü komplett leer ist - z.B. via <code>Menu, MeinMenü, DeleteAll</code> - kann es nicht angezeigt werden. Wenn das Tray-Menü leer ist, haben Rechtsklick und Doppelklick auf das <a href="../Program.htm#tray-icon">Tray-Symbol</a> keine Wirkung (in solchen Fällen ist es üblicherweise besser, <a href="_NoTrayIcon.htm">#NoTrayIcon</a> zu verwenden).</p>
<p>Wenn die Subroutine eines Menüpunkts gerade ausgeführt wird und der Benutzer denselben Menüpunkt erneut auswählt, wird ein neuer <a href="../misc/Threads.htm">Thread</a> erstellt, um dieselbe Subroutine auszuführen, und der vorherige Thread unterbrochen. Um solche Ereignisse stattdessen zu puffern, geben Sie <a href="Critical.htm">Critical</a> in der ersten Zeile der Subroutine an (allerdings werden dadurch auch andere Threads, wie z.B. das Drücken eines Hotkeys, gepuffert/verzögert).</p>
<p>Jede via Menüpunkt gestartete Subroutine verwendet vorerst die Standardwerte von Einstellungen wie <a href="SendMode.htm">SendMode</a>. Diese Standardwerte können im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> geändert werden.</p>
<p>Die internen Variablen <strong>A_ThisMenuItem</strong> und <strong>A_ThisMenuItemPos</strong> enthalten den Namen und die Position des benutzerdefinierten Menüpunkts, den der Benutzer zuletzt ausgewählt hat (leer, wenn nichts ausgewählt wurde). Die interne Variable <strong>A_ThisMenu</strong> enthält den Namen des Menüs, wo A_ThisMenuItem ausgewählt wurde. Diese Variablen sind nützlich, um ein Menü zu erstellen, dessen Inhalt nicht immer gleich ist. In diesem Fall empfiehlt es sich, alle Menüpunkte auf dasselbe Label zu verweisen und mit den obigen Variablen zu bestimmen, was getan werden soll.</p>
<p>Um ein Skript ohne Hotkey und <a href="Gui.htm">GUI</a> dauerhaft laufen zu lassen - z.B. ein Skript, das nur benutzerdefinierte Menüs oder Menüpunkte enthält - verwenden Sie <a href="_Persistent.htm">#Persistent</a>.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="Gui.htm">GUI</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Thread.htm">Thread</a>, <a href="Critical.htm">Critical</a>, <a href="_NoTrayIcon.htm">#NoTrayIcon</a>, <a href="Gosub.htm">Gosub</a>, <a href="Return.htm">Return</a>, <a href="SetTimer.htm">SetTimer</a>, <a href="_Persistent.htm">#Persistent</a></p>

<h2 id="Examples">Beispiele</h2>

<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Fügt einen neuen Menüpunkt am Ende des <a href="../Program.htm#tray-icon">Tray-Symbol</a>-Menüs hinzu.</p>
<pre>#Persistent  <em>; Skript laufen lassen, bis der Benutzer es beendet.</em>
Menu, Tray, Add  <em>; Erstellt eine Trennlinie.</em>
Menu, Tray, Add, Element1, MenuHandler  <em>; Erstellt einen neuen Menüpunkt.</em>
return

MenuHandler:
MsgBox Sie haben %A_ThisMenuItem% im Menü %A_ThisMenu% ausgewählt.
return</pre>
</div>

<div class="ex" id="ExPopup">
<p><a class="ex_number" href="#ExPopup"></a> Erstellt ein Kontextmenü, das beim Drücken eines Hotkeys angezeigt wird.</p>
<pre><em>; Kontextmenü durch Hinzufügen von Menüpunkten erstellen.</em>
Menu, MeinMenü, Add, Element1, MenuHandler
Menu, MeinMenü, Add, Element2, MenuHandler
Menu, MeinMenü, Add  <em>; Trennlinie hinzufügen.</em>

<em>; Ein weiteres Menü erstellen, das als Untermenü für das obige Menü dient.</em>
Menu, Submenu1, Add, Element1, MenuHandler
Menu, Submenu1, Add, Element2, MenuHandler

<em>; Ein Untermenü im ersten Menü erstellen (ein Rechtspfeilindikator). Wenn der Benutzer es auswählt, wird das zweite Menü angezeigt.</em>
Menu, MeinMenü, Add, Mein Untermenü, :Submenu1

Menu, MeinMenü, Add  <em>; Trennlinie unter dem Untermenü hinzufügen.</em>
Menu, MeinMenü, Add, Element3, MenuHandler  <em>; Einen weiteren Menüpunkt unter dem Untermenü hinzufügen.</em>
return  <em>; Ende des automatischen Ausführungsbereichs.</em>

MenuHandler:
MsgBox Sie haben %A_ThisMenuItem% im Menü %A_ThisMenu% ausgewählt.
return

#z::Menu, MeinMenü, Show  <em>; Hotkey WIN+Z drücken, um das Menü anzuzeigen.</em></pre>
</div>

<div class="ex" id="ExTray">
<p><a class="ex_number" href="#ExTray"></a> Zeigt einige der verschiedenen Menu-Unterbefehle.</p>
<pre>#Persistent
#SingleInstance
Menu, Tray, Add <em>; Trennlinie</em>
Menu, Tray, Add, TestToggle&amp;Check
Menu, Tray, Add, TestToggleEnable
Menu, Tray, Add, TestDefault
Menu, Tray, Add, TestStandard
Menu, Tray, Add, TestDelete
Menu, Tray, Add, TestDeleteAll
Menu, Tray, Add, TestRename
Menu, Tray, Add, Test
return

<em>;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</em>

TestToggle&amp;Check:
Menu, Tray, ToggleCheck, TestToggle&amp;Check
Menu, Tray, Enable, TestToggleEnable <em>; Aktiviert auch den nächsten Test, da es die Deaktivierung von sich selbst nicht rückgängig machen kann.</em>
Menu, Tray, Add, TestDelete <em>; Dasselbe wie oben.</em>
return

TestToggleEnable:
Menu, Tray, ToggleEnable, TestToggleEnable
return

TestDefault:
if (Default = "TestDefault")
{
    Menu, Tray, NoDefault
    Default := ""
}
else
{
    Menu, Tray, Default, TestDefault
    Default := "TestDefault"
}
return

TestStandard:
if (Standard != false)
{
    Menu, Tray, NoStandard
    Standard := false
}
else
{
    Menu, Tray, Standard
    Standard := true
}
return

TestDelete:
Menu, Tray, Delete, TestDelete
return

TestDeleteAll:
Menu, Tray, DeleteAll
return

TestRename:
if (NeuerName != "unbenannt")
{
    AlterName := "TestRename"
    NeuerName := "unbenannt"
}
else
{
    AlterName := "unbenannt"
    NeuerName := "TestRename"
}
Menu, Tray, Rename, %AlterName%, %NeuerName%
return

Test:
MsgBox Sie haben %A_ThisMenuItem% im Menü %A_ThisMenu% ausgewählt.
return</pre>
</div>

<div class="ex" id="ExIcon">
<p><a class="ex_number" href="#ExIcon"></a> Zeigt, wie man Symbole zu Menüpunkten hinzufügt.</p>
<pre>Menu, DateiMenü, Add, Skript-Symbol, MenuHandler
Menu, DateiMenü, Add, Suspend-Symbol, MenuHandler
Menu, DateiMenü, Add, Pause-Symbol, MenuHandler
Menu, DateiMenü, Icon, Skript-Symbol, %A_AhkPath%, 2 <em>; 2. Symbolgruppe aus der Datei</em>
Menu, DateiMenü, Icon, Suspend-Symbol, %A_AhkPath%, -206 <em>; Symbol mit Ressourcen-ID 206</em>
Menu, DateiMenü, Icon, Pause-Symbol, %A_AhkPath%, -207 <em>; Symbol mit Ressourcen-ID 207</em>
Menu, MeineMenüleiste, Add, &amp;Datei, :DateiMenü
Gui, Menu, MeineMenüleiste
Gui, Add, Button, gExit, Beendet dieses Beispiel
Gui, Show
return

MenuHandler:
return

Exit:
ExitApp
</pre>
</div>

<div class="ex" id="ExBoundFunc">
  <p><a class="ex_number" href="#ExBoundFunc"></a> Zeigt, wie mit <a href="../misc/Functor.htm#BoundFunc">BoundFunc-Objekten</a> zusätzliche Parameter übergeben werden können, wenn eine Funktion anstelle einer Subroutine verwendet wird.</p>
  <pre><em>; Parameter an die Funktion binden und BoundFunc-Objekte zurückgeben:</em>
BoundGivePar := Func("GivePar").Bind("First", "Test one")
BoundGivePar2 := Func("GivePar").Bind("Second", "Test two")

<em>; Das Menü erstellen und anzeigen:</em>
Menu MeinMenü, Add, Parameter übergeben, % BoundGivePar
Menu MeinMenü, Add, Parameter2 übergeben, % BoundGivePar2
Menu MeinMenü, Show

<em>; Definition der benutzerdefinierten Funktion GivePar:</em>
GivePar(a, b, PunktName, PunktPos, MenüName)
{
    MsgBox % "a:`t`t" a "`n"
           . "b:`t`t" b "`n"
           . "PunktName:`t" PunktName "`n"
           . "PunktPos:`t`t" PunktPos "`n"
           . "MenüName:`t" MenüName
}</pre>
</div>
</body>
</html>
