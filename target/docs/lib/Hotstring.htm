<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Hotstring() - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Die Hotstring-Funktion erstellt, modifiziert, aktiviert oder deaktiviert einen Hotstring, während das Skript läuft." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Hotstring() <span class="ver">[v1.1.28+]</span></h1>

<p>Erstellt, modifiziert, aktiviert oder deaktiviert einen <a href="../Hotstrings.htm">Hotstring</a>, während das Skript läuft.</p>

<pre class="Syntax"><span class="func">Hotstring</span>(Zkette <span class="optional">, Ersatz, OnOffToggle</span>)
<span class="func">Hotstring</span>(<a href="#NewOptions">NeueOptionen</a>)
<span class="func">Hotstring</span>(<a href="#SubFunctions">Unterfunktion</a> <span class="optional">, Wert1</span>)</pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Zkette</dt>
  <dd>
    <p>Eine Zeichenkette, mit der der Hotstring ausgelöst werden soll, inklusive der davor befindlichen <a href="../Hotstrings.htm">üblichen Doppelpunkte</a> und <a href="../Hotstrings.htm#Options">Optionszeichen</a>. Zum Beispiel <code>"::bzw"</code> oder <code>":*:]d"</code>.</p>
    <p><em>Zkette</em> kann einem existierenden Hotstring entsprechen, unter Berücksichtigung der <a href="../Hotstrings.htm#C">Groß-/Kleinschreibung-Sensitivität (C)</a>, <a href="../Hotstrings.htm#Question">Wort-Sensitivität (?)</a>, Aktivierungskriterien (gesetzt durch <a href="_If.htm">#If</a>, <a href="_IfWinActive.htm">#IfWin</a> oder <a href="Hotkey.htm#IfWin">Hotkey If</a>) und der auslösenden Zeichenkette. Zum Beispiel stimmen <code>"::bzw"</code> und <code>"::BZW"</code> überein, es sei denn, der Groß-/Kleinschreibung-Sensitivitätsmodus ist als Standardoption festgelegt, während <code>":C:bzw"</code> und <code>":C:BZW"</code> nie übereinstimmen. Die Optionen <code class="no-highlight">C</code> und <code class="no-highlight">?</code> können in <em>Zkette</em> enthalten sein oder mit der <a href="_Hotstring.htm">#Hotstring</a>-Direktive oder durch vorherige Verwendung von <em>NeueOptionen</em> als Standardoptionen festgelegt werden.</p>
    <p>Wenn der Hotstring bereits existiert, werden alle Optionen, die in <em>Zkette</em> angegeben sind, in Kraft gesetzt, während alle anderen Optionen unverändert bleiben. Da Hotstrings mit <code class="no-highlight">C</code> oder <code class="no-highlight">?</code> getrennt von anderen Hotstrings behandelt werden, ist es nicht möglich, diese Optionen hinzuzufügen oder zu entfernen. Deaktivieren Sie stattdessen den existierenden Hotstring und erstellen Sie einen neuen.</p>
    <p>Jeder neu erstellte Hotstring – entweder via Hotstring-Funktion oder <a href="../Hotstrings.htm">Zweifach-Doppelpunkt-Label</a> – erhält einen festen Namen, der sich aus der auslösenden Zeichenkette und der Sequenz von Optionszeichen zusammensetzt, widergespiegelt durch <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a>. Dieser Name ändert sich auch dann nicht, wenn die Hotstring-Funktion später mit anderen Optionszeichen auf den Hotstring zugreift.</p>
    <p>Wenn die <a href="../Hotstrings.htm#X">X-Option (Execute)</a> in <em>Zkette</em> vorhanden ist (und nicht nur als Standardoption festgelegt wurde), wird der <em>Ersatz</em>-Parameter als Label- oder Funktionsname statt als Ersatztext interpretiert. Diese Option ist wirkungslos, wenn <em>Ersatz</em> ein Objekt ist.</p>
  </dd>

  <dt>Ersatz</dt>
  <dd>
    <p>Der Ersatztext, oder ein <a href="../misc/Labels.htm">Label</a>, eine <a href="../Functions.htm">Funktion</a> oder ein <a href="../misc/Functor.htm">Funktionsobjekt</a>, das/die (als neuer <a href="../misc/Threads.htm">Thread</a>) aufgerufen wird, wenn der Hotstring ausgelöst wird.</p>
    <p>Standardmäßig werden alle Zeichenketten als Ersatztext behandelt. Um den Namen eines Labels oder einer Funktion anzugeben, fügen Sie die <a href="../Hotstrings.htm#X">X-Option (Execute)</a> in <em>Zkette</em> ein. Es können sowohl normale Labels als auch <a href="../Hotkeys.htm">Hotkey</a>-/<a href="../Hotstrings.htm">Hotstring</a>-Labels verwendet werden, allerdings müssen alle Doppelpunkte am Ende weggelassen werden. Wenn eine Funktion und ein Label mit demselben Namen existieren, hat das Label Vorrang. Um stattdessen die Funktion zu verwenden, übergeben Sie eine <a href="Func.htm">Funktionsreferenz</a>.</p>
    <p>Dieser Parameter kann leer gelassen werden, wenn der Hotstring bereits existiert – in diesem Fall bleibt der Ersatz des Hotstrings unverändert. Dies ist z.B. nützlich, um nur die Optionen des Hotstrings zu ändern oder um den Hotstring ein- oder auszuschalten.</p>
    <p class="note"><strong>Hinweis:</strong> Wenn dieser Parameter angegeben ist, aber der Hotstring durch eine frühere Verwendung dieser Funktion deaktiviert wurde, bleibt der Hotstring deaktiviert. Um das zu verhindern, geben Sie <code>"On"</code> für <em>OnOffToggle</em> an.</p>
  </dd>

  <dt>OnOffToggle</dt>
  <dd>
    <p>Eine der folgenden Zeichenketten (in Anführungszeichen, wenn sie direkt geschrieben wird):</p>
    <p><strong>On:</strong> Aktiviert den Hotstring.</p>
    <p><strong>Off:</strong> Deaktiviert den Hotstring.</p>
    <p><strong>Toggle:</strong> Schaltet den Hotstring auf den entgegengesetzten Zustand (aktiviert oder deaktiviert).</p>
    <p><span class="ver">[v1.1.30+]</span>: Anstelle von On, Off und Toggle können auch die Werte 1 (oder <code>True</code>), 0 (oder <code>False</code>) und -1 verwendet werden.</p>
  </dd>

  <dt>NeueOptionen</dt>
  <dd id="NewOptions">
    <p>Um neue Standardoptionen für danach erstellte Hotstrings festzulegen, übergeben Sie die Optionen ohne Doppelpunkte am Anfang oder Ende an die Hotstring-Funktion. Zum Beispiel: <code>Hotstring("T")</code>.</p>
    <p>Das Einschalten der <a href="../Hotstrings.htm#C">Groß-/Kleinschreibung-Sensitivität (C)</a> oder der <a href="../Hotstrings.htm#Question">Wort-Sensitivität (?)</a> wirkt sich auch darauf aus, welche existierenden Hotstrings von nachträglichen Aufrufen der Hotstring-Funktion gefunden werden. Zum Beispiel wird <code>Hotstring(":T:btw")</code> standardmäßig <code class="no-highlight">::BTW</code> finden, aber nicht, wenn <code>Hotstring("C")</code> oder <code><a href="_Hotstring.htm">#Hotstring</a> C</code> wirksam ist. Um das rückgängig zu machen oder zu überschreiben, übergeben Sie eine Option, die die andere Option automatisch ausschließt; <code class="no-highlight">C0</code> und <code class="no-highlight">C1</code> beispielsweise würden <code class="no-highlight">C</code> überschreiben.</p>
  </dd>

  <dt>Unterfunktion, Wert1</dt>
  <dd>
    <p>Diese Parameter sind voneinander abhängig und können wie folgt verwendet werden.</p>
  </dd>

</dl>

<h2 id="SubFunctions">Unterfunktionen</h2>
<p>Geben Sie für <em>Unterfunktion</em> Folgendes an:</p>
<ul>
  <li><a href="#EndChars">EndChars</a>: Ermittelt oder ändert den Satz von Endungszeichen.</li>
  <li><a href="#MouseReset">MouseReset</a>: Bestimmt, ob Mausklicks den Hotstring-Erkenner zurücksetzen dürfen.</li>
  <li><a href="#Reset">Reset</a> <span class="ver">[v1.1.28.01+]</span>: Setzt den Hotstring-Erkenner sofort zurück.</li>
</ul>

<h3 id="EndChars">EndChars</h3>
<p>Ermittelt oder modifiziert einen Satz von Zeichen, die vom Hotstring-Erkenner als <a href="../Hotstrings.htm#EndChars">Endungszeichen</a> verwendet werden.</p>
<pre class="Syntax">AlterWert := <span class="func">Hotstring</span>("EndChars" <span class="optional">, NeuerWert</span>)</pre>
<p>Zum Beispiel:</p>
<pre>vorher_zeichen := Hotstring("EndChars", "-()[]{}':;""/\,.?!`n `t")
MsgBox Der vorherige Wert war: %vorher_zeichen%</pre>
<p><a href="#EndChars">#Hotstring EndChars</a> wirkt sich auch auf diese Einstellung aus.</p>
<p>Es ist derzeit nicht möglich, für jeden Hotstring einen anderen Satz von Endungszeichen anzugeben.</p>

<h3 id="MouseReset">MouseReset</h3>
<p>Ermittelt oder modifiziert die globale Einstellung, die bestimmt, ob Mausklicks den Hotstring-Erkenner zurücksetzen dürfen, wie <a href="../Hotstrings.htm#NoMouse">hier</a> beschrieben.</p>
<pre class="Syntax">AlterWert := <span class="func">Hotstring</span>("MouseReset" <span class="optional">, NeuerWert</span>)</pre>
<p><em>NeuerWert</em> sollte 1 (true) sein, um die Erkennung von Mausklicks und das Zurücksetzen des Hotstring-Erkenners zu aktivieren, oder 0 (false), um es zu deaktivieren. Der Rückgabewert ist die Einstellung, welche vor dem Aufruf der Funktion wirksam war.</p>
<p>Der <a href="_InstallMouseHook.htm">Maus</a>-Hook wird bei dieser Funktion je nach Bedarf automatisch installiert oder entfernt.</p>
<p><a href="_Hotstring.htm">#Hotstring NoMouse</a> wirkt sich auch auf diese Einstellung aus und entspricht der Angabe von <code>False</code> für <em>NeuerWert</em>.</p>

<h3 id="Reset">Reset <span class="ver">[v1.1.28.01+]</span></h3>
<p>Setzt den Hotstring-Erkenner sofort zurück.</p>
<pre class="Syntax"><span class="func">Hotstring</span>("Reset")</pre>
<p>Mit anderen Worten, das Skript wartet auf einen völlig neuen Hotstring und verwirft alles, was Sie zuvor eingegeben haben.</p>

<h2 id="Errors">Fehlerbehandlung</h2>
<p>Diese Funktion löst eine Ausnahme aus, wenn die Parameter ungültig sind oder eine Speicherreservierung fehlschlägt. Sie hat keinen Einfluss auf <a href="../misc/ErrorLevel.htm">ErrorLevel</a>.</p>
<p>Eine Ausnahme wird auch ausgelöst, wenn <em>Ersatz</em> weggelassen wird und <em>Zkette</em> gültig ist, aber nicht mit einem existierenden Hotstring übereinstimmt. Dies kann verwendet werden, um zu prüfen, ob ein Hotstring existiert. Zum Beispiel:</p>
<pre>try
    Hotstring("::bzw")
catch
    MsgBox Der Hotstring existiert nicht oder hat keine Varianten mit den aktuellen IfWin-Kriterien.</pre>

<h2 id="Remarks">Bemerkungen</h2>
<p>Die <a href="Hotkey.htm#IfWin">aktuelle IfWin-Einstellung</a> des <a href="Hotkey.htm">Hotkey</a>-Befehls bestimmt die <a href="#variant">Variante</a> eines Hotstrings, mit der die Hotstring-Funktion arbeiten wird.</p>
<p>Ein bestimmtes Label oder eine bestimmte Funktion kann das Ziel von mehreren Hotstrings sein. Wenn bekannt ist, dass ein Label oder eine Funktion durch einen Hotstring aufgerufen wurde, lässt sich der Hotstring durch Überprüfung der internen Variable <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a> ermitteln.</p>
<p>Wenn das Skript <a href="Suspend.htm">suspendiert</a> ist und neue Hotstrings hinzugefügt oder aktiviert werden, werden diese ebenfalls suspendiert, bis die Suspension wieder aufgehoben wird (es sei denn, sie sind davor geschützt, wie im <a href="Suspend.htm">Suspend</a>-Abschnitt beschrieben).</p>
<p>Die <a href="_InstallKeybdHook.htm">Tastatur</a>- und/oder <a href="_InstallMouseHook.htm">Maus</a>-Hooks werden bei dieser Funktion je nach Bedarf automatisch installiert oder entfernt.</p>
<p>Diese Funktion kann Hotstrings anderer Skripte nicht direkt aktivieren oder deaktivieren.</p>
<p>Sobald ein Skript mindestens einen Hotstring hat, wird es <a href="../Scripts.htm#persistent">persistent</a>; das heißt, dass <a href="ExitApp.htm">ExitApp</a> anstelle von <a href="Exit.htm">Exit</a> verwendet werden sollte, um dieses Skript zu terminieren. Hotstring-Skripte sind außerdem automatisch <a href="_SingleInstance.htm">#SingleInstance</a>, es sei denn, <code>#SingleInstance Off</code> wurde angegeben.</p>

<h2 id="variant">Hotstring-Varianten (-Duplikate)</h2>
<p>Ein bestimmter Hotstring kann mehr als einmal erstellt werden, wenn für jede Definition ein anderes <a href="Hotkey.htm#IfWin">IfWin</a>-Kriterium, eine andere <a href="../Hotstrings.htm#C">Groß-/Kleinschreibung-Sensitivität</a> (<code class="no-highlight">C</code> vs. <code class="no-highlight">C0</code>/<code class="no-highlight">C1</code>) oder <a href="../Hotstrings.htm#Question">Wort-Sensitivität</a> (<code class="no-highlight">?</code>) angegeben wird. Diese werden als <em>Hotstring-Varianten</em> bezeichnet. Zum Beispiel:</p>
<pre>Hotkey, IfWinActive, ahk_group XMLForen
Hotstring("::bzw", "Bezeichnerwert")
Hotkey, IfWinActive, Microsoft Teams
Hotstring("::bzw", "Bezirksverwaltung")
Hotkey, IfWinActive
Hotstring("::bzw", "beziehungsweise")</pre>
<p>Wenn mehr als eine Variante eines Hotstrings zum Auslösen geeignet ist, wird nur die zuerst erstellte Variante ausgelöst.</p>
<p>Weitere Informationen zu IfWin finden Sie unter <a href="_IfWinActive.htm#gen">Allgemeine Bemerkungen von #IfWin</a>.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="../Hotstrings.htm">Hotstrings</a>, <a href="_IfWinActive.htm">#IfWinActive/Exist</a>, <a href="_MaxThreadsPerHotkey.htm">#MaxThreadsPerHotkey</a>, <a href="Suspend.htm">Suspend</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Thread.htm">Thread</a>, <a href="Critical.htm">Critical</a>, <a href="Hotkey.htm">Hotkey</a></p>

<h2 id="Examples">Beispiele</h2>

<div class="ex" id="ExHelper">
<p><a class="ex_number" href="#ExHelper"></a> Hotstring Helper. Das folgende Skript könnte nützlich sein, wenn Sie viel mit Hotstrings arbeiten. Es basiert auf <a href="../Hotstrings.htm#Helper">dem Skript von Andreas Borutta</a>. Drücken Sie <kbd>Win</kbd>+<kbd>H</kbd> (oder einen anderen Hotkey Ihrer Wahl), um den aktuell markierten Text zu einem Hotstring zu machen. Wenn Sie z.B. in einem Textverarbeitungsprogramm "beziehungsweise" markieren und <kbd>Win</kbd>+<kbd>H</kbd> drücken, wird das Skript Sie auffordern, eine Abkürzung für diesen Text einzugeben (z.B. bzw), und dann den neuen Hotstring in das Skript einfügen. Der Hotstring wird aktiviert, ohne dass das Skript neu geladen werden muss.</p>
<pre>#h::  <em>; Hotkey: WIN+H
; Ruft den aktuell markierten Text ab. Es wird die Zwischenablage statt
; "ControlGet Selected" verwendet, um das Skript für mehr Texteditoren
; funktionsfähig zu machen. Speichert die aktuelle Zwischenablage und
; stellt sie später wieder her (allerdings funktioniert das nur mit
; reinem Text):</em>
ClipboardAlt := Clipboard
Clipboard := "" <em>; Muss vorerst leer sein, damit die Erkennung funktioniert.</em>
Send ^c
ClipWait 1
if ErrorLevel  <em>; ClipWait hat das Zeitlimit überschritten.</em>
    return
<em>; Ersetze CRLF und/oder LF mit `n für einen Hotstring im Raw-Modus:
; Dasselbe wird für jedes andere Zeichen getan,
; das ein Problem im Raw-Modus sein könnte:</em>
ClipInhalt := StrReplace(Clipboard, "``", "````")  <em>; Zuerst diese Ersetzung, um die darunter nicht zu stören.</em>
ClipInhalt := StrReplace(ClipInhalt, "`r`n", "``n")
ClipInhalt := StrReplace(ClipInhalt, "`n", "``n")
ClipInhalt := StrReplace(ClipInhalt, "`t", "``t")
ClipInhalt := StrReplace(ClipInhalt, "`;", "```;")
Clipboard := ClipboardAlt  <em>; Den vorherigen Inhalt der Zwischenablage wiederherstellen.</em>
ZeigeInputBox(":T:::" ClipInhalt)
return

ZeigeInputBox(Standardwert)
{
    <em>; Den Textcursor des Eingabefensters auf eine benutzerfreundliche Position verschieben:</em>
    SetTimer, VerschiebeTextcursor, 10
    <em>; Das Eingabefenster mit dem vordefinierten Hotstring anzeigen:</em>
    InputBox, BenutzerEingabe, Neuer Hotstring,
    (
    Fügen Sie Ihre Abkürzung an der Position des Textcursors ein. Bei Bedarf können Sie den Ersatztext noch ändern.

    Beispieleintrag: :T:bzw::beziehungsweise
    ),,,,,,,, %Standardwert%
    if ErrorLevel  <em>; Der Benutzer hat Abbrechen gedrückt.</em>
        return

    if RegExMatch(BenutzerEingabe, "O)(?P&lt;Label&gt;:.*?:(?P&lt;Abkuerzung&gt;.*?))::(?P&lt;Ersatztext&gt;.*)", Hotstring)
    {
        if !Hotstring.Abkuerzung
            Mitteilung := "Sie haben keine Abkürzung angegeben"
        else if !Hotstring.Ersatztext
            Mitteilung := "Sie haben keinen Ersatztext angegeben"
        else
        {
            Hotstring(Hotstring.Label, Hotstring.Ersatztext)  <em>; Aktiviert jetzt den Hotstring.</em>
            FileAppend, `n%BenutzerEingabe%, %A_ScriptFullPath%  <em>; Speichert den Hotstring für den späteren Gebrauch.</em>
        }
    }
    else
        Mitteilung := "Der Hotstring scheint falsch strukturiert zu sein"

    if Mitteilung
    {
        MsgBox, 4,, %Mitteilung%. Möchten Sie es noch einmal versuchen?
        IfMsgBox, Yes
            ZeigeInputBox(Standardwert)
    }
    return
    
    VerschiebeTextcursor:
    WinWait, Neuer Hotstring
    <em>; Andernfalls den Textcursor des Eingabefensters auf eine Position verschieben, wo der Benutzer die Abkürzung eintragen kann.</em>
    Send {Home}{Right 3}
    SetTimer,, Off
    return
}</pre>
</div>

</body>
</html>
