<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Gui - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der Gui-Befehl erstellt und verwaltet Fenster und Steuerelemente. Solche Fenster können zur Dateneingabe oder als individuelle Benutzerschnittstellen verwendet werden." />
<meta name="ahk:equiv-v2" content="lib/Gui.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Gui</h1>

<p>Erstellt und verwaltet Fenster und Steuerelemente. Solche Fenster können zur Dateneingabe oder als individuelle Benutzerschnittstellen verwendet werden.</p>
<pre class="Syntax"><span class="func">Gui</span>, <a href="#SubCommands">Unterbefehl</a> <span class="optional">, Wert1, Wert2, Wert3</span></pre>
<p>Die Parameter <em>Unterbefehl</em>, <em>Wert1</em>, <em>Wert2</em> und <em>Wert3</em> sind voneinander abhängig und können wie folgt verwendet werden.</p>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul>
    <li><a href="#SubCommands">Unterbefehle</a></li>
    <li><a href="#WindowOptions">Optionen und Styles für ein Fenster</a></li>
    <li><a href="#ControlOptions">Optionen und Styles für ein Steuerelement</a></li>
    <li><a href="#Labels">Fensterereignisse</a></li>
    <li><a href="#MultiWin">Mehrere GUI-Fenster erstellen</a></li>
    <li><a href="#DefaultWin">GUI-Ereignisse, -Threads und -Subroutinen</a></li>
    <li><a href="#Navigate">Navigation mit der Tastatur</a></li>
    <li><a href="#Appear">Fensterdarstellung</a></li>
    <li><a href="#GenRemarks">Allgemeine Bemerkungen</a></li>
    <li><a href="#Examples">Beispiele</a></li>
</ul>

<h2 id="SubCommands">Unterbefehle</h2>
<p>Geben Sie für <em>Unterbefehl</em> Folgendes an:</p>
<ul>
    <li><a href="#New">New</a> <span class="ver">[v1.1.04+]</span>: Erstellt ein neues Fenster.</li>
    <li><a href="#Add">Add</a>: Erstellt ein Steuerelement wie z.B. Text, Button oder CheckBox.</li>
    <li><a href="#Show">Show</a>: Macht das Fenster sichtbar. Kann auch minimieren, maximieren oder verschieben.</li>
    <li><a href="#Submit">Submit</a>: Speichert die Benutzereingaben und versteckt optional das Fenster.</li>
    <li><a href="#Cancel">Cancel</a> / <a href="#Hide">Hide</a>: Versteckt das Fenster.</li>
    <li><a href="#Destroy">Destroy</a>: Löscht das Fenster.</li>
    <li><a href="#Font">Font</a>: Bestimmt Schriftart, -größe, -stil und -farbe für danach erstellte Steuerelemente.</li>
    <li><a href="#Color">Color</a>: Bestimmt die Hintergrundfarbe des Fensters und/oder seiner Steuerelemente.</li>
    <li><a href="#Margin">Margin</a>: Ändert die Abstände für automatisch positionierte Steuerelemente.</li>
    <li><a href="#Menu">Menu</a>: Fügt eine Menüleiste hinzu oder entfernt sie.</li>
    <li><a href="#Minimize">Minimize</a> / <a href="#Maximize">Maximize</a> / <a href="#Restore">Restore</a>: Minimiert, maximiert oder stellt ein Fenster wieder her.</li>
    <li><a href="#Flash">Flash</a>: Lässt das Fenster und seine Taskleistenschaltfläche einmal aufblinken.</li>
    <li><a href="#Default">Default</a>: Ändert den Standard-GUI-Fensternamen des aktuellen Threads.</li>
    <li><a href="#Options">+/-Option1 +/-Option2 ...</a>: Ändert das Aussehen und Verhalten des Fensters.</li>
</ul>

<h3 id="New">New <span class="ver">[v1.1.04+]</span></h3>
<p>Erstellt ein neues Fenster und macht es zum <a href="#Default">Standardfenster</a> für den aktuellen Thread.</p>
<pre class="Syntax"><span class="func">Gui</span>, New <span class="optional">, Optionen, Titel</span>
<span class="func">Gui</span>, GuiName:New <span class="optional">, Optionen, Titel</span></pre>
<p>Wenn <em>GuiName</em> angegeben ist, wird eine neue GUI erstellt, wobei eine existierende GUI mit diesem Namen zerstört wird. Andernfalls wird eine neue GUI erstellt, die weder benannt noch nummeriert ist.</p>
<p><em>Optionen</em> kann beliebig viele <a href="#Options">Optionen</a> enthalten, die vom Haupt-GUI-Befehl unterstützt werden.</p>
<p><em>Titel</em> kann weggelassen werden, um den Dateinamen des Skripts zu verwenden.</p>
<p>Nachteile und Vorbehalte:</p>
<ul>
    <li><code>Gui New</code> wird in der Regel nicht benötigt, da in den meisten Fällen das Fenster bei Bedarf automatisch erstellt wird.</li>
    <li>Das neue Fenster wird nur als <a href="#Default">Standardfenster</a> für den <em>aktuellen</em> Thread gesetzt – alle anderen Nicht-GUI-Threads verwenden weiterhin die <a href="#DefaultWin">Standard-GUI-Nummer 1</a>.</li>
    <li>Wenn die GUI keinen Namen hat und nicht die <a href="#Default">Standard-GUI</a> ist, muss sie über ihre HWND-Nummer (eindeutige ID) identifiziert werden. Verwenden Sie die Option <a href="#GuiHwndOutputVar">+Hwnd<i>GuiHwnd</i></a>, um die HWND-Nummer des neuen Fensters in <em>GuiHwnd</em> zu speichern. Verwenden Sie dann <code>Gui, %<i>GuiHwnd</i>%:Default</code>, um dieses Fenster zum Standardfenster für nachfolgende Gui-Befehle zu machen.</li>
</ul>
<p>Vorteile:</p>
<ul>
    <li>Der Aufruf von <code>Gui New</code> stellt sicher, dass eine neue GUI erstellt wird und keine bereits vorhandenen GUIs modifiziert werden. Eventuell erhöht dieser Unterbefehl auch die Chance, dass andere Personen (oder später der Autor selbst) den Zweck des Skripts besser verstehen.</li>
    <li><code>Gui New</code> verhindert, dass GUIs mit eindeutigen Namen oder Nummern versehen werden müssen. Dieser Unterbefehl ist besonders nützlich, wenn das Skript mehr als eine GUI erstellen muss oder in andere Skripte inkludiert werden soll.</li>
    <li>Manchmal ist es intuitiver, den Titel der GUI bereits bei ihrer Erstellung festzulegen, und nicht erst, wenn sie <a href="#Show">sichtbar gemacht</a> wird.</li>
</ul>
<p>Wenn kein Name angegeben ist, gilt folgendes:</p>
<ul>
    <li>Spezielle <a href="#Labels">Labels</a> wie z.B. <a href="#GuiClose">GuiClose</a> haben standardmäßig das Präfix "Gui", sofern nicht via <a href="#PlusLabel">+Label<em>Präfix</em></a> überschrieben.</li>
    <li>Wenn die GUI einen neuen Thread startet, enthält <a href="../Variables.htm#Gui">A_Gui</a> eine HWND-Nummer anstelle eines Namens.</li>
</ul>
<p class="note"><strong>Hinweis:</strong> Früher vor <span class="ver">[v1.1.08]</span> setzte dieser Unterbefehl kein Standard-GUI-Fenster, wenn ein Name angegeben war.</p>

<h3 id="Add">Add</h3>
<p>Fügt ein Steuerelement zum GUI-Fenster hinzu (und erstellt vorher das GUI-Fenster, falls nötig).</p>
<pre class="Syntax"><span class="func">Gui</span>, Add, Steuerelement <span class="optional">, Optionen, Text</span></pre>
<p><em>Steuerelement</em> kann folgendes sein: <a href="GuiControls.htm#ActiveX">ActiveX</a>, <a href="GuiControls.htm#Button">Button</a>, <a href="GuiControls.htm#CheckBox">CheckBox</a>, <a href="GuiControls.htm#ComboBox">ComboBox</a>, <a href="GuiControls.htm#Custom">Custom</a>, <a href="GuiControls.htm#DateTime">DateTime</a>, <a href="GuiControls.htm#DropDownList">DropDownList (oder DDL)</a>, <a href="GuiControls.htm#Edit">Edit</a>, <a href="GuiControls.htm#GroupBox">GroupBox</a>, <a href="GuiControls.htm#Hotkey">Hotkey</a>, <a href="GuiControls.htm#Link">Link</a>, <a href="GuiControls.htm#ListBox">ListBox</a>, <a href="GuiControls.htm#ListView">ListView</a>, <a href="GuiControls.htm#MonthCal">MonthCal</a>, <a href="GuiControls.htm#Picture">Picture (oder Pic)</a>, <a href="GuiControls.htm#Progress">Progress</a>, <a href="GuiControls.htm#Radio">Radio</a>, <a href="GuiControls.htm#Slider">Slider</a>, <a href="GuiControls.htm#StatusBar">StatusBar</a>, <a href="GuiControls.htm#Tab">Tab</a>, <a href="GuiControls.htm#Tab">Tab2</a>, <a href="GuiControls.htm#Tab">Tab3</a>, <a href="GuiControls.htm#Text">Text</a>, <a href="GuiControls.htm#TreeView">TreeView</a>, <a href="GuiControls.htm#UpDown">UpDown</a></p>
<p><em>Optionen</em> ist eine Zeichenkette aus beliebig vielen Optionen und Styles, die jeweils durch mindestens ein Leer- oder Tabulatorzeichen voneinander getrennt sind. Die Optionen werden im Abschnitt <a href="#ControlOptions">Optionen und Styles für ein Steuerelement</a> beschrieben.</p>
<p>Zum Beispiel:</p>
<pre>Gui, Add, Text,, Bitte tragen Sie Ihren Namen ein:
Gui, Add, Edit, vName
Gui, Show</pre>

<h3 id="Show">Show</h3>
<p>Sofern in <em>Optionen</em> nicht anders angegeben, bewirkt dieser Unterbefehl, dass das Fenster sichtbar gemacht, entminimiert (falls nötig), <a href="WinActivate.htm">aktiviert</a> und dessen Fenstertitel gesetzt wird.</p>
<pre class="Syntax"><span class="func">Gui</span>, Show <span class="optional">, Optionen, Titel</span></pre>
<p>Wenn <em>Titel</em> weggelassen wird, wird der zuvor gesetzte Titel verwendet (wenn es keinen gibt, wird der Dateiname des Skripts verwendet).</p>
<p>Die unteren Optionen X, Y, W und H können weggelassen werden, um die zuvor gesetzte Größe und Position des Fensters zu verwenden. Wenn es keine zuvor gesetzte Position gibt, wird das Fenster automatisch auf dem Bildschirm zentriert, je nachdem, ob die unten erwähnten Optionen X und Y fehlen. Wenn es keine zuvor gesetzte Größe gibt, wird die Fenstergröße automatisch an die Größe und Position aller darin enthaltenen Steuerelemente angepasst.</p>
<p>Für <em>Optionen</em> können beliebig viele der folgenden Optionen angegeben werden, die jeweils durch mindestens ein Leer- oder Tabulatorzeichen voneinander getrennt sind (jede Zahl muss dezimal sein, nicht hexadezimal):</p>
<p><strong>W</strong><em>n</em>: Geben Sie für <em>n</em> die Breite (in Pixel) des Clientbereichs an (das ist der Fensterbereich ohne Rahmen, Titelleiste und <a href="#Menu">Menüleiste</a>).</p>
<p><strong>H</strong><em>n</em>: Geben Sie für <em>n</em> die Höhe (in Pixel) des Clientbereichs an.</p>
<p><strong>X</strong><em>n</em>: Geben Sie für <em>n</em> die X-Position des Fensters auf dem Bildschirm an (in Pixel). Position 0 ist die erste linke sichtbare Pixelspalte auf dem Bildschirm.</p>
<p><strong>Y</strong><em>n</em>: Geben Sie für <em>n</em> die Y-Position des Fensters auf dem Bildschirm an (in Pixel). Position 0 ist die erste obere sichtbare Pixelzeile auf dem Bildschirm.</p>
<p><strong>Center:</strong> Zentriert das Fenster horizontal und vertikal auf dem Bildschirm.</p>
<p><strong>xCenter:</strong> Zentriert das Fenster horizontal auf dem Bildschirm. Zum Beispiel: <code>Gui, Show, xCenter y0</code>.</p>
<p><strong>yCenter:</strong> Zentriert das Fenster vertikal auf dem Bildschirm.</p>
<p id="AutoSize"><strong>AutoSize:</strong> Passt die Fenstergröße automatisch an die Größe und Position aller sichtbaren Steuerelemente im Fenster an. Diese Option ist besonders nützlich, wenn neue Steuerelemente hinzugefügt werden, oder wenn bereits vorhandene Steuerelemente größer/kleiner, sichtbar oder unsichtbar gemacht werden. Zum Beispiel: <code>Gui, Show, AutoSize Center</code>.</p>
<p><strong>Minimize:</strong> Minimiert das Fenster und aktiviert das darunter liegende Fenster.</p>
<p><strong>Maximize:</strong> Maximiert und aktiviert das Fenster.</p>
<p><strong>Restore:</strong> Entminimiert oder entmaximiert das Fenster, falls nötig. Zusätzlich wird das Fenster sichtbar gemacht und aktiviert, falls nötig.</p>
<p><strong>NoActivate:</strong> Entminimiert oder entmaximiert das Fenster, falls nötig. Zusätzlich wird das Fenster sichtbar gemacht, ohne es zu aktivieren.</p>
<p><strong>NA:</strong> Macht das Fenster sichtbar, ohne es zu aktivieren. Wenn das Fenster minimiert ist, bleibt es minimiert, kann aber in der Z-Rangfolge aufsteigen (die aktuelle Rangfolge kann im Alt-Tab-Fenster eingesehen werden). Wenn das Fenster zuvor versteckt war, bewirkt diese Option, dass es über dem aktiven Fenster erscheint, obwohl das aktive Fenster nicht deaktiviert ist.</p>
<p><strong>Hide:</strong> Versteckt das Fenster und aktiviert das darunter liegende Fenster. Funktionsgemäß ist diese Option identisch mit <a href="#Cancel">Gui Cancel</a>, ermöglicht es aber, ein verstecktes Fenster zu verschieben, größer/kleiner zu machen oder neu zu betiteln, ohne es sichtbar zu machen. Zum Beispiel: <code>Gui, Show, Hide x55 y66 w300 h200, Neuer Titel</code>.</p>

<h3 id="Submit">Submit</h3>
<p>Speichert den Inhalt der Steuerelemente in ihre <a href="#var">zugeordneten Variablen</a> (falls vorhanden) und versteckt das Fenster (mit NoHide kann das Verstecken verhindert werden).</p>
<pre class="Syntax"><span class="func">Gui</span>, Submit <span class="optional">, NoHide</span></pre>
<p>Steuerelemente, die mehrere Ausgabefelder erzeugen, z.B. eine <a href="GuiControls.htm#ListBoxMulti">Mehrfachauswahl-ListBox</a>, verwenden das <a href="#Delimiter">aktuelle Trennzeichen</a> des Fensters, um diese voneinander zu trennen. Wenn das Fenster nicht existiert (z.B. weil es via <a href="#Destroy">Gui Destroy</a> zerstört wurde), ist dieser Unterbefehl wirkungslos.</p>

<div id="Cancel"><h3 id="Hide">Cancel / Hide</h3></div>
<p>Versteckt das Fenster, ohne den Inhalt der Steuerelemente in ihre <a href="#var">zugeordneten Variablen</a> zu speichern.</p>
<pre class="Syntax"><span class="func">Gui</span>, Cancel
<span class="func">Gui</span>, Hide</pre>
<p>Wenn das Fenster nicht existiert (z.B. weil es via <a href="#Destroy">Gui Destroy</a> zerstört wurde), ist dieser Unterbefehl wirkungslos.</p>

<h3 id="Destroy">Destroy</h3>
<p>Entfernt das Fenster (falls vorhanden) und alle darin enthaltenen Steuerelemente und gibt die zugehörigen Speicher- und Systemressourcen frei.</p>
<pre class="Syntax"><span class="func">Gui</span>, Destroy</pre>
<p>Wenn das Fenster später neu erstellt wird, beginnen alle Fenstereigenschaften wie Farbe und Schrift wieder mit ihren Standardwerten (als hätte das Fenster nie existiert). Alle GUI-Fenster werden automatisch zerstört, sobald das Skript beendet wird.</p>

<h3 id="Font">Font</h3>
<p>Bestimmt Schriftart, Schriftgröße, Schriftstil und/oder Schriftfarbe für danach erstellte Steuerelemente.</p>
<pre class="Syntax"><span class="func">Gui</span>, Font <span class="optional">, Optionen, SchriftName</span></pre>
<p>Zum Beispiel:</p>
<pre>Gui, Font, s10, Verdana  <em>; Schriftart Verdana mit Größe 10.</em></pre>
<p>Die letzten beiden Parameter können weggelassen werden, um die Standard-GUI-Schriftart des Systems, inklusive Größe und Farbe, wiederherzustellen.</p>
<p><em>SchriftName</em> ist der Name einer beliebigen Schrift, z.B. eine aus der <a href="../misc/FontsStandard.htm">Schriftentabelle</a>. Wenn <em>SchriftName</em> weggelassen wird oder im System nicht vorhanden ist, wird die zuvor gesetzte Schriftart verwendet (wenn es keine gibt, wird die Standard-GUI-Schriftart des Systems verwendet). Dieses Verhalten ist nützlich, um ein GUI-Fenster, das für mehrere Systeme gedacht ist, eine ähnliche Schrift verwenden zu lassen, selbst wenn in einigen dieser Systeme die bevorzugte Schrift fehlt. Das folgende Beispiel bewirkt, dass Verdana gegenüber Arial bevorzugt wird, welches wiederum gegenüber MS Sans Serif bevorzugt wird:</p>
<pre>Gui, Font,, MS Sans Serif
Gui, Font,, Arial
Gui, Font,, Verdana  <em>; Bevorzugte Schrift.</em></pre>
<p>Wenn der <em>Optionen</em>-Parameter leer ist oder weggelassen wird, werden die Attribute der zuvor gesetzten Schrift verwendet. Andernfalls geben Sie stattdessen einen oder mehrere der folgenden Optionsbuchstaben an, die jeweils durch mindestens ein Leer- oder Tabulatorzeichen voneinander getrennt sind:</p>
<p><strong>C:</strong> Der Name einer Farbe (siehe <a href="Progress.htm#colors">Farbentabelle</a>) oder ein RGB-Wert, oder das Wort Default, um die Standardfarbe des Systems wiederherzustellen (üblicherweise schwarz). Beispielwerte: <code class="no-highlight">cRed</code>, <code class="no-highlight">cFFFFAA</code>, <code class="no-highlight">cDefault</code>. Hinweis: <a href="GuiControls.htm#Button">Button</a>- und <a href="GuiControls.htm#StatusBar">StatusBar</a>-Steuerelemente können nicht mit einer benutzerdefinierten Farbe versehen werden. Alternativ kann auch die C-Option verwendet werden, um die Schriftfarbe für einzelne Steuerelemente bei ihrer Erstellung zu bestimmen. Zum Beispiel: <code>Gui, Add, Text, cRed, Mein Text</code>.</p>
<p><strong>S:</strong> Größe (in Punkten). Zum Beispiel: <code class="no-highlight">s12</code> (Dezimalzahl, nicht Hexadezimalzahl).</p>
<p><strong>W:</strong> Breite (Dicke). Eine Zahl zwischen 1 und 1000 (400 ist normal und 700 ist fett). Zum Beispiel: <code class="no-highlight">w600</code> (Dezimalzahl, nicht Hexadezimalzahl).</p>
<p>Die folgenden Wörter werden ebenfalls unterstützt: <strong>bold</strong>, <em>italic</em>, <s>strike</s>, <u>underline</u> und norm (übersetzt: fett, kursiv, durchgestrichen, unterstrichen und normal). <em>Norm</em> stellt die normale Breite/Dicke der Schrift wieder her und schaltet italic, strike und underline aus (Farbe und Größe bleiben unverändert). Es ist möglich, Norm zu verwenden, um alle Attribute auszuschalten und dann selektiv andere einzuschalten. Zum Beispiel bewirkt <code class="no-highlight">norm italic</code>, dass die Schrift normalisiert und anschließend kursiv gemacht wird.</p>
<p>Mehrere Optionen müssen mit einem Leerzeichen voneinander getrennt werden. Zum Beispiel: <code class="no-highlight">cBlue s12 bold</code>.</p>
<p>Bei <a href="#MultiWin">mehreren GUI-Fenstern</a> ist zu beachten, dass jedes Fenster seine eigenen gespeicherten Schrifteinstellungen abruft, wenn neue Steuerelemente erstellt werden.</p>
<p>Das Betriebssystem stellt außerdem Standarddialogfenster bereit, die der Benutzer zum Auswählen einer Schriftart, einer Farbe oder eines Symbols verwenden kann. Solche Dialogfenster können via <a href="DllCall.htm">DllCall()</a> angezeigt werden, wie auf <a href="https://github.com/majkinetor/mm-autohotkey/tree/master/Dlg">GitHub</a> gezeigt.</p>
<p id="fontq"><strong>Q:</strong> <span class="ver">[AHK_L 19+]</span>: Textdarstellungsqualität. Zum Beispiel: <code class="no-highlight">q3</code>. Nach Q muss eine Nummer aus der folgenden Tabelle angegeben werden:</p>
<table class="info">
    <tr>
        <th>Nummer</th>
        <th abbr="Konstante">Windows-Konstante</th>
        <th abbr="Beschr">Beschreibung</th>
    </tr>
    <tr>
        <td>0</td>
        <td>DEFAULT_QUALITY</td>
        <td>Die Darstellung der Schrift spielt keine Rolle.</td>
    </tr>
    <tr>
        <td>1</td>
        <td>DRAFT_QUALITY</td>
        <td>Die exakte Übereinstimmung mit logischen Schriftattributen (fett, kursiv usw.) ist wichtiger als die Zeichenqualität der Schrift.</td>
    </tr>
    <tr>
        <td>2</td>
        <td>PROOF_QUALITY</td>
        <td>Die Zeichenqualität der Schrift ist wichtiger als die exakte Übereinstimmung mit logischen Schriftattributen (fett, kursiv usw.).</td>
    </tr>
    <tr>
        <td>3</td>
        <td>NONANTIALIASED_QUALITY</td>
        <td>Die Schrift wird nie antialiasiert (geglättet).</td>
    </tr>
    <tr>
        <td>4</td>
        <td>ANTIALIASED_QUALITY</td>
        <td>Die Schrift wird antialiasiert (geglättet), wenn die Schrift dies unterstützt und nicht zu klein oder zu groß ist.</td>
    </tr>
    <tr>
        <td>5</td>
        <td>CLEARTYPE_QUALITY</td>
        <td>Windows XP und höher: Die Schrift wird (wenn möglich) mit der ClearType-Antialiasing-Methode gerendert.</td>
    </tr>
</table>
<p>Weitere Informationen zur Bedeutung dieser Werte finden Sie unter <a href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-createfonta">Microsoft Docs: CreateFont</a>.</p>
<p>Standardmäßig wird die höchste Qualitätseinstellung verwendet. Daher wird dieses Feature eher dazu verwendet, die Kantenglättung auszuschalten, um den Text in bestimmten Fällen besser lesbar zu machen.</p>

<h3 id="Color">Color</h3>
<p>Bestimmt die Hintergrundfarbe des Fensters und/oder aller darin enthaltenen Steuerelemente.</p>
<pre class="Syntax"><span class="func">Gui</span>, Color <span class="optional">, FensterFarbe, SteuerelementFarbe</span></pre>
<p><em>FensterFarbe</em> wird als Hintergrund für das GUI-Fenster selbst verwendet. <em>SteuerelementFarbe</em> wird auf alle aktuellen und zukünftigen Steuerelemente im Fenster angewendet, die benutzerdefinierte Farben unterstützen. <em>SteuerelementFarbe</em> wirkt sich nur einmalig auf <a href="ListView.htm">ListView</a>- und <a href="TreeView.htm">TreeView</a>-Steuerelemente aus; nachträgliche Änderungen der <em>SteuerelementFarbe</em> haben keine Auswirkung auf diese Steuerelemente. In solchen Fällen kann <code>GuiControl +BackgroundFF9977, MeineListView</code> verwendet werden, um die Farbe explizit zu ändern.</p>
<p>Beide Parameter können leer gelassen werden, um die entsprechende Farbe beizubehalten. Andernfalls geben Sie einen der 16 primären <a href="Progress.htm#colors">HTML-Farbnamen</a> oder einen 6-stelligen RGB-Farbwert (mit oder ohne 0x-Präfix) an, oder das Wort Default, um die Standardfarbe wiederherzustellen. Beispielwerte: <code class="no-highlight">Silver</code>, <code class="no-highlight">FFFFAA</code>, <code class="no-highlight">0xFFFFAA</code>, <code class="no-highlight">Default</code>.</p>
<p>Ein Fenster verwendet als Hintergrundfarbe standardmäßig die Standardschaltflächenfarbe des Systems, während ein Steuerelement als Hintergrundfarbe standardmäßig die Standardfensterfarbe des Systems verwendet (üblicherweise weiß).</p>
<p>Die Farbe der <a href="#Menu">Menüleiste</a> und aller darin enthaltenen Untermenüs kann wie folgt geändert werden: <code><a href="Menu.htm">Menu</a>, MeineMenüleiste, Color, White</code>.</p>
<p>Mit <a href="WinSet.htm#TransColor">WinSet TransColor</a> kann der Hintergrund transparent gemacht werden. Wenn Sie dies jedoch tun, ohne zuvor eine benutzerdefinierte Fensterfarbe via <a href="#Color">Gui Color</a> zugewiesen zu haben, werden Button-Steuerelemente ebenfalls transparent. Um das zu verhindern, weisen Sie zuerst eine benutzerdefinierte Farbe zu und machen Sie diese dann transparent. Zum Beispiel:</p>
<pre>Gui, Color, EEAA99
Gui +LastFound  <em>; Macht das GUI-Fenster zum <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundenen Fenster</a> für die Zeile darunter.</em>
WinSet, TransColor, EEAA99</pre>
<p>Die folgende Zeile kann hinzugefügt werden, um den Rahmen und die Titelleiste eines Fensters zu entfernen, das <strong>bereits</strong> transparent gemacht wurde:</p>
<pre>Gui -Caption  <em>; Oder <i>Gui, GuiName:-Caption</i>, falls es nicht das <a href="#DefaultWin">Standardfenster</a> ist.</em></pre>
<p>Weiter unten finden Sie ein Beispiel für eine Bildschirmanzeige (engl. On-Screen Display, kurz OSD), das zeigt, wie diese Methode in der Praxis verwendet werden kann.</p>

<h3 id="Margin">Margin</h3>
<p>Bestimmt die Anzahl der Pixel, die auf der linken/rechten und oberen/unteren Seite des Fensters freigelassen werden, wenn Steuerelemente aufgrund fehlender <a href="#XY">X- oder Y-Koordinate</a> automatisch positioniert werden.</p>
<pre class="Syntax"><span class="func">Gui</span>, Margin <span class="optional">, X, Y</span></pre>
<p>Diese Abstände werden auch verwendet, um den vertikalen und horizontalen Abstand zwischen automatisch positionierten Steuerelementen zu bestimmen. Außerdem werden diese Abstände zur Berechnung der Fenstergröße herangezogen, wenn <a href="#Show">Gui Show</a> zum ersten Mal verwendet wird (wenn keine explizite Größe angegeben ist).</p>
<p><code>Gui, Margin</code> beeinflusst nur das <a href="#Default">Standardfenster</a>, während <code>Gui, Name:Margin</code> nur Einfluss auf das <a href="#MultiWin">benannte Fenster</a> hat. Wenn dieser Unterbefehl nicht verwendet wird, werden die Ränder des Fensters beim Hinzufügen des ersten Steuerelements standardmäßig mit Abständen versehen, die proportional zur Größe der aktuell ausgewählten <a href="#Font">Schrift</a> sind (das 0,75-fache der Schrifthöhe für oben &amp; unten und das 1,25-fache der Schrifthöhe für links &amp; rechts).</p>
<p>Es ist möglich, die Abstände zu ändern, während Steuerelemente hinzugefügt werden. Allerdings gelten solche Änderungen nur für danach hinzugefügte Steuerelemente, nicht für bereits vorhandene. Wenn X oder Y weggelassen wird, bleibt der entsprechende Abstand unverändert.</p>

<h3 id="Menu">Menu</h3>
<p>Stattet das Fenster mit einer Menüleiste aus.</p>
<pre class="Syntax"><span class="func">Gui</span>, Menu <span class="optional">, MenüName</span></pre>
<p>Verwenden Sie hierfür den <a href="Menu.htm">Menu</a>-Befehl, um ein gewöhnliches Menü zu erstellen. Zum Beispiel:</p>
<pre>Menu, DateiMenü, Add, Ö&amp;ffnen<a href="../misc/EscapeChar.htm">`t</a>Ctrl+F, MenüDateiÖffnen  <em>; Siehe untere Bemerkungen zu Ctrl+F.</em>
Menu, DateiMenü, Add, &amp;Beenden, MenuHandler
Menu, HilfeMenü, Add, Inf&amp;o, MenuHandler
Menu, MeineMenüleiste, Add, &amp;Datei, :DateiMenü  <em>; Die zwei oben erstellten Untermenüs hinzufügen.</em>
Menu, MeineMenüleiste, Add, &amp;?, :HilfeMenü
Gui, Menu, MeineMenüleiste</pre>
<p>In der ersten Zeile oben sehen Sie <code class="no-highlight">Ctrl+F</code>, das nach <code class="no-highlight">Ö&amp;ffnen</code> folgt (mit einem Tabulatorzeichen dazwischen). Dabei handelt es sich um ein Tastaturkurzbefehl, den der Benutzer drücken kann, um die Aktion des Menüpunkts auszuführen, ohne dass der Benutzer erst dorthin navigieren muss. <span class="ver">[v1.1.04+]</span>: Tastaturkurzbefehle mit den regulären Modifikatortasten Ctrl, Alt und Shift werden automatisch als <em>Keyboard Accelerator</em> für die GUI registriert. Keyboard Accelerators ohne Modifikatoren sind Groß-/Kleinschreibung-sensitiv und können nur mit ungewöhnlichen Mitteln wie IME oder <kbd>Alt</kbd>+NNNN ausgelöst werden.</p>
<p>Wenn eine bestimmte Tastenkombination nicht automatisch funktioniert, können Sie ggf. einen <a href="_IfWinActive.htm">kontextabhängigen Hotkey</a> verwenden. Beachten Sie aber, dass solche Hotkeys üblicherweise nicht durch <a href="Send.htm">Send</a> ausgelöst werden können und dass sie im Gegensatz zu einem typischen Keyboard Accelerator andere Skripte stören können.</p>
<p>Mit <code>Gui Menu</code> (also ohne den letzten Parameter) können Sie die aktuelle Menüleiste aus dem Fenster entfernen.</p>
<p>Ein Menü, das bereits als Menüleiste fungiert, sollte nicht als Kontextmenü oder Untermenü verwendet werden. Der Grund dafür ist, dass Menüleisten intern ein anderes Format benötigen. (Diese Einschränkung gilt jedoch nur für die Menüleiste selbst, nicht für ihre Untermenüs.) Um dieses Problem zu umgehen, erstellen Sie zweimal das gleiche Menü und weisen Sie eines davon der Menüleiste zu.</p>
<p>Das Anwenden von destruktiven <a href="Menu.htm">Menu-Unterbefehlen</a> wie Delete und DeleteAll auf eine Menüleiste (und in einigen Fällen auf die darin enthaltenen Untermenüs) ist wirkungslos und bewirkt, dass ein Fehlerdialogfenster angezeigt wird (sofern <a href="Menu.htm">UseErrorLevel</a> nicht aktiv ist). Befolgen Sie die folgenden Schritte, um diese Art von Änderungen vornehmen zu können: 1) Entfernen Sie die Menüleiste mit <code>Gui Menu</code> (also ohne den <em>MenüName</em>-Parameter); 2) machen Sie die gewünschten Änderungen; 3) fügen Sie die Menüleiste mit <code>Gui, Menu, MeineMenüleiste</code> wieder hinzu.</p>

<div id="Restore"><div id="Maximize"><h3 id="Minimize">Minimize / Maximize / Restore</h3></div></div>
<p>Macht das Fenster sichtbar (falls nötig) und führt die entsprechende Operation durch.</p>
<pre class="Syntax"><span class="func">Gui</span>, Minimize
<span class="func">Gui</span>, Maximize
<span class="func">Gui</span>, Restore</pre>
<p>Wenn das Fenster nicht existiert (z.B. weil es via <a href="#Destroy">Gui Destroy</a> zerstört wurde), ist dieser Unterbefehl wirkungslos.</p>

<h3 id="Flash">Flash</h3>
<p>Lässt die Taskleistenschaltfläche des Fensters einmal aufblinken.</p>
<pre class="Syntax"><span class="func">Gui</span>, Flash <span class="optional">, Off</span></pre>
<p>Dazu wird die Farbe der Titelleiste und/oder der Taskleistenschaltfläche (falls vorhanden) invertiert. Geben Sie das optionale Wort Off an, um die Originalfarben der Titelleiste und Taskleistenschaltfläche wiederherzustellen (das tatsächliche Verhalten variiert aber je nach OS-Version). Das folgende Beispiel lässt das Fenster dreimal aufblinken, da jedes Paar von "Gui Flash" die Farben des Fensters invertiert und wiederherstellt:</p>
<pre>Loop 6
{
    Gui Flash
    Sleep 500  <em>; Es reagiert sehr empfindlich auf diesen Wert; Änderungen können zu unerwarteten Ergebnissen führen.</em>
}</pre>

<h3 id="Default">Default</h3>
<p>Ändert den Standard-<a href="#MultiWin">GUI-Fensternamen</a> des <a href="../misc/Threads.htm">aktuellen Threads</a>.</p>
<pre class="Syntax"><span class="func">Gui</span>, GuiName:Default</pre>
<p>Dies wird immer dann verwendet, wenn für <a href="GuiControl.htm">GuiControl</a>, <a href="GuiControlGet.htm">GuiControlGet</a> und den Gui-Befehl selbst kein Fenstername angegeben wurde. Das folgende Beispiel ändert den Standardfensternamen in "MeineGui": <code>Gui MeineGui:Default</code>. Weitere Informationen zum Standardfenster finden Sie unter <a href="#DefaultWin">Standardfenster eines Threads</a>.</p>
<p><span class="ver">[v1.1.03+]</span>: <em>GuiName</em> kann die <a href="#GuiHwndOutputVar">HWND-Nummer (eindeutige ID)</a> eines GUI-Fensters des Skripts sein. Wenn das Fenster einen Namen hat, wird dieser Name zum Standardfensternamen, der auch nach dem Zerstören des Fensters erhalten bleibt. Wenn das Fenster keinen Namen hat, wird der Standardfenstername beim Zerstören des Fensters auf 1 zurückgesetzt.</p>
<p><span class="ver">[v1.1.23+]</span>: Die interne Variable <strong>A_DefaultGui</strong> enthält den Namen oder die Nummer der Standard-GUI.</p>

<h3 id="Options">+/-Option1 +/-Option2 ...</h3>
<p>Setzt verschiedene Optionen und Styles für das Aussehen und Verhalten des Fensters. Weitere Informationen finden Sie unter <a href="#WindowOptions">Optionen und Styles für ein Fenster</a> (siehe unten).</p>

<h2 id="WindowOptions">Optionen und Styles für ein Fenster</h2>
<p>Nach dem GUI-Befehl können Optionen und Styles angegeben werden, die jeweils durch mindestens ein Leer- oder Tabulatorzeichen voneinander getrennt sind.</p>
<pre class="Syntax"><span class="func">Gui</span>, +/-Option1 +/-Option2 ...</pre>
<p>Aus Performanzgründen ist es besser, alle Optionen auf einer Zeile zu setzen, bevor das Fenster erstellt wird (also bevor andere Unterbefehle wie z.B. <a href="#Add">Gui Add</a> verwendet werden).</p>
<p>Der Effekt des Befehls ist kumulativ (summierend), d.h. dieser Befehl ändert nur die explizit angegebenen Optionen, alle anderen bleiben unverändert.</p>
<p>Geben Sie ein Pluszeichen an, um die Option hinzuzufügen, oder ein Minuszeichen, um sie zu entfernen. Zum Beispiel:</p>
<pre>Gui +Resize -MaximizeBox  <em>; Ändert die Einstellungen des <a href="#DefaultWin">Standard</a>-GUI-Fensters.</em>
Gui <strong>MeineGui:</strong>+Resize -MaximizeBox  <em>; Ändert die Einstellungen der GUI namens <i>MeineGui</i>.</em></pre>
<p><strong>AlwaysOnTop:</strong> Gibt dem Fenster die Eigenschaft, immer im Vordergrund zu sein, also immer vor allen anderen Fenstern sichtbar zu sein, was den gleichen Effekt hat wie <a href="WinSet.htm#AlwaysOnTop">WinSet AlwaysOnTop</a>.</p>
<p><strong>Border:</strong> Stattet das Fenster mit einem dünnen Rahmen aus. Diese Option wird selten verwendet.</p>
<p><strong>Caption</strong> (standardmäßig vorhanden): Stattet das Fenster mit einer Titelleiste und einem dicken Rahmen aus. Beachten Sie, dass die Titelleiste eines Fensters erst entfernt werden sollte, nachdem eine Farbe mit <a href="WinSet.htm#TransColor">WinSet TransColor</a> transparent gemacht wurde.</p>
<p id="Delimiter"><strong>Delimiter:</strong> Gibt an, dass das Fenster nicht den Vertikalstrich (|), sondern ein anderes Zeichen als Trennzeichen verwenden soll, wenn Steuerelementinhalte via <a href="#Add">Gui Add</a> hinzugefügt, via <a href="GuiControl.htm">GuiControl</a> modifiziert, oder via <a href="#Submit">Gui Submit</a> oder <a href="GuiControlGet.htm">GuiControlGet</a> abgerufen werden. Geben Sie das gewünschte Trennzeichen direkt nach dem Wort Delimiter an. Zum Beispiel würde <code>Gui +Delimiter`n</code> ein Zeilenvorschubzeichen verwenden, das sich besonders gut für <a href="../Scripts.htm#continuation">Fortsetzungsbereiche</a> eignet. Entsprechend kann mit <code>Gui +Delimiter|</code> das Standardtrennzeichen wiederhergestellt werden. Um ein Leer- oder Tabulatorzeichen zu verwenden, geben Sie <code>Gui +DelimiterSpace</code> oder <code>Gui +DelimiterTab</code> an. Die Änderung des Trennzeichens wirkt sich auf alle vorhandenen und nachfolgenden <a href="../misc/Threads.htm">Threads</a> aus, die mit diesem bestimmten Fenster arbeiten.</p>
<p><strong>Disabled:</strong> Deaktiviert das Fenster, um den Benutzer daran zu hindern, mit den darin enthaltenen Steuerelementen zu interagieren. Diese Option wird oft auf ein Fenster mit Unterfenstern angewendet (siehe <a href="#Owner">Owner</a>).</p>
<p id="DPIScale"><strong>DPIScale</strong> <span class="ver">[v1.1.11+]</span>: Verwenden Sie <code>Gui -DPIScale</code>, um die standardmäßig aktive <a href="../misc/DPIScaling.htm">DPI-Skalierung</a> zu deaktivieren. Wenn die DPI-Skalierung aktiviert ist, werden Koordinaten und Größen, die an die Gui-Unterbefehle und verwandte Variablen übergeben oder von diesen abgerufen werden, automatisch gemäß dem <a href="../Variables.htm#ScreenDPI">Bildschirm-DPI-Wert</a> skaliert. Bei einem DPI-Wert von z.B. 144 (150&nbsp;%) würde <code>Gui Show, w100</code> die GUI 150 (100 * 1.5) Pixel breit machen, während eine Änderung der Fensterbreite auf 200 Pixel via Maus oder <a href="WinMove.htm">WinMove</a> dazu führen würde, dass <a href="../Variables.htm#GuiWidth">A_GuiWidth</a> 133 (200 // 1.5) zurückgibt. <a href="../Variables.htm#ScreenDPI">A_ScreenDPI</a> enthält den aktuellen DPI-Wert des Systems.</p>
<p>Die DPI-Skalierung betrifft nur Gui-Unterbefehle und verwandte Variablen, d.h. Koordinaten aus anderen Quellen wie ControlGetPos oder WinGetPos werden nicht funktionieren. Es gibt eine Reihe von Möglichkeiten, damit umzugehen:</p>
<ul>
    <li>Vermeiden Sie hartkodierte Koordinaten, wenn möglich. Verwenden Sie z.B. die Optionen <a href="#xp">XP</a>, <a href="#xs">XS</a>, <a href="#xm">XM</a> und <a href="#PosPlusMargin">X+M</a>, um Steuerelemente zu positionieren, und geben Sie die Höhe in <a href="#R">Textzeilen</a> statt in Pixeln an.</li>
    <li>Die Skalierung kann jederzeit ein- (<code>Gui +DPIScale</code>) und ausgeschaltet (<code>Gui -DPIScale</code>) werden. Die Änderung der Einstellung hat keinen Einfluss auf bereits definierte Positionen oder Größen.</li>
    <li>Passen Sie die Koordinaten manuell an. Zum Beispiel wandelt <code>x*(A_ScreenDPI/96)</code> logische Koordinaten bzw. GUI-Koordinaten (in diesem Fall x) in physische Koordinaten bzw. Nicht-GUI-Koordinaten um.</li>
</ul>
<p id="GuiHwndOutputVar"><strong>Hwnd</strong><em>AusgabeVar</em> <span class="ver">[v1.1.04+]</span>: Diese Option speichert das Fensterhandle (HWND) der GUI in <em>AusgabeVar</em>. Zum Beispiel: <code>Gui +HwndMeineGuiHwnd</code>. Innerhalb einer Funktion wird <em>MeineGuiHwnd</em> als <a href="../Functions.htm#DynVar">dynamische Variable</a> behandelt. Die HWND-Nummer (eindeutige ID) einer GUI wird oft in Verbindung mit <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall()</a> verwendet. Außerdem kann diese Nummer direkt als <a href="../misc/WinTitle.htm#ahk_id">ahk_id-Fenstertitel</a> oder anstelle eines GUI-Namens verwendet werden, z.B. <code>Gui %MeineGuiHwnd%:Destroy</code>.</p>
<p id="PlusLabel"><strong>Label</strong> <span class="ver">[v1.0.44.09+]</span>: Bestimmt benutzerdefinierte Namen für die <a href="#Labels">speziellen Labels</a> des Fensters. Zum Beispiel bewirkt <code>Gui MeineGui:+LabelMeineGui_On</code>, dass das Fenster nicht MeineGuiGuiClose und MeineGuiGuiSize, sondern MeineGui_OnClose und MeineGui_OnSize als Labels (sofern vorhanden) verwendet. Mit anderen Worten, die Zeichenkette "MeineGuiGui" wird in allen <a href="#Labels">speziellen Labelnamen</a> durch "MeineGui_On" ersetzt. Diese Option kann auch verwendet werden, um mehreren Fenstern den gleichen Satz von Labels zuzuweisen (in diesem Fall kann das Skript <a href="../Variables.htm#Gui">A_Gui</a> verwenden, um herauszufinden, welches Fenster die Subroutine gestartet hat).</p>
<p id="LastFound"><strong>LastFound:</strong> Macht das Fenster zum <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundenen Fenster</a> (geschieht automatisch in einem <a href="#DefaultWin">GUI-Thread</a>), damit Befehle wie <a href="WinSet.htm">WinSet</a> mit diesem Fenster arbeiten können, sogar wenn es versteckt ist (d.h. <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> ist nicht notwendig). Diese Option ist besonders nützlich, um die Eigenschaften des Fensters vor dem Anzeigen zu ändern. Zum Beispiel:</p>
<pre>Gui +LastFound
WinSet, TransColor, %UnsichtbareFarbe% 150
Gui Show</pre>
<p id="LastFoundExist"><strong>LastFoundExist</strong> <span class="ver">[v1.0.43.09+]</span>: Im Gegensatz zu den anderen Optionen wird LastFoundExist nur erkannt, wenn keine anderen Optionen auf der gleichen Zeile vorhanden sind. <code class="no-highlight">+LastFoundExist</code> ist dasselbe wie <code class="no-highlight">+LastFound</code>, mit dem Unterschied, dass das Fenster nicht erstellt wird, wenn es noch nicht existiert. Der Hauptzweck dieser Option ist es, herauszufinden, ob ein bestimmtes GUI-Fenster existiert. Zum Beispiel:</p>
<pre>Gui MeineGui:+LastFoundExist
if WinExist()
    MsgBox GUI "MeineGui" existiert bereits.</pre>
<p><strong>MaximizeBox:</strong> Aktiviert die Titelleistenschaltfläche zum Maximieren des Fensters. Diese Option ist in <em>Resize</em> inbegriffen.</p>
<p><strong>MinimizeBox</strong> (standardmäßig vorhanden): Aktiviert die Titelleistenschaltfläche zum Minimieren des Fensters.</p>
<p id="MinSize"><strong>MinSize</strong> und <strong>MaxSize</strong> <span class="ver">[v1.0.44.13+]</span>: Bestimmt die minimale und/oder maximale Fenstergröße, z.B. wenn der Benutzer an den Rändern des Fensters zieht, um es kleiner/größer zu machen. Geben Sie <code class="no-highlight">+MinSize</code> und/oder <code class="no-highlight">+MaxSize</code> an (also ohne Suffix), um die aktuelle Fenstergröße als Grenzwert zu verwenden (wenn das Fenster keine aktuelle Größe hat, wird die gesetzte Größe des ersten <a href="#Show">Gui Show</a> verwendet). Alternativ können Sie auch die Breite, ein X und dann die Höhe anfügen, z.B. <code>Gui +Resize +MinSize640x480</code>. Diese Dimensionen (in Pixel) spezifizieren die Größe des Clientbereichs des Fensters (das ist der Bereich ohne Rahmen, Titelleiste und <a href="#Menu">Menüleiste</a>). Geben Sie jede Zahl als Dezimalzahl an, nicht als Hexadezimalzahl.</p>
<p>Eine der Dimensionen kann weggelassen werden, um sie unverändert zu lassen (z.B. <code class="no-highlight">+MinSize640x</code> oder <code class="no-highlight">+MinSizex480</code>). Außerdem kann Min/MaxSize mehrfach angegeben werden, um für eine Dimension die aktuelle Fenstergröße und für die andere eine explizite Größe zu verwenden. Zum Beispiel würde <code class="no-highlight">+MinSize +MinSize640x</code> die aktuelle Fenstergröße für die Höhe und 640 Pixel für die Breite verwenden.</p>
<p>Wenn MinSize und MaxSize nie verwendet werden, werden die Standardwerte des Betriebssystems verwendet. Mit <code>Gui -MinSize -MaxSize</code> können die Standardwerte wiederhergestellt werden.</p>
<p class="note"><strong>Hinweis:</strong> Das Fenster muss <a href="#Resize">+Resize</a> haben, damit der Benutzer es kleiner/größer machen kann.</p>
<p id="OwnDialogs"><strong>OwnDialogs:</strong> <code>Gui +OwnDialogs</code> bewirkt, dass alle nachfolgenden <a href="MsgBox.htm">MsgBox</a>-, <a href="InputBox.htm">InputBox</a>-, <a href="FileSelectFile.htm">FileSelectFile</a>- oder <a href="FileSelectFolder.htm">FileSelectFolder</a>-Dialogfenster im aktuellen <a href="../misc/Threads.htm">Thread</a> (z.B. ButtonOK-Subroutine) dem aktuellen Fenster untergeordnet werden. Solche Dialogfenster werden modal, d.h. der Benutzer kann erst mit dem GUI-Fenster interagieren, wenn er das Dialogfenster schließt. <a href="ToolTip.htm">ToolTip</a>-, <a href="Progress.htm">Progress</a>- und <a href="Progress.htm">SplashImage</a>-Fenster können hingegen nicht modal gemacht werden, selbst wenn sie einem Fenster untergeordnet werden; diese werden immer über ihrem übergeordneten Fenster angezeigt. Untergeordnete Dialogfenster werden automatisch zerstört, sobald ihr übergeordnetes Fenster <a href="#Destroy">zerstört</a> wird.</p>
<p>Normalerweise ist es nicht notwendig, diese Einstellung wieder auszuschalten, da sie keinen Einfluss auf andere <a href="../misc/Threads.htm">Threads</a> hat. Wenn ein Thread jedoch sowohl untergeordnete als auch nicht-untergeordnete Dialogfenster anzeigen muss, verwenden Sie <code>Gui -OwnDialogs</code>, um diese Einstellung auszuschalten.</p>
<p>Wenn kein Fensternamepräfix angegeben ist – z.B. wird <code>Gui +OwnDialogs</code> statt <code>Gui MeineGui:+OwnDialogs</code> verwendet – werden die Dialogfenster dem <a href="#DefaultWin">Standardfenster des Threads</a> untergeordnet.</p>
<p id="Owner"><strong>Owner:</strong> Mit <code class="no-highlight">+Owner</code> kann das Fenster einem anderen Fenster untergeordnet werden. Untergeordnete Fenster haben standardmäßig keine eigene Taskleistenschaltfläche und werden, sofern sichtbar, immer über ihrem übergeordneten Fenster angezeigt. Sie werden automatisch zerstört, sobald ihr übergeordnetes Fenster zerstört wird. <code class="no-highlight">+Owner</code> muss <u>nach</u> der Erstellung des übergeordneten Fensters verwendet werden, aber in <span class="ver">[v1.1.05+]</span> kann diese Option vor und nach der Erstellung des untergeordneten Fensters verwendet werden. Es gibt zwei Möglichkeiten, wie <code class="no-highlight">+Owner</code> verwendet werden kann:</p>
<pre>Gui, MeineGui:+OwnerAndereGui  <em>; <i>MeineGui</i> zum Unterfenster von <i>AndereGui</i> machen.</em>
Gui, MeineGui:+Owner  <em>; <i>MeineGui</i> zum Unterfenster des <a href="Menu.htm#MainWindow">Hauptfensters des Skripts</a> machen, um eine Taskleistenschaltfläche zu verhindern.</em></pre>
<p><span class="ver">[v1.1.03+]</span>: Direkt nach <code class="no-highlight">+Owner</code> kann der <a href="#Name">Name</a> oder die Nummer einer bereits existierenden GUI oder die <a href="WinGet.htm#ID">HWND-Nummer (eindeutige ID)</a> eines beliebigen Top-Level-Fensters angegeben werden.</p>
<p class="note"><strong>Hinweis zur Kompatibilität:</strong> In <span class="ver">[v1.1.03+]</span> entfernt <code class="no-highlight">+Owner</code> den WS_CHILD-Style und setzt den WS_POPUP-Style. Um das übergeordnete Fenster einer GUI zu setzen, müssen Skripte entweder die <code class="no-highlight">+Parent</code>-Option verwenden, oder die entsprechenden Styles <em>nach</em> der <code class="no-highlight">+Owner</code>-Option überschreiben.</p>
<p>Mit <code>Gui +Disabled</code> kann die Interaktion mit dem übergeordneten Fenster verboten werden, während eines seiner untergeordneten Fenster angezeigt wird. Später (also wenn der Zeitpunkt gekommen ist, das untergeordnete Fenster via Cancel/Destroy zu schließen) kann die Interaktion mit dem übergeordneten Fenster via <code>Gui -Disabled</code> wieder erlaubt werden. Machen Sie das vor dem Cancel/Destroy, damit das übergeordnete Fenster automatisch reaktiviert wird.</p>
<p id="Parent"><strong>Parent</strong> <span class="ver">[v1.1.03+]</span>: Geben Sie <code class="no-highlight">+Parent</code> und direkt danach den <a href="#Name">Namen</a> oder die Nummer einer bereits existierenden GUI oder die <a href="WinGet.htm#ID">HWND-Nummer (eindeutige ID)</a> eines Fensters oder Steuerelements an, die/das diesem Fenster übergeordnet werden soll. Mit <code class="no-highlight">-Parent</code> kann die GUI wieder in ein Top-Level-Fenster umgewandelt werden. Diese Option kann auch nach der Erstellung des Fensters verwendet werden. Bekannte Einschränkungen:</p>
<ul>
  <li>Wurde das Skript <a href="../Program.htm#Installer_uiAccess">mit UI-Access gestartet</a>, funktioniert die <code class="no-highlight">+Parent</code>-Option nicht mit einem existierenden Fenster, wenn das neue übergeordnete Fenster immer im Vordergrund ist und das untergeordnete Fenster nicht.</li>
  <li>Die <code class="no-highlight">+Parent</code>-Option kann während der GUI-Erstellung fehlschlagen, wenn das übergeordnete Fenster extern ist, aber nach der GUI-Erstellung funktionieren. Dies liegt an den Unterschieden bei der Zuweisung der Styles.</li>
</ul>
<p id="Resize"><strong>Resize:</strong> Ermöglicht das Ändern der Fenstergröße und aktiviert die Titelleistenschaltfläche zum Maximieren des Fensters. Mit <code class="no-highlight">+Resize -MaximizeBox</code> kann die Aktivierung der Schaltfläche zum Maximieren des Fensters verhindert werden.</p>
<p><strong>SysMenu</strong> (standardmäßig vorhanden): Geben Sie <code class="no-highlight">-SysMenu</code> (minus SysMenu) an, um das Systemmenü und Symbol in der oberen linken Ecke des Fensters zu entfernen. Die Titelleistenschaltflächen zum Minimieren, Maximieren und Schließen des Fensters werden ebenfalls entfernt.</p>
<p id="Theme"><strong>Theme:</strong> Geben Sie <code class="no-highlight">-Theme</code> an, um alle danach erstellten Steuerelemente im klassischen Design darzustellen (nur ab Windows XP). Mit <code class="no-highlight">+Theme</code> kann das neue Design wieder eingeschaltet werden.</p>
<p class="note"><strong>Hinweis:</strong> Die Theme-Option funktioniert nicht, wenn das Betriebssystem älter als Windows XP ist oder wenn Windows XP selbst das klassische Design aktiv hat.</p>
<p>Um diese Option nur für ein bestimmtes Steuerelement zu ändern, fügen Sie <code class="no-highlight">+Theme</code> oder <code class="no-highlight">-Theme</code> in dessen Optionen ein, während es erstellt wird.</p>
<p><strong>ToolWindow:</strong> Stattet das Fenster mit einer kleineren Titelleiste aus und versteckt dessen Taskleistenschaltfläche. Diese Option versteckt immer die Schaltflächen zum Maximieren und Minimieren des Fensters, egal ob die Styles <a href="../misc/Styles.htm#WS_MAXIMIZEBOX">WS_MAXIMIZEBOX</a> und <a href="../misc/Styles.htm#WS_MINIMIZEBOX">WS_MINIMIZEBOX</a> vorhanden sind.</p>
<p><strong>(Namenloser Style):</strong> Geben Sie ein Plus- oder Minuszeichen und direkt danach eine dezimale oder hexadezimale Zahl an, um einen <a href="../misc/Styles.htm">Style</a> hinzuzufügen oder zu entfernen.</p>
<p><strong>(Namenloser erweiterter Style):</strong> Geben Sie ein Plus- oder Minuszeichen und direkt danach ein E und eine dezimale oder hexadezimale Zahl an, um einen erweiterten Style hinzuzufügen oder zu entfernen. Zum Beispiel würde <code class="no-highlight">+E0x40000</code> den WS_EX_APPWINDOW-Style hinzufügen, der eine Taskleistenschaltfläche für ein Fenster bereitstellt, das sonst keine hätte. Weitere erweiterte Styles, die nur selten verwendet werden und daher hier nicht aufgeführt sind, finden Sie unter <a href="https://learn.microsoft.com/windows/win32/winmsg/extended-window-styles">Extended Window Styles | Microsoft Docs</a>.</p>

<h2 id="ControlOptions">Optionen und Styles für ein Steuerelement</h2>
<p>Bei der Verwendung von <a href="#Add">Gui Add</a> können beliebig viele Optionen und Styles angegeben werden, die jeweils durch mindestens ein Leer- oder Tabulatorzeichen voneinander getrennt sind. Dieser Abschnitt ist in folgende Unterabschnitte unterteilt:</p>
<ul>
  <li><a href="#PosSize">Position und Größe von Steuerelementen ändern</a></li>
  <li><a href="#Events">Benutzereingaben speichern und verarbeiten</a></li>
  <li><a href="#OtherOptions">Häufig verwendete Optionen und Styles für Steuerelemente</a></li>
  <li><a href="#Controls_Uncommon_Styles_and_Options">Selten verwendete Optionen und Styles für Steuerelemente</a></li>
</ul>
<h3 id="PosSize">Position und Größe von Steuerelementen ändern</h3>
<p class="note"><strong>Hinweis:</strong> Für einfache Layouts sind die folgenden Optionen in der Regel ausreichend. Für komplexere Layouts können jedoch Tools wie der SmartGUI Creator von Rajat hilfreicher sein, da diese die visuelle Gestaltung eines GUI-Fensters nach dem Motto "what you see is what you get" ermöglichen. Der SmartGUI Creator ist kostenlos und kann unter <a href="https://www.autohotkey.com/docs/SmartGUI/">www.autohotkey.com/docs/SmartGUI/</a> heruntergeladen werden.</p>
<p>Wenn Dimensionen und/oder Koordinaten in <em>Optionen</em> weggelassen werden, wird das Steuerelement relativ zum vorherigen Steuerelement positioniert und/oder je nach Inhalt und Typ automatisch dimensioniert.</p>
<p>Folgende Optionen werden unterstützt:</p>
<p id="R"><strong>R</strong><em>n</em>: Textzeilen (wobei <em>n</em> eine beliebige Zahl ist, sogar eine Floating-Point-Zahl wie <code class="no-highlight">r2.5</code>). R ist oft besser als H (Höhe). Wenn R und H gleichzeitig vorhanden sind, wird R bevorzugt. Bei einer GroupBox ist das die Anzahl der Steuerelemente, für die Platz in der Box reserviert werden soll. Bei einer <a href="GuiControls.htm#DropDownList">DropDownList</a>, <a href="GuiControls.htm#ComboBox">ComboBox</a> oder <a href="GuiControls.htm#ListBox">ListBox</a> ist das die Anzahl der Listeneinträge, die der Listenbereich des Steuerelements maximal anzeigen soll (in Windows XP oder höher ist es ratsam, eine DropDownList oder ComboBox ohne R und H zu erstellen, damit die aufklappbare Liste von der verfügbaren Höhe des Desktops profitieren kann). Bei allen anderen Steuerelementen ist R die Anzahl der Textzeilen, die maximal angezeigt werden sollen.</p>
<p><strong>W</strong><em>n</em>: Breite (wobei <em>n</em> eine beliebige Zahl in Pixel ist). Wenn weggelassen, wird die Breite einiger Steuerelemente automatisch anhand ihres Inhalts berechnet; Tabs sind standardmäßig das 30-fache der aktuellen Schriftgröße plus das 3-fache des <a href="#Margin">horizontalen Abstands</a> breit; vertikale ProgressBars standardmäßig das 2-fache der aktuellen Schriftgröße breit; und horizontale ProgressBars, horizontale Sliders, DropDownLists, ComboBoxes, ListBoxes, GroupBoxes, Edits und Hotkeys standardmäßig das 15-fache der aktuellen Schriftgröße breit (außer GroupBoxes, die das 18-fache breit sind, um Platz für Abstände zu schaffen).</p>
<p><strong>H</strong><em>n</em>: Höhe (wobei <em>n</em> eine beliebige Zahl in Pixel ist). Wenn sowohl H als auch R weggelassen werden, sind DropDownLists, ComboBoxes, ListBoxes und leere mehrzeilige Edits standardmäßig 3 Zeilen hoch; GroupBoxes standardmäßig 2 Zeilen hoch; vertikale Sliders und vertikale ProgressBars standardmäßig 5 Zeilen hoch; horizontale Sliders standardmäßig 30 Pixel hoch (außer wenn eine Dicke angegeben wurde); horizontale ProgressBars standardmäßig das 2-fache der aktuellen Schriftgröße hoch; Hotkeys standardmäßig 1 Zeile hoch; und Tabs standardmäßig 10 Zeilen hoch. Alle anderen Steuerelemente erhalten automatisch eine Höhe, die auf ihrem Inhalt basiert. Beachten Sie bei DropDownLists und ComboBoxes, dass H die kombinierte Höhe des immer sichtbaren Teils und des Listenteils ist (bei einem zu niedrigen Wert wird immer mindestens ein Listeneintrag angezeigt). Außerdem ist es bei allen Arten von Steuerelementen in der Regel besser, die Anzahl der Zeilen mit der R- statt H-Option anzugeben, um zu vermeiden, dass ein Steuerelement unvollständige bzw. nur teilweise sichtbare Textzeilen anzeigt.</p>
<p><strong>WP</strong><em>±n</em>, <strong>HP</strong><em>±n</em> (wobei <em>n</em> eine beliebige Zahl in Pixel ist) können verwendet werden, um die Breite und/oder Höhe eines Steuerelements genau auf die Breite oder Höhe des zuvor hinzugefügten Steuerelements zu setzen, die optional um eine beliebige Zahl erhöht oder verringert werden kann. Zum Beispiel würde <code class="no-highlight">wp</code> die Breite eines Steuerelements auf die Breite des vorherigen Steuerelements setzen, und <code class="no-highlight">wp-50</code> auf die Breite des vorherigen Steuerelements, aber um 50 verringert.</p>
<p id="XY"><strong>X</strong><em>n</em>, <strong>Y</strong><em>n</em>: X-Position, Y-Position (wobei <em>n</em> eine beliebige Zahl ist): <code class="no-highlight">x0 y0</code> beispielsweise positioniert das Steuerelement in die obere linke Ecke des Clientbereichs des Fensters (das ist der Bereich ohne Rahmen, Titelleiste und Menüleiste).</p>
<p id="PosPlus"><strong>X+</strong><em>n</em>, <strong>Y+</strong><em>n</em> (wobei <em>n</em> eine beliebige Zahl in Pixel ist): Es ist möglich, ein optionales Pluszeichen einzufügen, um ein Steuerelement relativ zum rechten bzw. unteren Rand des zuvor hinzugefügten Steuerelements zu positionieren. <code class="no-highlight">y+10</code> beispielsweise positioniert das Steuerelement unterhalb des zuvor hinzugefügten Steuerelements, die genau 10 Pixel voneinander entfernt sind. <code class="no-highlight">x+10</code> hingegen positioniert das Steuerelement 10 Pixel entfernt auf die rechte Seite des zuvor hinzugefügten Steuerelements. Da negative Zahlen wie <code class="no-highlight">x-10</code> für die absolute Positionierung reserviert sind, müssen negative Offsets mit einem Pluszeichen beginnen. Zum Beispiel: <code class="no-highlight">x+-10</code>.</p>
<p id="PosPlusMargin"><span class="ver">[v1.1.16+]</span>: Für X+ und Y+ kann der Buchstabe <strong>M</strong> als Ersatz für den aktuellen <a href="#Margin">Abstand (Margin)</a> des Fensters verwendet werden. <code class="no-highlight">x+m</code> beispielsweise verwendet den rechten Rand des zuvor hinzugefügten Steuerelements und fügt den aktuellen Standardabstand hinzu. <code class="no-highlight">xp y+m</code> positioniert ein Steuerelement unterhalb des zuvor hinzugefügten Steuerelements, während eine relative X-Koordinate allein (mit XP oder X+) standardmäßig <code class="no-highlight">yp</code> impliziert.</p>
<p id="xp"><strong>XP</strong><em>±n</em>, <strong>YP</strong><em>±n</em> (wobei <em>n</em> eine beliebige Zahl ist) können verwendet werden, um Steuerelemente relativ zur linken oberen Ecke des zuvor hinzugefügten Steuerelements zu positionieren, was oft nützlich ist, um Steuerelemente mit einer <a href="GuiControls.htm#GroupBox">GroupBox</a> zu umschließen.</p>
<p id="xm"><strong>XM</strong><em>±n</em>, <strong>YM</strong><em>±n</em> (wobei <em>n</em> eine beliebige Zahl in Pixel ist) können verwendet werden, um ein Steuerelement an den ganz linken bzw. obersten <a href="#Margin">Abstand (Margin)</a> des Fensters zu positionieren (nach diesen Optionen kann ein Plus-/Minuszeichen und eine Zahl folgen).</p>
<p id="xs"><strong>XS</strong><em>±n</em> und <strong>YS</strong><em>±n</em> (wobei <em>n</em> eine beliebige Zahl in Pixel ist): Diese haben einen ähnlichen Effekt wie XM und YM, beziehen sich aber auf Koordinaten, die von einem zuvor hinzugefügten Steuerelement stammen, dessen Optionen das Wort <a href="#Section">Section</a> enthält (das erste Steuerelement eines Fensters beginnt immer eine neue Sektion, egal ob dessen Optionen dieses Wort enthält). Zum Beispiel:</p>
<pre>Gui, Add, Edit, w600  <em>; Ein relativ breites Eingabefeld ganz oben im Fenster hinzufügen.</em>
Gui, Add, Text, <strong>Section</strong>, Vorname:  <em>; Position dieses Steuerelements speichern und eine neue Sektion beginnen.</em>
Gui, Add, Text,, Nachname:
Gui, Add, Edit, <strong>ys</strong>  <em>; Eine neue Spalte innerhalb dieser Sektion beginnen.</em>
Gui, Add, Edit
Gui, Show</pre>
<p>Nach XS und YS kann optional ein Plus-/Minuszeichen und eine Zahl folgen. Außerdem ist es möglich, sowohl das Wort <a href="#Section">Section</a> als auch XS/YS in den Optionen eines Steuerelements anzugeben, um zu bewirken, dass das Steuerelement die alte Sektion verwendet, aber eine neue Sektion für nachfolgende Steuerelemente etabliert.</p>
<p>Wenn X und/oder Y weggelassen werden, passt sich ein GUI-Layout automatisch an künftige Änderungen bzgl. der Größe von Steuerelementen oder der Schrift an. Wenn Sie hingegen für jedes Steuerelement eine absolute Position angeben, müssen Sie möglicherweise die Position aller Steuerelemente unterhalb und/oder auf der rechten Seite des Steuerelements, dessen Größe geändert wurde, manuell verschieben.</p>
<p>Wenn sowohl X als auch Y weggelassen werden, wird das Steuerelement unterhalb des zuvor hinzugefügten Steuerelements positioniert, wobei der <a href="#Margin">Standardabstand</a> verwendet wird. Aufeinanderfolgende Text- oder Link-Steuerelemente werden mit zusätzlichen vertikalen Abständen versehen, damit sie besser ausgerichtet sind, wenn danach eine rechts befindliche Spalte mit Steuerelementen wie Edit, DDL usw. hinzugefügt wird. Um nur den vertikalen Standardabstand zu verwenden, geben Sie <code class="no-highlight">y+m</code> oder einen beliebigen Wert für X an.</p>
<p>Wenn nur eine Komponente weggelassen wird, hängt ihr Standardwert davon ab, mit welcher Option die andere Komponente angegeben wurde:</p>
<table class="info">
  <tr><th>X angegeben</th><th>Standard für Y</th></tr>
  <tr><td>X<em>n</em> oder XM</td><td>Unterhalb aller vorherigen Steuerelemente (maximale Y-Ausdehnung plus Margin).</td></tr>
  <tr><td>XS</td><td>Unterhalb aller vorherigen Steuerelemente seit der letzten Verwendung der <a href="#Section">Section</a>-Option.</td></tr>
  <tr><td>X+<em>n</em> oder XP</td><td>Dasselbe wie der obere Rand des vorherigen Steuerelements (<a href="#xp">YP</a>).</td></tr>
  <tr><th>Y angegeben</th><th>Standard für X</th></tr>
  <tr><td>Y<em>n</em> oder YM</td><td>Rechts von allen vorherigen Steuerelementen (maximale X-Ausdehnung plus Margin).</td></tr>
  <tr><td>YS</td><td>Rechts von allen vorherigen Steuerelementen seit der letzten Verwendung der <a href="#Section">Section</a>-Option.</td></tr>
  <tr><td>Y+<em>n</em> oder YP</td><td>Dasselbe wie der linke Rand des vorherigen Steuerelements (<a href="#xp">XP</a>).</td></tr>
</table>

<h3 id="Events">Benutzereingaben speichern und verarbeiten</h3>
<p id="var"><strong>V:</strong> Variable. Verknüpft eine Variable mit einem Steuerelement. Geben Sie direkt nach dem Buchstaben V den Namen einer globalen Variable an (oder einer <a href="../Functions.htm#ByRef">lokalen ByRef-Variable</a>, die auf eine globale Variable verweist, oder in <span class="ver">[v1.0.46.01+]</span> einer <a href="../Functions.htm#static">statischen Variable</a>). Zum Beispiel bewirkt <code class="no-highlight"><strong>v</strong>MeinEdit</code>, dass der Inhalt des Steuerelements jedes Mal in die Variable <em>MeinEdit</em> gespeichert wird, wenn <a href="#Submit">Gui Submit</a> verwendet wird. Wenn ein Steuerelement nicht eingabefähig ist (z.B. ein Text- oder GroupBox-Steuerelement), kann die Zuordnung einer Variable dennoch hilfreich sein, da der Variablenname als eindeutiger Identifikator für das Steuerelement dient und somit im Zusammenhang mit dem <em>SteuerelementID</em>-Parameter von <a href="GuiControl.htm">GuiControl</a> und <a href="GuiControlGet.htm">GuiControlGet</a> sowie mit <a href="../Variables.htm#GuiControl">A_GuiControl</a> verwendet werden kann.</p>
  <p class="note"><strong>Hinweis:</strong> <a href="#Submit">Gui Submit</a> ändert weder die zugeordneten Variablen von nicht-eingabefähigen Steuerelementen (z.B. Text und GroupBox) noch die von Steuerelementen, wo entsprechend dokumentiert (z.B. <a href="ListView.htm">ListView</a> und <a href="TreeView.htm">TreeView</a>).</p>
<p id="label"><strong>G:</strong> Gosub (g-Label). Startet automatisch eine Subroutine oder Funktion, wenn der Benutzer ein Steuerelement anklickt oder ändert. Geben Sie direkt nach dem Buchstaben G den Namen eines <a href="../misc/Labels.htm">Labels</a> an, das ausgeführt werden soll. <code class="no-highlight">gCancel</code> kann verwendet werden, um ein indirektes <a href="#Cancel">Gui Cancel</a> auszulösen (wenn aber bereits ein Label namens "Cancel" im Skript existiert, wird dieses stattdessen ausgeführt). Die Subroutine kann die folgenden internen Variablen verwenden: <a href="../Variables.htm#Gui">A_Gui</a>, <a href="../Variables.htm#GuiControl">A_GuiControl</a>, <a href="../Variables.htm#GuiEvent">A_GuiEvent</a>, <a href="../Variables.htm#EventInfo">A_EventInfo</a> und <a href="../Variables.htm#ThisLabel">A_ThisLabel</a>.</p>
<p><span class="ver">[v1.1.20+]</span>: Es kann auch der Name einer Funktion angegeben werden, sofern dieser Name nicht als Label existiert. Alternativ kann der <a href="GuiControl.htm#Functor">GuiControl</a>-Befehl verwendet werden, um ein <a href="../misc/Functor.htm">Funktionsobjekt</a> mit einem Steuerelement zu verknüpfen. Die Funktion kann optional die folgenden Parameter akzeptieren (wobei <code class="no-highlight">gElementEreignis</code> die Funktion gesetzt hat):</p>
<pre class="Syntax"><span class="func">ElementEreignis</span>(ElementHwnd, GuiEreignis, EreignisInfo, ErrLevel:="")</pre>
<p>Die Bedeutung der Parameter hängt vom Typ des Steuerelements ab. Hinweis: Wenn der vierte Parameter ohne Standardwert deklariert wird, kann die Funktion nur von Ereignissen aufgerufen werden, die vier Parameter bereitstellen.</p>

<h3 id="OtherOptions">Häufig verwendete Optionen und Styles für Steuerelemente</h3>
<p class="note"><strong>Hinweis:</strong> Vorzeichenlose Optionen werden standardmäßig hinzugefügt. Zum Beispiel ist <code class="no-highlight">Wrap</code> dasselbe wie <code class="no-highlight">+Wrap</code>. Mit <code class="no-highlight">-Wrap</code> kann es hingegen wieder entfernt werden.</p>
<p id="AltSubmit"><strong>AltSubmit:</strong> Verwendet eine alternative Submit-Methode. Bei einer DropDownList, ComboBox oder ListBox bewirkt diese Option, dass <a href="#Submit">Gui Submit</a> nicht den Text, sondern die Position des ausgewählten Listeneintrags speichert. Wenn kein Listeneintrag ausgewählt ist, wird bei einer ComboBox weiterhin der Text des Eingabefeldes gespeichert, während bei einer DropDownList oder ListBox weiterhin die <a href="#var">zugeordnete Ausgabevariable</a> leer gemacht wird. Hinweis: AltSubmit beeinflusst auch das Verhalten von <a href="GuiControlGet.htm">GuiControlGet</a> beim Abrufen des Inhalts eines solchen Steuerelements.</p>
<p><strong>C:</strong> Textfarbe (funktioniert nicht bei <a href="GuiControls.htm#Button">Schaltflächen</a> und <a href="GuiControls.htm#StatusBar">Statusleisten</a>). Geben Sie den Buchstaben C an, unmittelbar gefolgt von einem Farbnamen (siehe <a href="Progress.htm#colors">Farbentabelle</a>) oder RGB-Wert (mit oder ohne 0x-Präfix). Beispiele: <code class="no-highlight">cRed</code>, <code class="no-highlight">cFF2211</code>, <code class="no-highlight">c0xFF2211</code>, <code class="no-highlight">cDefault</code>.</p>
<p><strong>Choose:</strong> Wählt vorab ein einzelnes Element in einem <a href="GuiControls.htm#ComboBox">ComboBox</a>-, <a href="GuiControls.htm#DateTime">DateTime</a>-, <a href="GuiControls.htm#DropDownList">DropDownList</a>-, <a href="GuiControls.htm#ListBox">ListBox</a>- oder <a href="GuiControls.htm#Tab">Tab</a>-Steuerelement aus. Geben Sie das Wort <code class="no-highlight">Choose</code> an, unmittelbar gefolgt von der Nummer eines Elements. Zum Beispiel: <code class="no-highlight">Choose2</code></p>
<p><strong>Disabled:</strong> Stellt das Steuerelement in einem deaktivierten Zustand dar und bewirkt, dass es weder fokussiert noch geändert werden kann. Um die Interaktion mit diesem Steuerelement später wieder zu erlauben, verwenden Sie <a href="GuiControl.htm#EnableDisable">GuiControl Enable</a>. Hinweis: Um ein Edit-Steuerelement stattdessen in den schreibgeschützten Zustand zu versetzen, fügen Sie <code class="no-highlight">ReadOnly</code> in dessen Optionen ein. Direkt nach dem Wort Disabled kann optional eine 0 oder 1 angegeben werden, um den Startzustand zu bestimmen (0 für aktiviert, 1 für deaktiviert). Mit anderen Worten, <code class="no-highlight">Disabled</code> ist dasselbe wie <code class="no-highlight">Disabled%VarMitEins%</code>.</p>
<p><strong>Hidden:</strong> Versteckt zunächst das Steuerelement. Mit <a href="GuiControl.htm#Show">GuiControl Show</a> kann es später wieder sichtbar gemacht werden. Direkt nach dem Wort Hidden kann optional eine 0 oder 1 angegeben werden, um den Startzustand zu bestimmen (0 für sichtbar, 1 für versteckt). Mit anderen Worten, <code class="no-highlight">Hidden</code> ist dasselbe wie <code class="no-highlight">Hidden%VarMitEins%</code>.</p>
<p><strong>Left:</strong> Macht den Text linksbündig innerhalb der verfügbaren Breite des Steuerelements. Diese Option beeinflusst die folgenden Steuerelemente: Text, Edit, Button, CheckBox, Radio, UpDown, Slider, Tab, Tab2, GroupBox, DateTime.</p>
<p><strong>Right:</strong> Macht den Text rechtsbündig innerhalb der verfügbaren Breite des Steuerelements. Bei CheckBox- und Radio-Steuerelementen bewirkt diese Option außerdem, dass das Auswahlfeld auf der rechten statt linken Seite des Steuerelements positioniert wird. Diese Option beeinflusst die folgenden Steuerelemente: Text, Edit, Button, CheckBox, Radio, UpDown, Slider, Tab, Tab2, GroupBox, DateTime, Link.</p>
<p><strong>Center:</strong> Zentriert den Text des Steuerelements horizontal. Diese Option beeinflusst die folgenden Steuerelemente: Text, Edit, Button, CheckBox, Radio, Slider, GroupBox.</p>
<p id="Section"><strong>Section:</strong> Beginnt eine neue Sektion und speichert die Positionsdaten des Steuerelements, um sie später mit den <a href="#xs">oben</a> beschriebenen Positionierungsoptionen XS und YS zu verwenden.</p>
<p id="Tabstop"><strong>Tabstop:</strong> Geben Sie <code class="no-highlight">-Tabstop</code> (minus Tabstop) für ein eingabefähiges Steuerelement an, das übersprungen werden soll, wenn der Benutzer <kbd>Tab</kbd> zum Navigieren drückt.</p>
<p id="Wrap"><strong>Wrap:</strong> Aktiviert den automatischen Zeilenumbruch im Text des Steuerelements. Da der automatische Zeilenumbruch standardmäßig bei fast allen Arten von Steuerelementen aktiv ist, wird in der Regel <code class="no-highlight">-Wrap</code> verwendet, um diese Option zu deaktivieren.</p>
<p><strong>VScroll:</strong> Stattet das Steuerelement mit einem vertikalen Scrollbalken aus, sofern möglich.</p>
<p><strong>HScroll:</strong> Stattet das Steuerelement mit einem horizontalen Scrollbalken aus, sofern möglich. Der Rest dieses Absatzes gilt nur für die <a href="GuiControls.htm#ListBox">ListBox</a>. Die horizontale Scrollbreite ist standardmäßig die 3-fache Breite der Listbox. Um eine andere Scrollbreite zu bestimmen, geben Sie direkt nach dem Wort HScroll eine Zahl an. Zum Beispiel ermöglicht <code class="no-highlight">HScroll500</code> einen scrollbaren Bereich von 500 Pixeln innerhalb der ListBox. Wenn die angegebene Scrollbreite allerdings kleiner als die Breite der ListBox ist, wird kein Scrollbalken angezeigt (obwohl das bloße Vorhandensein von <code class="no-highlight">HScroll</code> es überhaupt erst möglich macht, den horizontalen Scrollbalken später via <code><a href="GuiControl.htm">GuiControl</a>, +HScroll500, MeinScrollbalken</code> hinzuzufügen).</p>

<h3 id="Controls_Uncommon_Styles_and_Options">Selten verwendete Optionen und Styles für Steuerelemente</h3>
<p id="BackgroundTrans"><strong>BackgroundTrans:</strong> Verwendet einen transparenten Hintergrund, der jedes Steuerelement, das sich hinter einem Text-, Picture- oder GroupBox-Steuerelement befindet, durchscheinen lässt. Zum Beispiel würde ein transparentes Text-Steuerelement, das über einem Picture-Steuerelement angezeigt wird, die Illusion erzeugen, als gehöre der Text zum Bild. Mit <code><a href="GuiControl.htm">GuiControl</a>, +Background</code> kann diese Option später wieder entfernt werden. Weitere Informationen zu transparenten Bildern finden Sie im <a href="GuiControls.htm#PicAltSubmit">AltSubmit-Abschnitt des Picture-Steuerelements</a>. Bekannte Einschränkung: Es ist möglich, dass BackgroundTrans nicht ordnungsgemäß mit Steuerelementen innerhalb eines <a href="GuiControls.htm#Tab">Tab</a>-Steuerelements funktioniert, das eine <a href="ListView.htm">ListView</a> enthält.</p>
<p><strong>Background:</strong> Geben Sie <code class="no-highlight">-Background</code> (minus Background) an, um ein Steuerelement dessen Standardhintergrundfarbe und nicht die via <a href="#Color">Gui Color</a> definierte Hintergrundfarbe verwenden zu lassen. Diese Option wird häufig verwendet, um ein Tab-Steuerelement mit dessen Standardfarbe statt Fensterfarbe zu versehen. Mit <code><a href="GuiControl.htm">GuiControl</a>, +Background</code> kann diese Option später wieder entfernt werden.</p>
<p><strong>Border:</strong> Umrahmt das Steuerelement mit einer dünnen Linie. Die meisten Steuerelemente haben bereits einen typspezifischen Rahmen und benötigen daher diese Option nicht. Wird ein <em>bereits existierendes</em> Steuerelement mit einem Rahmen versehen, kann es notwendig sein, die Breite und Höhe des Steuerelements um 1 Pixel zu vergrößern, um eine korrekte Darstellung zu gewährleisten.</p>
<p id="HwndOutputVar"><strong>Hwnd</strong><em>AusgabeVar</em> <span class="ver">[v1.0.46.01+]</span>: Speichert das Fensterhandle (HWND) des neuen Steuerelements in <em>AusgabeVar</em>, wenn diese Option mit <a href="#Add">Gui Add</a> verwendet wird. Zum Beispiel: <code>Gui, Add, Edit, vMeinEdit HwndMeinEditHwnd</code>. Wird diese Option innerhalb einer Funktion verwendet, wird <em>AusgabeVar</em> als <a href="../Functions.htm#DynVar">dynamische Variable</a> behandelt. Die HWND-Nummer (eindeutige ID) eines Steuerelements wird oft in Verbindung mit <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall()</a> verwendet. Außerdem kann diese Nummer direkt als <a href="../misc/WinTitle.htm#ahk_id">ahk_id-Fenstertitel</a> (das auch mit versteckten Steuerelementen funktioniert, selbst wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> ausgeschaltet ist) oder in <span class="ver">[v1.1.04+]</span> bei GuiControl und GuiControlGet als <em>SteuerelementID</em>-Parameter verwendet werden. Die HWND-Nummer eines nicht-untergeordneten Fensters kann via <a href="#GuiHwndOutputVar">Gui MeineGui:+HwndAusgabeVar</a> abgerufen werden.</p>
<p><strong>Theme:</strong> Mit dieser Option kann die aktuelle Design-Einstellung des Fensters für das neue Steuerelement überschrieben werden. Bei bereits existierenden Steuerelementen hat diese Option keinen Effekt; allerdings kann sich das in einer zukünftigen Version noch ändern. Weitere Informationen finden Sie unter <a href="#Theme">Gui +/-Theme</a>.</p>
<p><strong>(Namenloser Style):</strong> Geben Sie ein Plus- oder Minuszeichen und direkt danach eine dezimale oder hexadezimale Zahl an, um einen <a href="../misc/Styles.htm">Style</a> hinzuzufügen oder zu entfernen. Wenn das Vorzeichen weggelassen wird, wird der Style standardmäßig hinzugefügt.</p>
<p><strong>(Namenloser erweiterter Style):</strong> Geben Sie ein Plus- oder Minuszeichen und direkt danach ein E und eine dezimale oder hexadezimale Zahl an, um einen erweiterten Style hinzuzufügen oder zu entfernen. Wenn das Vorzeichen weggelassen wird, wird der Style standardmäßig hinzugefügt. Zum Beispiel würde <code class="no-highlight">E0x200</code> den WS_EX_CLIENTEDGE-Style hinzufügen, der Steuerelemente wie z.B. Picture mit einem abgesenkten Rahmen ausstattet. Weitere erweiterte Styles, die nur selten verwendet werden und daher hier nicht aufgeführt sind, finden Sie unter <a href="https://www.microsoft.com">www.microsoft.com</a> mit Suchbegriffen wie WS_EX_CLIENTEDGE.</p>

<h2 id="Labels">Fensterereignisse</h2>
<p>Die folgenden Labels (Subroutinen) werden automatisch einem GUI-Fenster zugeordnet, wenn sie im Skript verwendet werden:</p>
<ul>
  <li><a href="#GuiClose">GuiClose</a></li>
  <li><a href="#GuiEscape">GuiEscape</a></li>
  <li><a href="#GuiSize">GuiSize</a></li>
  <li><a href="#GuiContextMenu">GuiContextMenu</a></li>
  <li><a href="#GuiDropFiles">GuiDropFiles</a></li>
</ul>
<p><span class="ver">[v1.1.20+]</span>: Wenn ein Label für ein bestimmtes Ereignis nicht existiert, kann stattdessen eine Funktion über diesen Namen aufgerufen werden. Die Funktion kann optional die <a href="#GuiHwndOutputVar">HWND-Nummer (eindeutige ID)</a> der GUI als ersten Parameter akzeptieren. Einige Ereignisse stellen noch mehr Parameter bereit.</p>
<p>Um auf die Ereignisse eines anderen Fensters <a href="#MultiWin">anstelle des Fensters mit der Nummer 1</a> zuzugreifen, muss der Name oder die Nummer des Fensters (falls vorhanden) als Präfix für die oben genannten speziellen Labels verwendet werden; z.B. sind 2GuiEscape und 2GuiClose die Standardlabels für das Fenster Nummer 2, und <em>MeineGui</em>GuiEscape und <em>MeineGui</em>GuiClose die Standardlabels für das Fenster <em>MeineGui</em>. Mit <a href="#PlusLabel">Gui +Label</a> kann ein benutzerdefiniertes Präfix definiert werden.</p>

<h3 id="GuiClose">GuiClose</h3>
<p>Wird gestartet, wenn das Fenster mit einer der folgenden Methoden geschlossen wird: Drücken der X-Schaltfläche in der Titelleiste, Auswählen des Systemmenüpunkts "Schließen" oder Schließen via <a href="WinClose.htm">WinClose</a>. Wenn dieses Label fehlt, wird das Fenster beim Schließen nur versteckt, was den gleichen Effekt hat wie <a href="#Cancel">Gui Cancel</a>. Die am häufigsten verwendete Aktion für GuiClose ist <a href="ExitApp.htm">ExitApp</a>. Zum Beispiel:</p>
<pre>GuiClose:
ExitApp</pre>
<p><span class="ver">[v1.1.20+]</span>: Wenn GuiClose eine Funktion ist, wird die GUI standardmäßig versteckt. Um das zu verhindern, muss die Funktion via Return einen Integer ungleich 0 zurückgeben. Zum Beispiel:</p>
<pre>GuiClose(GuiHwnd) {  <em>; Dieser Parameter muss nicht deklariert werden.</em>
    MsgBox 4,, Wollen Sie die GUI wirklich verstecken?
    IfMsgBox No
        return true  <em>; true = 1</em>
}</pre>

<h3 id="GuiEscape">GuiEscape</h3>
<p>Wird gestartet, wenn der Benutzer <kbd>Esc</kbd> drückt, während das GUI-Fenster aktiv ist. Wenn dieses Label fehlt, hat das Drücken von <kbd>Esc</kbd> keinen Effekt. Bekannte Einschränkung: Wenn die Interaktion mit dem ersten Steuerelement im Fenster verboten ist (möglicherweise abhängig vom Typ des Steuerelements), wird das GuiEscape-Label nicht gestartet. Es gibt eventuell noch andere Faktoren, die diesen Effekt hervorrufen.</p>

<h3 id="GuiSize">GuiSize</h3>
<p>Wird gestartet, wenn das Fenster kleiner/größer gemacht, minimiert, maximiert oder wiederhergestellt wird. Die internen Variablen <a href="../Variables.htm#GuiWidth">A_GuiWidth</a> und <a href="../Variables.htm#GuiWidth">A_GuiHeight</a> enthalten die neue Breite und Höhe des Clientbereichs des Fensters (das ist der Bereich ohne Rahmen, Titelleiste und Menüleiste). Zusätzlich enthält sowohl <a href="../Variables.htm#EventInfo">A_EventInfo</a> als auch <a href="../misc/ErrorLevel.htm">ErrorLevel</a> eine der folgenden Zahlen:</p>
<ul>
  <li>0 = Das Fenster wurde wiederhergestellt oder normal größer/kleiner gemacht, z.B. durch Ziehen des Rahmens.</li>
  <li>1 = Das Fenster wurde minimiert.</li>
  <li>2 = Das Fenster wurde maximiert.</li>
</ul>
<p>Ein Skript kann GuiSize verwenden, um Steuerelemente neu zu positionieren und größer/kleiner zu machen, wenn der Benutzer die Größe des Fensters ändert. Um diesen Vorgang zu vereinfachen, können Sie <a href="https://www.autohotkey.com/boards/viewtopic.php?f=6&t=1079">AutoXYWH() von tmplinshi und toralf</a> verwenden.</p>
<p>Beim Ändern der Fenstergröße (auch via Skript) kann es vorkommen, dass GuiSize nicht sofort aufgerufen wird. Wie jedes Fensterereignis wird GuiSize erst aufgerufen, wenn der aktuelle Thread <a href="Thread.htm#Interrupt">unterbrechbar</a> wird. Gehen Sie wie folgt vor, um sicherzustellen, dass GuiSize beim Ändern der Fenstergröße sofort aufgerufen wird:</p>
<pre><a href="Critical.htm#Off">Critical</a> Off  <em>; Selbst wenn Critical On nie verwendet wurde.</em>
<a href="Sleep.htm">Sleep</a> -1</pre>
<p><span class="ver">[v1.1.22.05+]</span>: <a href="#Show">Gui Show</a> macht automatisch ein <code>Sleep -1</code>, demzufolge muss in diesem Fall kein Sleep aufgerufen werden.</p>
<p><span class="ver">[v1.1.20+]</span>: Wenn GuiSize eine Funktion ist, akzeptiert sie folgende Parameter:</p>
<pre class="Syntax"><span class="func">GuiSize</span>(GuiHwnd, EreignisInfo, Breite, Höhe)</pre>

<h3 id="GuiContextMenu">GuiContextMenu</h3>
<p>Wird gestartet, wenn der Benutzer mit der rechten Maustaste irgendwo im Fenster klickt (außer Titelleiste und Menüleiste). Das Ereignis wird auch gestartet, wenn der Benutzer <kbd>Menü</kbd> oder <kbd>Umschalt</kbd>+<kbd>F10</kbd> drückt. Im Gegensatz zu den meisten anderen GUI-Labels können mehrere GuiContextMenu-<a href="../misc/Threads.htm">Threads</a> zur selben Zeit aktiv sein. GuiContextMenu kann die folgenden internen Variablen verwenden:</p>
<ol>
  <li><a href="../Variables.htm#GuiControl">A_GuiControl</a> enthält den <a href="../Variables.htm#GuiControl">Text oder Variablennamen</a> des Steuerelements, auf das sich das Ereignis bezieht (leer, wenn nicht).</li>
  <li><a href="../Variables.htm#EventInfo">A_EventInfo</a>: Bei einer ListBox, ListView oder TreeView gibt A_EventInfo an, auf welchem Listeneintrag, welcher Zeile oder welchem Element der Versuch unternommen wurde, das Kontextmenü zu öffnen:
    <ul>
      <li><a href="GuiControls.htm#ListBox">ListBox</a> oder <a href="ListView.htm">ListView</a>: A_EventInfo wird auf die Nummer der aktuell fokussierten Zeile gesetzt (andernfalls 0).</li>
      <li><a href="TreeView.htm">TreeView</a>: Bei Rechtsklick wird A_EventInfo auf die ID-Nummer des angeklickten Elements gesetzt (oder 0, wenn der Benutzer etwas anderes als ein Element anklickt). Bei <kbd>Menü</kbd> oder <kbd>Umschalt</kbd>+<kbd>F10</kbd> wird A_EventInfo auf die ID-Nummer des ausgewählten Elements gesetzt.</li>
    </ul></li>
  <li>A_GuiX und A_GuiY enthalten die X- bzw. Y-Koordinate der Position, auf der das Kontextmenü angezeigt werden soll (z.B. <code><a href="Menu.htm">Menu</a>, MeinKontext, Show, %A_GuiX%, %A_GuiY%</code>). Die Koordinaten sind relativ zur linken oberen Ecke des Fensters.</li>
  <li>A_GuiEvent enthält das Wort RightClick, wenn der Benutzer einen Rechtsklick gemacht hat, oder das Wort Normal, wenn das Kontextmenü via <kbd>Menü</kbd> oder <kbd>Umschalt</kbd>+<kbd>F10</kbd> aufgerufen wurde.</li>
</ol>
<p class="note"><strong>Hinweis:</strong> Da <a href="GuiControls.htm#Edit">Edit</a> und <a href="GuiControls.htm#MonthCal">MonthCal</a> über ein eigenes Kontextmenü verfügen, kann in solchen Steuerelementen kein GuiContextMenu-Ereignis via Rechtsklick gestartet werden.</p>
<p><span class="ver">[v1.1.20+]</span>: Wenn GuiContextMenu eine Funktion ist, akzeptiert sie folgende Parameter:</p>
<pre class="Syntax"><span class="func">GuiContextMenu</span>(GuiHwnd, ElementHwnd, EreignisInfo, IstRechtsklick, X, Y)</pre>
<p><em>ElementHwnd</em> ist leer, wenn das Ereignis nicht von einem Steuerelement stammt. <em>IstRechtsklick</em> ist 1 (true), wenn A_GuiEvent das Wort RightClick enthält.</p>

<h3 id="GuiDropFiles">GuiDropFiles</h3>
<p>Wird gestartet, wenn Dateien/Ordner während eines Ziehen-und-Ablegen-Vorgangs auf das Fenster abgelegt werden (wenn das Label aber bereits läuft, werden Ablege-Ereignisse ignoriert). GuiDropFiles kann die folgenden internen Variablen verwenden:</p>
<ol>
  <li><a href="../Variables.htm#GuiControl">A_GuiControl</a> enthält den <a href="../Variables.htm#GuiControl">Text oder Variablennamen</a> des Steuerelements, auf dem die Dateien abgelegt wurden (leer, wenn nicht).</li>
  <li><a href="../Variables.htm#EventInfo">A_EventInfo</a> und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> enthalten die Anzahl der abgelegten Dateien.</li>
  <li>A_GuiX und A_GuiY enthalten die X- bzw. Y-Koordinate der Position, auf der die Dateien abgelegt wurden (relativ zur oberen linken Ecke des Fensters).</li>
  <li>A_GuiEvent enthält die vollständigen Pfadnamen aller abgelegten Dateien, die alle außer dem letzten mit einem Zeilenvorschub (`n) enden.</li>
</ol>
<p>Mit einer <a href="LoopParse.htm">parsenden Schleife</a> können einzelne Dateien wie folgt extrahiert werden:</p>
<pre><em>; BEISPIEL #1:</em>
Loop, Parse, A_GuiEvent, `n
{
    MsgBox, 4,, Datei Nr. %A_Index% ist:`n%A_LoopField%.`n`nWeiter?
    IfMsgBox, No, break
}

<em>; BEISPIEL #2: Um nur die erste Datei zu extrahieren, gehen Sie wie folgt vor:</em>
Loop, Parse, A_GuiEvent, `n
{
    ErsteDatei := A_LoopField
    break
}

<em>; BEISPIEL #3: Um die Dateien alphabetisch zu durchlaufen, gehen Sie wie folgt vor:</em>
DateiListe := A_GuiEvent
Sort, DateiListe
Loop, Parse, DateiListe, `n
    MsgBox Datei Nr. %A_Index% ist:`n%A_LoopField%.</pre>
<p>Um das Ziehen-und-Ablegen-Feature bei einem Fenster vorübergehend zu deaktivieren, entfernen Sie den WS_EX_ACCEPTFILES-Style via <code>Gui -E0x10</code>. Mit <code>Gui +E0x10</code> kann es später wieder aktiviert werden.</p>
<p><span class="ver">[v1.1.20+]</span>: Wenn GuiDropFiles eine Funktion ist, akzeptiert sie die im nächsten Beispiel gezeigten Parameter. <em>ElementHwnd</em> ist leer, wenn Dateien auf die GUI selbst abgelegt wurden. <em>DateiArray</em> ist ein <a href="../Objects.htm#Usage_Simple_Arrays">Array (Objekt)</a> mit Dateinamen, mit dem z.B. via <code>DateiArray[1]</code> die erste Datei abgerufen oder via <code>DateiArray.MaxIndex()</code> die Anzahl der Dateien zurückgegeben werden kann. Mit einer <a href="For.htm">For-Schleife</a> können die Dateien einzeln durchgegangen werden:</p>
<pre>GuiDropFiles(GuiHwnd, DateiArray, ElementHwnd, X, Y) {
    for i, Datei in DateiArray
        MsgBox Datei %i% ist:`n%Datei%
}
</pre>

<h3 id="OtherEvents">Andere Ereignisse</h3>
<p>Andere Arten von GUI-Ereignissen können via <a href="OnMessage.htm">OnMessage()</a> erkannt und verarbeitet werden. Zum Beispiel kann ein Skript jedes Mal eine kontextabhängige Hilfe via Tooltip anzeigen, wenn der Benutzer den Mauszeiger über bestimmte Steuerelemente im Fenster bewegt. Siehe dazu das <a href="#ExToolTip">GUI-Tooltip-Beispiel</a>.</p>

<h2 id="MultiWin">Mehrere GUI-Fenster erstellen</h2>
<p>Um mit einem anderen Fenster als dem <a href="#DefaultWin">Standardfenster</a> zu arbeiten, fügen Sie dessen Namen oder Nummer (oder in <span class="ver">[v1.1.03+]</span> dessen <a href="#GuiHwndOutputVar">HWND</a>), gefolgt von einem Doppelpunkt, vor dem Unterbefehl ein. Zum Beispiel:</p>
<pre>Gui, <strong>MeineGui:</strong>Add, Text,, Text für das Über-Fenster.
Gui, <strong>MeineGui:</strong>Show</pre>
<p><code><a href="#Default">Gui MeineGui:Default</a></code> kann verwendet werden, um das obige Präfix "MeineGui:" zu vermeiden. Außerdem kann das Präfix in einem <a href="#DefaultWin">GUI-Thread</a> weggelassen werden, das mit demselben Fenster arbeitet, das diesen Thread gestartet hat.</p>
<p id="Name"><span class="ver">[v1.1.03+]</span>: GUI-Namen müssen den <a href="../Concepts.htm#names">Richtlinien zum Erstellen von Variablennamen</a> entsprechen. Jede Nummer größer als 99 oder länger als zwei Zeichen (z.B. 0x01) wird automatisch als HWND-Nummer (eindeutige ID) einer GUI behandelt. Wenn diese GUI nicht existiert, wird der Befehl fehlschlagen. Die Anzahl der Fenster, die erstellt werden können, wird nur durch die verfügbaren Systemressourcen begrenzt.</p>
<p><span class="ver">[v1.1.04+]</span>: Mit <a href="#New">Gui, New</a> können beliebig viele namenlose GUI-Fenster erstellt werden.</p>

<h2 id="DefaultWin">GUI-Ereignisse, -Threads und -Subroutinen</h2>
<p>Ein GUI-<a href="../misc/Threads.htm">Thread</a> ist ein Thread, der durch eine GUI-Aktion gestartet wurde. Eine GUI-Aktion ist z.B. das Auswählen eines <a href="#Menu">Menüpunkts</a> oder das Auslösen eines <a href="#label">g-Labels</a> (z.B. durch Drücken einer Schaltfläche).</p>
<p>Der <a href="#MultiWin">Standardfenstername</a> eines GUI-Threads ist der Name des Fensters, das diesen Thread gestartet hat. Nicht-GUI-Threads verwenden standardmäßig 1.</p>
<p>Jedes Mal, wenn ein GUI-<a href="../misc/Threads.htm">Thread</a> gestartet wird, ist das <a href="../misc/WinTitle.htm#LastFoundWindow">zuletzt gefundene Fenster</a> dieses Threads zunächst das GUI-Fenster selbst. Dies ermöglicht Ihnen, <em>FensterTitel</em> und <em>FensterText</em> bei Fenster- und Steuerelementbefehlen wie <a href="WinMove.htm">WinMove</a>, <a href="WinHide.htm">WinHide</a>, <a href="WinSet.htm">WinSet</a>, <a href="WinSetTitle.htm">WinSetTitle</a> und <a href="ControlGetFocus.htm">ControlGetFocus</a> wegzulassen, um mit dem GUI-Fenster selbst zu arbeiten (sogar wenn es versteckt ist).</p>
<p>Klickt man auf ein Steuerelement, das gerade ein <a href="#label">g-Label</a> aufgrund eines vorherigen Klicks ausführt, wird das Ereignis verworfen. Um das zu verhindern, geben Sie <a href="Critical.htm">Critical</a> in der ersten Zeile der Subroutine an (allerdings werden dadurch auch andere <a href="../misc/Threads.htm">Threads</a>, wie z.B. das Drücken eines Hotkeys, gepuffert/verzögert).</p>
<p>Die internen Variablen A_Gui und A_GuiControl enthalten den Fensternamen und die ID des Steuerelements, das den aktuellen Thread gestartet hat. Weitere Informationen finden Sie unter <a href="../Variables.htm#Gui">A_Gui</a> und <a href="../Variables.htm#GuiControl">A_GuiControl</a>.</p>
<p>Um mehrere Ereignisse die gleiche Subroutine ausführen zu lassen, stapeln Sie einfach die entsprechenden Labelnamen übereinander. Zum Beispiel:</p>
<pre>GuiEscape:
GuiClose:
ButtonCancel:
ExitApp  <em>; Alle Labels oben werden diesen Befehl ausführen.</em></pre>
<p>Alle GUI-<a href="../misc/Threads.htm">Threads</a> verwenden vorerst die Standardwerte von Einstellungen wie <a href="SendMode.htm">SendMode</a>. Diese Standardwerte können im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> geändert werden.</p>

<h2 id="Navigate">Navigation mit der Tastatur</h2>
<p>Mit <kbd>Tab</kbd> kann der Tastaturfokus jeweils auf das nächste eingabefähige Steuerelement in einem GUI-Fenster gesetzt werden (Steuerelemente mit deaktiviertem <a href="#Tabstop">Tabstop</a>-Style werden übersprungen). Die Reihenfolge der Navigation richtet sich nach der Reihenfolge, in der die Steuerelemente ursprünglich hinzugefügt wurden. Wenn das Fenster zum ersten Mal angezeigt wird, bekommt das erste eingabefähige Steuerelement mit aktiviertem Tabstop-Style (den die meisten standardmäßig haben) den Tastaturfokus.</p>
<p id="ShortcutKey">Bestimmte Steuerelemente können ein Und-Zeichen (&amp;) enthalten, um einen Tastaturkurzbefehl zu erstellen, der im Text des Steuerelements je nach Systemeinstellung als unterstrichenes Zeichen dargestellt wird. Um einen solchen Tastaturkurzbefehl auszulösen, muss der Benutzer <kbd>Alt</kbd> gedrückt halten und dann das entsprechende Zeichen auf der Tastatur drücken. Drückt man den Tastaturkurzbefehl bei Button-, CheckBox- oder Radio-Steuerelementen, ist der Effekt das gleiche wie, als würde man das Steuerelement anklicken. Drückt man den Tastaturkurzbefehl bei GroupBox- oder Text-Steuerelementen, springt der Tastaturfokus auf das erste danach erstellte eingabefähige Steuerelement mit aktivem <a href="#Tabstop">Tabstop</a>-Style. Wenn mehrere Steuerelemente den gleichen Tastaturkurzbefehl verwenden und drückt man diesen, springt der Tastaturfokus zwischen diesen Steuerelementen abwechselnd hin und her.</p>
<p>Um ein direkt geschriebenes Und-Zeichen in einem der oben genannten Steuerelementen anzuzeigen, geben Sie wie folgt zwei aufeinanderfolgende Und-Zeichen an: <code>Gui, Add, Button,, Speichern &amp;&amp; Beenden</code>.</p>

<h2 id="Appear">Fensterdarstellung</h2>
<p>Ein GUI-Fenster verwendet als Symbol das <a href="../Program.htm#tray-icon">Tray-Symbol</a>, welches zum Zeitpunkt der Erstellung des Fensters wirksam war. Daher muss, wenn ein anderes Symbol angezeigt werden soll, das Tray-Symbol vor der Erstellung des Fensters geändert werden. Zum Beispiel: <code><a href="Menu.htm">Menu</a>, Tray, Icon, MeinSymbol.ico</code>. Es ist auch möglich, ein Fenster mit einem anderen großen Symbol zu versehen (das große Symbol wird im Alt-Tab-Fenster angezeigt). Zum Beispiel mit <a href="LoadPicture.htm">LoadPicture()</a> und <a href="PostMessage.htm">SendMessage</a>:</p>
<pre>SymbolGröße := 32  <em>; Die ideale Größe für Alt-Tab variiert je nach System und Windows-Version.</em>
hIcon := LoadPicture("Mein Symbol.ico", "Icon1 w" SymbolGröße " h" SymbolGröße, BildTyp)
Gui +LastFound
SendMessage 0x0080, 1, hIcon  <em>; 0x0080 ist WM_SETICON; und 1 bedeutet ICON_BIG (0 wäre ICON_SMALL).</em>
Gui Show</pre>
<p>Aufgrund von Einschränkungen in Windows XP und höher werden CheckBox-, Radio- und GroupBox-Steuerelemente mit benutzerdefinierter Textfarbe im klassischen Design dargestellt.</p>
<p>Siehe auch: <a href="#Margin">Margin</a> (Abstände innerhalb eines Fensters).</p>

<h2 id="GenRemarks">Allgemeine Bemerkungen</h2>
<p><a href="GuiControl.htm">GuiControl</a> und <a href="GuiControlGet.htm">GuiControlGet</a> können verwendet werden, um mit einzelnen Steuerelementen in einem GUI-Fenster zu arbeiten.</p>
<p>Jedes GUI-Fenster kann bis zu 11000 Steuerelemente enthalten. Aber Vorsicht: Bei mehr als 5000 Steuerelementen kann das System instabil werden, abhängig vom Typ des Steuerelements.</p>
<p>Skripte, die den GUI-Befehl irgendwo verwenden, sind automatisch <a href="_Persistent.htm">persistent</a> (selbst wenn der GUI-Befehl nie ausgeführt wird). Außerdem erlauben sie standardmäßig nur eine aktive Instanz von sich selbst, was aber mit der <a href="_SingleInstance.htm">#SingleInstance</a>-Direktive geändert werden kann.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="GuiControl.htm">GuiControl</a>, <a href="GuiControlGet.htm">GuiControlGet</a>, <a href="Menu.htm">Menu</a>, <a href="GuiControls.htm">Steuerelemente</a>, <a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a>, <a href="Control.htm">Control</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="Progress.htm">SplashImage</a>, <a href="MsgBox.htm">MsgBox</a>, <a href="FileSelectFile.htm">FileSelectFile</a>, <a href="FileSelectFolder.htm">FileSelectFolder</a></p>

<h2 id="Examples">Beispiele</h2>

<div class="ex" id="ExPopup">
<p><a class="ex_number" href="#ExPopup"></a> Erstellt ein Popup-Fenster ähnlich wie <a href="SplashTextOn.htm">SplashTextOn</a>.</p>
<pre>Gui, +AlwaysOnTop +Disabled -SysMenu +Owner  <em>; +Owner verhindert eine Taskleistenschaltfläche.</em>
Gui, Add, Text,, Beliebiger Anzeigetext.
Gui, Show, NoActivate, Fenstertitel  <em>; NoActivate verhindert, dass ein anderes Fenster seinen Aktivzustand verliert.</em></pre>
</div>

<div class="ex" id="ExInputBox">
<p><a class="ex_number" href="#ExInputBox"></a> Erstellt ein einfaches Eingabefenster zum Abfragen des Vor- und Nachnamens.</p>
<pre>Gui, Add, Text,, Vorname:
Gui, Add, Text,, Nachname:
Gui, Add, Edit, vVorname ym  <em>; Die ym-Option beginnt eine neue Spalte für Steuerelemente.</em>
Gui, Add, Edit, vNachname
Gui, Add, Button, default, OK  <em>; Das ButtonOK-Label (falls vorhanden) wird ausgeführt, wenn die Schaltfläche gedrückt wird.</em>
Gui, Show,, Einfaches Eingabebeispiel
return  <em>; Ende des automatischen Ausführungsbereichs. Das Skript ist im Leerlauf, bis der Benutzer etwas tut.</em>

GuiClose:
ButtonOK:
Gui, Submit  <em>; Benutzereingaben in die Steuerelementvariablen speichern.</em>
MsgBox Sie haben "%Vorname% %Nachname%" eingegeben.
ExitApp</pre>
</div>

<div class="ex" id="ExTab">
<p><a class="ex_number" href="#ExTab"></a> Erstellt ein Tab-Steuerelement mit mehreren Tabs, die jeweils verschiedene Steuerelemente für Interaktionszwecke enthalten.</p>
<pre>Gui, Add, Tab2,, Erster Tab|Zweiter Tab|Dritter Tab  <em>; Tab2 statt Tab benötigt <span class="ver">[v1.0.47.05+]</span>.</em>
Gui, Add, CheckBox, vMeineCheckBox, Kontrollkästchen
Gui, Tab, 2
Gui, Add, Radio, vMeinRadio, Optionsfeld 1
Gui, Add, Radio,, Optionsfeld 2
Gui, Tab, 3
Gui, Add, Edit, vMeinEdit r5  <em>; r5 bedeutet 5 Zeilen hoch.</em>
Gui, Tab  <em>; d.h. danach hinzugefügte Steuerelemente gehören nicht zum Tab-Steuerelement.</em>
Gui, Add, Button, default xm, OK  <em>; xm positioniert die Schaltfläche in die untere linke Ecke.</em>
Gui, Show
return

ButtonOK:
GuiClose:
GuiEscape:
Gui, Submit  <em>; Inhalt aller Steuerelemente in ihre Variablen speichern.</em>
MsgBox Ihre Eingabe:`n%MeineCheckBox%`n%MeinRadio%`n%MeinEdit%
ExitApp</pre>
</div>

<div class="ex" id="ExListBox">
<p><a class="ex_number" href="#ExListBox"></a> Erstellt eine ListBox mit Dateien aus einem Verzeichnis.</p>
<pre>Gui, Add, Text,, Eine Datei zum Ausführen auswählen.`nDrücken Sie ESCAPE oder schließen Sie das Fenster, um den Vorgang abzubrechen.
Gui, Add, ListBox, vMeineListBox gMeineListBox w640 r10
Gui, Add, Button, Default, OK
Loop, C:\*.*  <em>; Ordner und Platzhaltermuster je nach Bedarf anpassen.</em>
{
    GuiControl,, MeineListBox, %A_LoopFileFullPath%
}
Gui, Show
return

MeineListBox:
if (A_GuiEvent != "DoubleClick")
    return
<em>; Andernfalls erfolgte ein Doppelklick auf einen Listeneintrag,
; also wie OK-Drücken behandeln und in den nächsten Label fallen.</em>
ButtonOK:
GuiControlGet, MeineListBox  <em>; Aktuelle Auswahl in der ListBox abrufen.</em>
MsgBox, 4,, Wollen Sie wirklich die folgende Datei öffnen?`n`n%MeineListBox%
IfMsgBox, No
    return
<em>; Andernfalls versuchen zu starten:</em>
Run, %MeineListBox%,, UseErrorLevel
if (ErrorLevel = "ERROR")
    MsgBox Die angegebene Datei konnte nicht gestartet werden. Scheinbar fehlt das entsprechende Programm.
return

GuiClose:
GuiEscape:
ExitApp</pre>
</div>

<div class="ex" id="ExToolTip">
<p><a class="ex_number" href="#ExToolTip"></a> Zeigt jedes Mal eine kontextabhängige Hilfe via Tooltip an, wenn der Benutzer den Mauszeiger über ein bestimmtes Steuerelement bewegt.</p>
<pre>Gui, Add, Edit, v<strong>MeinEdit</strong>
<strong>MeinEdit</strong>_TT := "Der Tooltip für das Steuerelement mit der Variable MeinEdit"
Gui, Add, DropDownList, v<strong>MeineDDL</strong>, Rot|Grün|Blau
<strong>MeineDDL</strong>_TT := "Wählen Sie eine Farbe aus."
Gui, Add, CheckBox, vMeineCheckBox, Dieses Steuerelement hat keinen Tooltip.
Gui, Show
<a href="OnMessage.htm">OnMessage</a>(0x0200, "WM_MOUSEMOVE")
return

WM_MOUSEMOVE()
{
    static AktStrlmnt, VorStrlmnt, _TT  <em>; _TT bleibt für unteren ToolTip leer.</em>
    AktStrlmnt := A_GuiControl
    if (AktStrlmnt != VorStrlmnt and not InStr(AktStrlmnt, " "))
    {
        ToolTip  <em>; Vorherigen Tooltip verstecken.</em>
        SetTimer, ZeigeToolTip, 1000
        VorStrlmnt := AktStrlmnt
    }
    return

    ZeigeToolTip:
    SetTimer, ZeigeToolTip, Off
    <a href="ToolTip.htm">ToolTip</a> % %AktStrlmnt%_TT  <em>; Erstes Prozentzeichen erzwingt einen Ausdruck.</em>
    SetTimer, EntferneToolTip, 3000
    return

    EntferneToolTip:
    SetTimer, EntferneToolTip, Off
    ToolTip
    return
}


GuiClose:
ExitApp</pre>
</div>

<div class="ex" id="OSD">
<p><a class="ex_number" href="#OSD"></a> Erstellt eine Bildschirmanzeige (engl. On-Screen Display, kurz OSD) via transparentem Fenster.</p>
<pre>UnsichtbareFarbe := "EEAA99"  <em>; Kann eine beliebige RGB-Farbe sein (wird weiter unten transparent gemacht).</em>
Gui +LastFound +AlwaysOnTop -Caption +ToolWindow  <em>; +ToolWindow verhindert Taskleistenschaltfläche und Alt-Tab-Zugriff.</em>
Gui, Color, %UnsichtbareFarbe%
Gui, Font, s32  <em>; Große Schriftgröße setzen (32 Punkte).</em>
Gui, Add, Text, vMeinText cLime, XXXXX YYYYY  <em>; XX &amp; YY dienen zum automatischen Anpassen der Fenstergröße.
; Macht alle Pixel dieser Farbe unsichtbar und den Text selbst transparent (150):</em>
WinSet, TransColor, %UnsichtbareFarbe% 150
SetTimer, OSDAktualisieren, 200
Gosub, OSDAktualisieren  <em>; Erste Aktualisierung sofort machen, anstatt auf den Timer zu warten.</em>
Gui, Show, x0 y400 NoActivate  <em>; NoActivate verhindert, dass ein anderes Fenster seinen Aktivzustand verliert.</em>
return

OSDAktualisieren:
MouseGetPos, MausX, MausY
GuiControl,, MeinText, X%MausX%, Y%MausY%
return</pre>
</div>

<div class="ex" id="ExProgressBar">
<p><a class="ex_number" href="#ExProgressBar"></a> Erstellt einen animierten Fortschrittsbalken auf einem Hintergrundbild.</p>
<pre>Gui, Color, White
Gui, Add, Picture, x0 y0 h350 w450, %A_WinDir%\system32\ntimage.gif
Gui, Add, Button, Default xp+20 yp+250, Animation starten
Gui, Add, Progress, vMeinProgress w416
Gui, Add, Text, vMeinText wp  <em>; wp bedeutet "vorherige Breite verwenden".</em>
Gui, Show
return

ButtonAnimationStarten:
Loop, %A_WinDir%\*.*
{
    if (A_Index &gt; 100)
        break
    GuiControl,, MeinProgress, %A_Index%
    GuiControl,, MeinText, %A_LoopFileName%
    Sleep 50
}
GuiControl,, MeinText, Animation beendet.
return

GuiClose:
ExitApp</pre>
</div>

<div class="ex" id="ExImageViewer">
<p><a class="ex_number" href="#ExImageViewer"></a> Erstellt einen einfachen Bildbetrachter.</p>
<pre>Gui, +Resize
Gui, Add, Button, default, Neues Bild &amp;laden
Gui, Add, Radio, ym+5 x+10 vOption checked, &amp;Originalgröße
Gui, Add, Radio, ym+5 x+10, &amp;Kompletter Bildschirm
Gui, Add, Pic, xm vPic
Gui, Show
return

ButtonNeuesBildLaden:
FileSelectFile, Datei,,, Bild auswählen:, Bilder (*.gif; *.jpg; *.bmp; *.png; *.tif; *.ico; *.cur; *.ani; *.exe; *.dll)
if not Datei
    return
Gui, Submit, NoHide <em>; Die Werte der Radio-Steuerelemente speichern.</em>
if (Option = 1)  <em>; Bild mit aktueller Größe anzeigen.</em>
{
    Breite := 0
    Höhe := 0
}
else <em>; Zweites Optionsfeld ausgewählt: Bildgröße an Bildschirmgröße anpassen.</em>
{
    Breite := A_ScreenWidth - 28  <em>; Minus 28, um Platz für Rahmen und Innenabstand zu schaffen.</em>
    Höhe := -1  <em>; "Seitenverhältnis beibehalten" erscheint sinnvoll.</em>
}
GuiControl,, Pic, *w%Breite% *h%Höhe% %Datei%  <em>; Bild laden.</em>
Gui, Show, xCenter y0 AutoSize, %Datei%  <em>; Fenstergröße an Bildgröße anpassen.</em>
return

GuiClose:
ExitApp</pre>
</div>

<div class="ex" id="ExEditor">
<p><a class="ex_number" href="#ExEditor"></a> Erstellt einen einfachen Texteditor mit Menüleiste.</p>
<pre><em>; Untermenüs für die Menüleiste erstellen:</em>
Menu, DateiMenü, Add, &amp;Neu, DateiNeu
Menu, DateiMenü, Add, Ö&amp;ffnen..., DateiÖffnen
Menu, DateiMenü, Add, &amp;Speichern, DateiSpeichern
Menu, DateiMenü, Add, Speichern &amp;unter..., DateiSpeichernUnter
Menu, DateiMenü, Add  <em>; Trennlinie.</em>
Menu, DateiMenü, Add, &amp;Beenden, DateiBeenden
Menu, HilfeMenü, Add, Inf&amp;o, HilfeInfo

<em>; Untermenüs in die Menüleiste einfügen:</em>
Menu, MeineMenüleiste, Add, &amp;Datei, :DateiMenü
Menu, MeineMenüleiste, Add, &amp;?, :HilfeMenü

<em>; Fenster mit der Menüleiste ausstatten:</em>
Gui, Menu, MeineMenüleiste

<em>; Haupt-Eingabefeld erstellen und Fenster anzeigen:</em>
Gui, +Resize  <em>; Größe des Fensters veränderbar machen.</em>
Gui, Add, Edit, vHauptEdit WantTab W600 R20
Gui, Show,, Unbenannt
AktuelleDateiName := ""  <em>; Bedeutet, dass keine aktuelle Datei vorhanden ist.</em>
return

DateiNeu:
GuiControl,, HauptEdit  <em>; Eingabefeld leeren.</em>
return

DateiÖffnen:
Gui +OwnDialogs  <em>; Benutzer zwingen, das FileSelectFile-Dialogfenster zu schließen, bevor er zum Hauptfenster zurückkehren kann.</em>
FileSelectFile, AusgewählteDateiName, 3,, Datei öffnen, Text-Dokumente (*.txt)
if not AusgewählteDateiName  <em>; Keine Datei ausgewählt.</em>
    return
Gosub DateiLesen
return

DateiLesen:  <em>; Der Aufrufer hat AusgewählteDateiName bereits für uns gesetzt.</em>
FileRead, HauptEdit, %AusgewählteDateiName%  <em>; Inhalt der Datei lesen und in die Variable speichern.</em>
if ErrorLevel
{
    MsgBox "%AusgewählteDateiName%" konnte nicht geöffnet werden.
    return
}
GuiControl,, HauptEdit, %HauptEdit%  <em>; Text in das Steuerelement einfügen.</em>
AktuelleDateiName := AusgewählteDateiName
Gui, Show,, %AktuelleDateiName%   <em>; Dateinamen in der Titelleiste anzeigen.</em>
return

DateiSpeichern:
if not AktuelleDateiName   <em>; Noch kein Dateiname ausgewählt, also "Speichern unter...".</em>
    Goto DateiSpeichernUnter
Gosub AktuelleDateiSpeichern
return

DateiSpeichernUnter:
Gui +OwnDialogs  <em>; Benutzer zwingen, das FileSelectFile-Dialogfenster zu schließen, bevor er zum Hauptfenster zurückkehren kann.</em>
FileSelectFile, AusgewählteDateiName, S16,, Datei speichern, Text-Dokumente (*.txt)
if not AusgewählteDateiName  <em>; Keine Datei ausgewählt.</em>
    return
AktuelleDateiName := AusgewählteDateiName
Gosub AktuelleDateiSpeichern
return

AktuelleDateiSpeichern:  <em>; Der Aufrufer hat sichergestellt, dass AktuelleDateiName nicht leer ist.</em>
if FileExist(AktuelleDateiName)
{
    FileDelete %AktuelleDateiName%
    if ErrorLevel
    {
        MsgBox Überschreiben der Datei "%AktuelleDateiName%" fehlgeschlagen.
        return
    }
}
GuiControlGet, HauptEdit  <em>; Inhalt des Eingabefeldes abrufen.</em>
FileAppend, %HauptEdit%, %AktuelleDateiName%  <em>; Inhalt in eine Datei speichern.
; Bei Erfolg den Dateinamen in der Titelleiste anzeigen (falls es mit DateiSpeichernUnter aufgerufen wurde):</em>
Gui, Show,, %AktuelleDateiName%
return

HilfeInfo:
Gui, Info:+owner1  <em>; Hauptfenster (Gui #1) zum Elternfenster des Info-Fensters machen.</em>
Gui +Disabled  <em>; Interaktion mit dem Hauptfenster verbieten.</em>
Gui, Info:Add, Text,, Beliebiger Text.
Gui, Info:Add, Button, Default, OK
Gui, Info:Show
return

InfoButtonOK:  <em>; Dieser Abschnitt gilt für das Info-Fenster oben.</em>
InfoGuiClose:
InfoGuiEscape:
Gui, 1:-Disabled  <em>; Interaktion mit dem Hauptfenster erlauben (muss vor dem nächsten Schritt erfolgen).</em>
Gui Destroy  <em>; Info-Fenster zerstören.</em>
return

GuiDropFiles:  <em>; Ziehen &amp; Ablegen unterstützen.</em>
Loop, Parse, A_GuiEvent, `n
{
    AusgewählteDateiName := A_LoopField  <em>; Nur die erste Datei nehmen (sofern mehrere Dateien vorhanden sind).</em>
    break
}
Gosub DateiLesen
return

GuiSize:
if (ErrorLevel = 1)  <em>; Das Fenster wurde minimiert. Keine Aktion notwendig.</em>
    return
<em>; Andernfalls wurde das Fenster maximiert oder dessen Größe geändert. Größe des Eingabefeldes entsprechend anpassen.</em>
NeueBreite := A_GuiWidth - 20
NeueHöhe := A_GuiHeight - 20
GuiControl, Move, HauptEdit, W%NeueBreite% H%NeueHöhe%
return

DateiBeenden:     <em>; Benutzer hat "Beenden" in DateiMenü ausgewählt.</em>
GuiClose:  <em>; Benutzer hat das Fenster geschlossen.</em>
ExitApp</pre>
</div>
</body>
</html>
