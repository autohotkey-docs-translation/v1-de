<!DOCTYPE HTML>
<html lang="de">
<head>
<title>#If - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Die #If-Direktive erstellt kontextabhängige Hotkeys und Hotstrings. Solche Hotkeys führen je nach Ergebnis des Ausdrucks eine andere (oder gar keine) Aktion aus." />
<meta name="ahk:equiv-v2" content="lib/_HotIf.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>


<h1>#If <span class="ver">[AHK_L 4+]</span></h1>

<p>Erstellt kontextabhängige <a href="../Hotkeys.htm">Hotkeys</a> und <a href="../Hotstrings.htm">Hotstrings</a>. Solche Hotkeys führen je nach Ergebnis des Ausdrucks eine andere (oder gar keine) Aktion aus.</p>

<pre class="Syntax"><span class="func">#If</span> <span class="optional">Ausdruck</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Ausdruck</dt>
  <dd><p>Wenn weggelassen, sind danach erstellte Hotkeys und Hotstrings nicht kontextabhängig. Andernfalls geben Sie einen beliebigen gültigen <a href="../Variables.htm#Expressions">Ausdruck</a> an.</p></dd>

</dl>

<h2 id="Basic_Operation">Grundlegende Bedienung</h2>
<p>Es kann ein beliebiger gültiger Ausdruck verwendet werden, um den Kontext zu definieren, bei dem ein Hotkey aktiv sein soll. Zum Beispiel:</p>
<pre>#If WinActive("ahk_class Notepad") or WinActive(MeinFensterTitel)
#Space::MsgBox Sie haben WIN+LEERTASTE in Notepad oder %MeinFensterTitel% gedrückt.</pre>
<p>Die #If-Direktive ist wie die #IfWin-Direktive positionsabhängig, d.h. sie beeinflusst nur Hotkeys und Hotstrings, die sich im Skript physisch darunter befinden. Außerdem schließen sich #If und #IfWin gegenseitig aus, d.h. nur das aktuellste #If oder #IfWin ist wirksam.</p>
<p>Um die Kontextabhängigkeit auszuschalten, geben Sie #If oder eine beliebige #IfWin-Direktive ohne Parameter an. Zum Beispiel:</p>
<pre>#If</pre>
<p>#If kann wie alle anderen Direktiven nicht bedingt ausgeführt werden.</p>

<h2 id="General_Remarks">Allgemeine Bemerkungen</h2>
<p>Sobald die Tastatur-, Maus- oder Controllertastenkombination eines Hotkeys gedrückt wird, wird der #If-Ausdruck ausgewertet, um zu prüfen, ob der Hotkey aktiviert werden soll.</p>
<p class="warning"><strong>Hinweis:</strong> Ein Skript sollte nicht davon ausgehen, dass der Ausdruck nur beim Drücken der Taste ausgewertet wird (siehe unten).</p>
<p>Der Ausdruck kann auch ausgewertet werden, wenn das Programm wissen muss, ob der Hotkey aktiv ist. Zum Beispiel könnte der #If-Ausdruck einer benutzerdefinierten Kombination wie <code>a &amp; b::</code> auch ausgewertet werden, wenn die Präfixtaste (<code class="no-highlight">a</code> in diesem Fall) gedrückt wird, um zu prüfen, ob sie als benutzerdefinierte Modifikatortaste fungieren soll.</p>
<p class="warning"><strong>Hinweis:</strong> Die Nutzung von #If in einem nicht reagierenden Skript kann eine Eingabeverzögerung verursachen oder Hotkeys stören (siehe unten).</p>
<p>Für die #If-Direktive gibt es noch einige weitere Vorbehalte:</p>
<ul>
  <li>Tastatur- oder Mauseingaben werden üblicherweise gepuffert (verzögert), bis die Auswertung des Ausdrucks abgeschlossen ist oder das <a href="_IfTimeout.htm">Zeitlimit überschritten ist</a>.</li>
  <li>Die Auswertung von Ausdrücken kann nur durch den Hauptthread des Skripts (auf OS-Ebene, kein <a href="../misc/Threads.htm">Pseudo-Thread</a>) erfolgen, nicht direkt durch den Tastatur-/Maus-Hook. Wenn das Skript beschäftigt ist oder auf nichts reagiert, z.B. wenn FileCopy gerade eine Datei kopiert, wird die Auswertung des Ausdrucks verzögert oder im schlimmsten Fall verworfen, weil das Zeitlimit überschritten wurde.</li>
  <li>Wenn das <a href="_IfTimeout.htm#LowLevelHooksTimeout">systemdefinierte Zeitlimit</a> überschritten wurde, kann es sein, dass das System dem Skript keine Tastatur- oder Mauseingaben mehr meldet (Einzelheiten finden Sie unter #IfTimeout).</li>
  <li>Das Senden von Tastendrücken oder Mausklicks während der Auswertung des Ausdrucks (z.B. mit einer Funktion, die sie selbst aufruft) kann zu Komplikationen führen und sollte vermieden werden.</li>
</ul>
<p><span class="ver">[AHK_L 53+]</span>: <a href="../Variables.htm#ThisHotkey">A_ThisHotkey</a> und <a href="../Variables.htm#TimeSinceThisHotkey">A_TimeSinceThisHotkey</a> werden auf Basis des Hotkeys gesetzt, den der aktuelle #If-Ausdruck gerade auswertet.</p>
<p><span class="ver">[v1.0.95.00+]</span>: <a href="../Variables.htm#PriorHotkey">A_PriorHotkey</a> und <a href="../Variables.htm#TimeSincePriorHotkey">A_TimeSincePriorHotkey</a> enthalten temporär die vorherigen Werte der entsprechenden "This"-Variablen.</p>

<h2 id="Related">Siehe auch</h2>
<p>Die meisten Verhaltensmerkmale der <a href="_IfWinActive.htm">#IfWin</a>-Direktiven gelten auch für #If.</p>
<p>Mit <a href="_IfTimeout.htm">#IfTimeout</a> kann das Zeitlimit geändert werden.</p>

<h2 id="Examples">Beispiele</h2>

<div class="ex" id="ExVolume">
<p><a class="ex_number" href="#ExVolume"></a> Ermöglicht das Einstellen der Lautstärke durch Drehen des Mausrads über der Taskleiste.</p>
<pre>
#If MausIstÜber("ahk_class Shell_TrayWnd")
WheelUp::Send {Volume_Up}
WheelDown::Send {Volume_Down}

MausIstÜber(FensterTitel) {
    MouseGetPos,,, Fenster
    return WinExist(FensterTitel . " ahk_id " . Fenster)
}
</pre>
</div>

<div class="ex" id="ExWordDelete">
<p><a class="ex_number" href="#ExWordDelete"></a> Einfache wortlöschende Tastaturkurzbefehle für alle Eingabefelder.</p>
<pre>
#If AktivesSteuerelementIstKlasse("Edit")
^BS::Send ^+{Left}{Del}
^Del::Send ^+{Right}{Del}

AktivesSteuerelementIstKlasse(Klasse) {
    ControlGetFocus, FokussiertesStrlmnt, A
    ControlGet, FokussiertesStrlmntHwnd, Hwnd,, %FokussiertesStrlmnt%, A
    WinGetClass, FokussiertesStrlmntKlasse, ahk_id %FokussiertesStrlmntHwnd%
    return (FokussiertesStrlmntKlasse=Klasse)
}
</pre>
</div>

<div class="ex" id="ExContextInsens">
<p><a class="ex_number" href="#ExContextInsens"></a> Kontextunabhängiger Hotkey.</p>
<pre>
#If
Esc::ExitApp
</pre>
</div>

<div class="ex" id="ExDynamic">
<p><a class="ex_number" href="#ExDynamic"></a> Dynamische Hotkeys. Dieses Beispiel muss mit <a href="#ExVolume">Beispiel #1</a> kombiniert werden, bevor es ausgeführt wird.</p>
<pre>
NumpadAdd::
Hotkey, If, MausIstÜber("ahk_class Shell_TrayWnd")
if (zweimalhoch := !zweimalhoch)
    Hotkey, WheelUp, ZweimalHoch
else
    Hotkey, WheelUp, WheelUp
return

ZweimalHoch:
Send {Volume_Up 2}
return
</pre>
</div>

</body>
</html>
