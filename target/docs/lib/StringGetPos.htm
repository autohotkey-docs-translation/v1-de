<!DOCTYPE HTML>
<html lang="de">
<head>
<title>StringGetPos - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der StringGetPos-Befehl ruft die Position einer bestimmten Teilzeichenkette innerhalb einer Zeichenkette ab." />
<meta name="ahk:equiv-v2" content="lib/InStr.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>StringGetPos</h1>

<p>Ruft die Position einer bestimmten Teilzeichenkette innerhalb einer Zeichenkette ab.</p>
<p class="warning"><strong>Veraltet:</strong> Dieser Befehl ist nicht für neue Skripte empfohlen. Verwenden Sie stattdessen die <a href="InStr.htm">InStr</a>-Funktion.</p>

<pre class="Syntax"><span class="func">StringGetPos</span>, AusgabeVar, EingabeVar, SuchText <span class="optional">, Vorkommen, Offset</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Ausgabevariable, in der die abgerufene Position relativ zum ersten Zeichen von <em>EingabeVar</em> gespeichert werden soll. Position 0 ist das erste Zeichen.</p></dd>

  <dt>EingabeVar</dt>
  <dd><p>Name der Eingabevariable, die durchsucht werden soll. Umschließen Sie den Namen nicht mit Prozentzeichen, es sei denn, Sie wollen den Inhalt der Variable als Namen verwenden.</p></dd>

  <dt>SuchText</dt>
  <dd><p>Die Zeichenkette, nach der gesucht werden soll. Die Suche erfolgt nicht Groß-/Kleinschreibung-sensitiv, es sei denn, <a href="StringCaseSense.htm">StringCaseSense</a> wurde eingeschaltet.</p></dd>

  <dt>Vorkommen</dt>
  <dd>
    <p>Wenn leer oder weggelassen, wird standardmäßig L1 verwendet. Andernfalls geben Sie eine der folgenden Optionen an, um zu beeinflussen, welches Vorkommen gefunden wird, wenn <em>SuchText</em> mehrfach in <em>EingabeVar</em> vorkommt.</p>
    <p><strong>L</strong><em>n</em>: <em>EingabeVar</em> wird von links nach rechts durchsucht, um die <em>n</em>-te Übereinstimmung zu finden.</p>
    <p><strong>R</strong><em>n</em>: <em>EingabeVar</em> wird von rechts nach links durchsucht, um die <em>n</em>-te Übereinstimmung zu finden. Wenn <em>n</em> weggelassen wird (oder wenn <em>Vorkommen</em> 1 ist), wird standardmäßig R1 verwendet. </p>
    <p>Um z.B. das vierte Vorkommen von rechts zu finden, geben Sie <code class="no-highlight">R4</code> an. Hinweis: Wenn <em>n</em> kleiner gleich 0 ist, wird keine Übereinstimmung gefunden.</p>
  </dd>

  <dt>Offset</dt>
  <dd><p>Wenn leer oder weggelassen, wird standardmäßig 0 verwendet. Andernfalls geben Sie die Anzahl der Zeichen auf der linken oder rechten Seite an (abhängig vom obigen Parameter), die übersprungen werden sollen. Zum Beispiel würde das Folgende die Suche beim zehnten Zeichen von links beginnen: <code>StringGetPos, AusgabeVar, EingabeVar, abc, , 9</code>. Dieser Parameter kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p></dd>

</dl>

<h2 id="ErrorLevel">ErrorLevel</h2>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn das angegebene Vorkommen von <em>SuchText</em> in <em>EingabeVar</em> nicht gefunden werden konnte, andernfalls auf 0.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Bei diesem und allen anderen Befehlen darf <em>AusgabeVar</em> die gleiche Variable wie <em>EingabeVar</em> sein.</p>
<p>Im Gegensatz zu <a href="StringMid.htm">StringMid</a> und <a href="InStr.htm">InStr()</a> ist 0 als Position des ersten Zeichens für StringGetPos definiert.</p>
<p>Die abgerufene Position bezieht sich immer auf das erste Zeichen von <em>EingabeVar</em>, egal ob <em>Vorkommen</em> und/oder <em>Offset</em> angegeben sind. Wenn z.B. die Zeichenkette "abc" in 123abc789 gefunden wird, ist die gemeldete Position immer 3, unabhängig von der verwendeten Suchmethode.</p>
<p>Wenn das angegebene Vorkommen von <em>SuchText</em> in <em>EingabeVar</em> nicht existiert, wird <em>AusgabeVar</em> auf -1 und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt.</p>
<p>Mit <a href="SplitPath.htm">SplitPath</a> kann ein Dateipfad auf einfache Weise in Verzeichnis, Dateiname und Erweiterung aufgeteilt werden.</p>
<p>Die internen Variablen <strong>A_Space</strong> und <strong>A_Tab</strong> enthalten ein Leer- bzw. Tabulatorzeichen. Sie sind nützlich, um nach Leer- und Tabulatorzeichen zu suchen, die entweder einzeln oder am Anfang oder Ende von <em>SuchText</em> vorkommen.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="InStr.htm">InStr()</a>, <a href="RegExMatch.htm">RegExMatch()</a>, <a href="IfInString.htm">IfInString</a>, <a href="IfIn.htm">If Var [not] in/contains VergleichListe</a>, <a href="StringCaseSense.htm">StringCaseSense</a>, <a href="StringReplace.htm">StringReplace</a>, <a href="SplitPath.htm">SplitPath</a>, <a href="StringLeft.htm">StringLeft</a>, <a href="StringLeft.htm">StringRight</a>, <a href="StringMid.htm">StringMid</a>, <a href="StringTrimLeft.htm">StringTrimLeft</a>, <a href="StringTrimLeft.htm">StringTrimRight</a>, <a href="StringLen.htm">StringLen</a>, <a href="StringLower.htm">StringLower</a>, <a href="StringLower.htm">StringUpper</a>, <a href="IfIs.htm">If Var is [not] Typ</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Ermittelt und analysiert die Position einer Teilzeichenkette.</p>
<pre>Heuhaufen := "abcdefghijklmnopqrs"
Nadel := "def"
StringGetPos, Pos, Heuhaufen, %Nadel%
if (Pos &gt;= 0)
    MsgBox, Die Zeichenkette wurde auf Position %Pos% gefunden.</pre>
</div>

<div class="ex" id="ExSplitPath">
<p><a class="ex_number" href="#ExSplitPath"></a> Teilt den vollständigen Pfadnamen einer Datei in einzelne Komponenten auf. Beachten Sie, dass dies mit <a href="StrSplit.htm">StrSplit()</a>, <a href="StringSplit.htm">StringSplit</a> oder einer <a href="LoopParse.htm">parsenden Schleife</a> viel einfacher wäre, daher dient das folgende Beispiel nur der Veranschaulichung.</p>
<pre>FileSelectFile, Datei, , , Wählen Sie einen Dateinamen in einem tief verschachtelten Ordner aus:
if (Datei != "")
{
    Pos_vorher := StrLen(Datei)
    Pos_vorher += 1 <em>; Position auf das Zeichen nach dem letzten Zeichen setzen.</em>
    Loop
    {
        <em>; Sucht nach dem N-ten Vorkommen, von rechts beginnend:</em>
        StringGetPos, Pos, Datei, \, R%A_Index%
        if ErrorLevel
            break
        Länge := Pos_vorher - Pos - 1
        Pos_vorher := Pos
        Pos += 2  <em>; Für die Verwendung mit StringMid anpassen.</em>
        StringMid, Pfad_Komponente, Datei, %Pos%, %Länge%
        MsgBox Pfadkomponente Nr. %A_Index% (von rechts) ist:`n%Pfad_Komponente%
    }
}</pre>
</div>

</body>
</html>
