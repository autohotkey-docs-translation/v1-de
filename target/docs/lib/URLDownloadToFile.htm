<!DOCTYPE HTML>
<html lang="de">
<head>
<title>UrlDownloadToFile - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der UrlDownloadToFile-Befehl lädt eine Datei aus dem Internet herunter." />
<meta name="ahk:equiv-v2" content="lib/Download.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>UrlDownloadToFile</h1>

<p>Lädt eine Datei aus dem Internet herunter.</p>

<pre class="Syntax"><span class="func">UrlDownloadToFile</span>, URL, DateiName</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>URL</dt>
  <dd><p>URL der Datei, die heruntergeladen werden soll. Zum Beispiel bewirkt <code class="no-highlight">https://someorg.org</code>, dass die Willkommensseite dieser Organisation abgerufen wird.</p></dd>

  <dt>DateiName</dt>
  <dd><p>Geben Sie den Namen der Datei an, die lokal erstellt werden soll. Wenn kein absoluter Pfad angegeben ist, wird die Datei im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet. Eine bereits vorhandene Datei wird mit der neuen Datei <u>überschrieben</u>.</p>
    <p>Dieser Befehl lädt eine Datei herunter. Um stattdessen in eine Variable herunterzuladen, siehe das <a href="#WHR">Beispiel</a> unten.</p></dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h2 id="Remarks">Bemerkungen</h2>
<p>Der Download könnte auch dann als Erfolg gewertet werden, wenn die Remote-Datei nicht existiert. Der Grund dafür ist, dass viele Webserver anstelle der fehlenden Datei eine Fehlerseite senden. Und genau diese Fehlerseite wird anstelle von <em>DateiName</em> gespeichert.</p>
<p>Es muss Internet Explorer 3 oder höher installiert sein, damit dieser Befehl richtig funktioniert. Firewalls oder das Vorhandensein mehrerer Netzwerkadapter können dazu führen, dass der Befehl fehlschlägt. Zudem ist es möglich, dass einige Webseiten solche Downloads blockieren.</p>
<p><strong>Caching:</strong></p>
<ul>
  <li><span class="ver">[v1.0.44.07+]</span>: Die URL wird direkt vom Remote-Server abgerufen (also nie aus dem Cache des Internet Explorers). Um das Caching zu erlauben, stellen Sie der URL ein *0 gefolgt von einem Leerzeichen voran, z.B. <code class="no-highlight">*0 https://someorg.org</code>. Die 0 nach dem Sternchen kann mit einer gültigen dwFlags-Nummer ersetzt werden; suchen Sie nach InternetOpenUrl auf <a href="https://www.microsoft.com">www.microsoft.com</a> für weitere Details.</li>
  <li>In den Versionen vor v1.0.44.07 wird die Datei nach Möglichkeit aus dem Cache abgerufen. Um das zu verhindern, fügen Sie eine Abfragezeichenkette an das Ende der URL an. Zum Beispiel: <code class="no-highlight">https://www.someorg.org/doc.html?fakeParam=42</code>. Hinweis: Wenn Sie dieselbe Datei häufig herunterladen, muss die Abfragezeichenkette variieren.</li>
</ul>
<p><strong>Proxies:</strong> UrlDownloadToFile verwendet einen Proxy-Server für den Internetzugriff, wenn ein solcher in den Einstellungen des Internet Explorers konfiguriert ist.</p>
<p><strong>FTP und Gopher:</strong> <span class="ver">[v1.0.48.04+]</span> unterstützt FTP- und Gopher-URLs. Zum Beispiel:</p>
<pre>UrlDownloadToFile, ftp://example.com/home/Meine Datei.zip, C:\Mein Ordner\Meine Datei.zip  <em>; Anonym anmelden.</em>
UrlDownloadToFile, ftp://user:pass@example.com:21/home/Meine Datei.zip, C:\Mein Ordner\Meine Datei.zip  <em>; Als bestimmter Benutzer anmelden.</em>
UrlDownloadToFile, ftp://benutzer:passwort@beispiel.com/Mein Verzeichnis, C:\Verzeichnisliste.html  <em>; Ruft eine Verzeichnisliste im HTML-Format ab.</em></pre>
<h2 id="Related">Siehe auch</h2>
<p><a href="FileRead.htm">FileRead</a>, <a href="FileCopy.htm">FileCopy</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Lädt eine Textdatei herunter.</p>
<pre>UrlDownloadToFile, https://www.autohotkey.com/download/1.1/version.txt, C:\Aktuellste AutoHotkey-Version.txt</pre>
</div>

<div class="ex" id="ExZip">
<p><a class="ex_number" href="#ExZip"></a> Lädt eine ZIP-Datei herunter.</p>
<pre>UrlDownloadToFile, https://someorg.org/archive.zip, C:\SomeOrg's Archive.zip</pre>
</div>

<div class="ex" id="WHR">
<p><a class="ex_number" href="#WHR"></a> Lädt Text in eine Variable herunter.</p>
<pre>whr := ComObjCreate("WinHttp.WinHttpRequest.5.1")
whr.Open("GET", "https://www.autohotkey.com/download/1.1/version.txt", true)
whr.Send()
<em>; Durch das 'true' oben und den Aufruf unten bleibt das Skript responsiv.</em>
whr.WaitForResponse()
version := whr.ResponseText
MsgBox % version
</pre>
</div>

<div class="ex" id="XHR">
<p><a class="ex_number" href="#XHR"></a> Macht einen asynchronen HTTP-Request.</p>
<pre>req := ComObjCreate("Msxml2.XMLHTTP")
<em>; Request mit aktiviertem async öffnen.</em>
req.open("GET", "https://www.autohotkey.com/download/1.1/version.txt", true)
<em>; Unsere Rückruffunktion setzen, benötigt <span class="ver">[v1.1.17+]</span>.</em>
req.onreadystatechange := Func("Ready")
<em>; Den Request senden.  Ready() wird bei Abschluss aufgerufen.</em>
req.send()
<em>/*
; Wenn Sie warten wollen, brauchen Sie kein onreadystatechange.
; Wenn Sie async=true setzen und auf diese Weise warten, bleibt das Skript
; responsiv, während der Download läuft, wogegen async=false
; das Skript unresponsiv macht.
while req.readyState != 4
    sleep 100
*/</em>
#Persistent

Ready() {
    global req
    if (req.readyState != 4)  <em>; Noch nicht fertig.</em>
        return
    if (req.status == 200) <em>; OK.</em>
        MsgBox % "Neueste AutoHotkey-Version ist: " req.responseText
    else
        MsgBox 16,, % "Status " req.status
    ExitApp
}</pre>
</div>

</body>
</html>
