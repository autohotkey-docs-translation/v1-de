<!DOCTYPE HTML>
<html lang="de">
<head>
<title>#IfWinActive / #IfWinNotActive / #IfWinExist / #IfWinNotExist - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Die Direktiven #IfWinActive, #IfWinNotActive, #IfWinExist und #IfWinNotExist erstellen kontextabhängige Hotkeys und Hotstrings. Diese führen je nach aktivem oder existierendem Fenster eine andere (oder gar keine) Aktion aus." />
<meta name="ahk:equiv-v2" content="lib/_HotIf.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>#IfWinActive / #IfWinNotActive / #IfWinExist / #IfWinNotExist</h1>

<p>Erstellt kontextabhängige <a href="../Hotkeys.htm">Hotkeys</a> und <a href="../Hotstrings.htm">Hotstrings</a>. Diese führen je nach aktivem oder existierendem Fenster eine andere (oder gar keine) Aktion aus.</p>

<pre class="Syntax">
<span class="func">#IfWinActive</span> <span class="optional">FensterTitel, FensterText</span>
<span class="func">#IfWinExist</span> <span class="optional">FensterTitel, FensterText</span>
<span class="func">#IfWinNotActive</span> <span class="optional">FensterTitel, FensterText</span>
<span class="func">#IfWinNotExist</span> <span class="optional">FensterTitel, FensterText</span>
<a href="_If.htm">#If <span class="optional">Ausdruck</span></a>
</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>FensterTitel, FensterText</dt>
  <dd>
    <p>Wenn weggelassen, sind danach erstellte Hotkeys und Hotstrings nicht kontextabhängig. Andernfalls geben Sie für <em>FensterTitel</em> einen <a href="../misc/WinTitle.htm">Fenstertitel oder andere Kriterien</a> zur Identifizierung des Zielfensters und/oder für <em>FensterText</em> eine Teilzeichenkette aus einem Textelement des Zielfensters an (Textelemente können mit dem internen Tool "Window Spy" in Erfahrung gebracht werden).</p>
    <p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Standardmäßig werden versteckte Fenster nicht erkannt und versteckte Textelemente erkannt, was mit <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> und <a href="DetectHiddenText.htm">DetectHiddenText</a> im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> (ganz oben im Skript) geändert werden kann. Standardmäßig muss ein Fenstertitel mit dem angegebenen <em>FensterTitel</em> beginnen, um eine Übereinstimmung zu sein, was mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> geändert werden kann.</p>
    <p>Diese Direktive unterstützt wie die meisten anderen Direktiven keine Variablen. Obwohl <a href="../misc/WinTitle.htm#ahk_pid">ahk_pid</a> und <a href="../misc/WinTitle.htm#ahk_id">ahk_id</a> mit einer hardkodierten Prozess- oder Fenster-ID verwendet werden können, ist es für #IfWin üblicher, sie indirekt via <a href="GroupAdd.htm">GroupAdd</a> oder <a href="Hotkey.htm">Hotkey IfWin</a> zu verwenden.</p>
    <p>Die AusnahmeTitel- und AusnahmeText-Parameter, die normalerweise bei fensterspezifischen Befehlen verfügbar sind, werden <u>nicht</u> unterstützt, können aber indirekt verwendet werden, indem <code class="no-highlight">ahk_group MeineGruppe</code> für <em>FensterTitel</em> angegeben wird (wobei <em>MeineGruppe</em> eine via <a href="GroupAdd.htm">GroupAdd</a> erstellte Fenstergruppe ist, die AusnahmeTitel/Text unterstützt).</p>
  </dd>

</dl>

<h2 id="Basic_Operation">Grundlegende Bedienung</h2>
<p>Die #IfWin-Direktiven machen es einfach, kontextabhängige <a href="../Hotkeys.htm">Hotkeys</a> und <a href="../Hotstrings.htm">Hotstrings</a> zu erstellen. Zum Beispiel:</p>
<pre>#IfWinActive ahk_class Notepad
#space::MsgBox Sie haben WIN+LEERTASTE in Notepad gedrückt.
::bzw::Sie haben bzw in Notepad geschrieben.</pre>
<p>Die #IfWin-Direktiven sind positionsabhängig, d.h. sie beeinflussen nur Hotkeys und Hotstrings, die sich im Skript physisch darunter befinden. Außerdem schließen sie sich gegenseitig aus, d.h. nur die aktuellste Direktive ist wirksam.</p>
<p>Die #IfWin-Direktiven sind für Hotkeys und Hotstrings gedacht, die mit der Zweifach-Doppelpunkt-Syntax definiert werden, wie z.B. <code>#space::</code> oder <code>::bzw::</code>. Für Hotkeys und Hotstrings, die mit dem <a href="Hotkey.htm">Hotkey</a>-Befehl oder der <a href="Hotstring.htm">Hotstring</a>-Funktion erstellt werden, ist <a href="Hotkey.htm#IfWin">Hotkey If</a> die richtige Wahl. Wenn <em>Hotkey If</em> jedoch nie im Skript verwendet wird, wird die unterste im Skript angegebene #IfWin-Direktive (falls vorhanden) für den Hotkey-Befehl oder die Hotstring-Funktion wirksam.</p>
<p>Um die Kontextabhängigkeit auszuschalten, geben Sie eine beliebige #IfWin-Direktive ohne Parameter an. Zum Beispiel:</p>
<pre>#IfWinActive</pre>
<p>Wenn #IfWin ausgeschaltet ist (oder nie im Skript verwendet wird), sind <a href="../Hotkeys.htm">Hotkeys</a> und <a href="../Hotstrings.htm">Hotstrings</a> für alle Fenster wirksam – es sei denn, sie wurden via <a href="Suspend.htm">Suspend</a>, <a href="Hotkey.htm">Hotkey</a> oder <a href="Hotstring.htm">Hotstring()</a> deaktiviert.</p>
<p>Wenn ein Maus- oder Tastatur-Hotkey per #IfWin deaktiviert wurde, wird er seine ursprüngliche Funktion ausführen, d.h. der Hotkey wird an das aktive Fenster weitergereicht, als gäbe es ihn nicht. Es gibt eine Ausnahme: Controller-Hotkeys: Obwohl #IfWin mit diesen Hotkeys funktioniert, kann die Direktive nicht verhindern, dass andere Programme die Tastendrücke eines Controllers wahrnehmen.</p>
<p>#IfWin kann auch verwendet werden, um das Verhalten einer gewöhnlichen Taste wie <kbd>Enter</kbd> oder <kbd>Leer</kbd> zu ändern. Das ist nützlich, wenn ein bestimmtes Fenster diese Taste ignoriert oder eine unerwünschte Aktion ausführt. Zum Beispiel:</p>
<pre>#IfWinActive Erinnerung ahk_class #32770  <em>; Das Erinnerungsfenster von Outlook.</em>
Enter::Send !o  <em>; ENTER soll die markierte Erinnerung öffnen statt snoozen.</em>
#IfWinActive</pre>
<p>#IfWin kann wie alle anderen Direktiven nicht bedingt ausgeführt werden.</p>
<h2 id="variant">Varianten (Duplikate)</h2>
<p>Sie können einen bestimmten <a href="../Hotkeys.htm">Hotkey</a> oder <a href="../Hotstrings.htm">Hotstring</a> mehrmals im Skript definieren, indem Sie jeder Definition ein anderes IfWin-Kriterium zuweisen. Diese werden als <em>Hotkey-Varianten</em> oder <em>Hotstring-Varianten</em> bezeichnet. Zum Beispiel:</p>
<pre>#IfWinActive ahk_class Notepad
^!c::MsgBox Sie haben STRG+ALT+C in Notepad gedrückt.
#IfWinActive ahk_class WordPadClass
^!c::MsgBox Sie haben STRG+ALT+C in WordPad gedrückt.
#IfWinActive
^!c::MsgBox Sie haben STRG+ALT+C in einem anderen Fenster als Notepad/WordPad gedrückt.</pre>
<p>Wenn mehr als eine Variante zum Auslösen geeignet ist, wird nur die Variante ausgelöst, die dem Anfang des Skripts am nächsten ist. Die Ausnahme davon ist die globale Variante (die Variante ohne #IfWin-Kriterium): Sie hat immer die niedrigste Priorität und wird daher nur ausgelöst, wenn keine andere Variante zum Auslösen geeignet ist (diese Ausnahme gilt nicht für <a href="../Hotstrings.htm">Hotstrings</a>).</p>
<p>Beim Erstellen von Hotkey-Duplikaten spielt die Reihenfolge von <a href="../Hotkeys.htm#Symbols">Modifikatorsymbolen</a> wie z.B. <code class="no-highlight">^!+#</code> keine Rolle. Zum Beispiel ist <code class="no-highlight">^!c</code> dasselbe wie <code class="no-highlight">!^c</code>. Die Tasten müssen jedoch einheitlich geschrieben sein. Zum Beispiel ist <em>Esc</em> in diesem Fall nicht dasselbe wie <em>Escape</em> (Groß-/Kleinschreibung ist jedoch egal). Außerdem werden Hotkeys mit einem <a href="../Hotkeys.htm#wildcard">Platzhalter-Präfix (*)</a> und Hotkeys ohne Platzhalter getrennt behandelt. Zum Beispiel hätten <code class="no-highlight">*F1</code> und <code class="no-highlight">F1</code> jeweils ihre eigenen Varianten.</p>
<p>Um dieselbe Hotkey-Subroutine von mehr als einer Variante ausführen zu lassen, ist es am einfachsten, einen Stapel identischer Hotkeys zu erstellen, die jeweils eine andere #IfWin-Direktive darüber haben. Zum Beispiel:</p>
<pre>#IfWinActive ahk_class Notepad
#z::
#IfWinActive ahk_class WordPadClass
#z::
MsgBox Sie haben WIN+Z entweder in Notepad oder WordPad gedrückt.
return</pre>
<p>Alternativ kann auch eine <a href="GroupAdd.htm">Fenstergruppe</a> via <code>#IfWinActive ahk_group MeineGruppe</code> verwendet werden.</p>
<p>Um Hotkey-Varianten oder in <span class="ver">[v1.1.28+]</span> Hotstring-Varianten dynamisch zu erstellen (während das Skript läuft), siehe <a href="Hotkey.htm#IfWin">"Hotkey IfWin"</a>.</p>
<h2 id="gen">Allgemeine Bemerkungen</h2>
<p>#IfWin stellt auch bei Bedarf die ursprüngliche Funktion der Präfixtasten wieder her (eine <a href="../Hotkeys.htm#prefix">Präfixtaste</a> ist bspw. <kbd>A</kbd> bei einem Hotkey wie "a &amp; b"). Dies geschieht immer dann, wenn für ein bestimmtes Präfix keine aktivierten Hotkeys verfügbar sind.</p>
<p>Nutzt man ein Gosub oder Goto, um zu einem Hotkey- oder Hotstring-Label zu springen, springt es zu der Variante, die dem Anfang des Skripts am nächsten ist.</p>
<p>Die Tastatur- oder Maustaste eines via #IfWin deaktivierten Hotkeys sind im <a href="KeyHistory.htm">Tastenverlauf</a> innerhalb der Spalte "Type" mit einem Rautezeichen (#) gekennzeichnet. Dies kann helfen, <a href="../Scripts.htm#debug">ein Skript zu debuggen</a>.</p>
<p>Variablenreferenzen wie %Var% werden derzeit nicht unterstützt. Da das in einer zukünftigen Version geändert werden könnte, sollten Prozentzeichen mit einem <a href="../misc/EscapeChar.htm">Escapezeichen</a> versehen werden (`%), um eine ungewollte Variablenreferenz zu verhindern. Kommas sollten ebenfalls mit einem Escapezeichen versehen werden (`,), um zusätzliche Parameter zu unterstützen, die in zukünftigen Versionen hinzugefügt werden könnten. Um diese Einschränkung zu umgehen, können Sie <a href="GroupAdd.htm">GroupAdd</a> und <a href="../misc/WinTitle.htm#ahk_group">ahk_group</a> verwenden.</p>
<p>Ein Label, dem ein Hotkey via <a href="Hotkey.htm">Hotkey</a>-Befehl zugewiesen wurde, wird von #IfWin nicht direkt beeinflusst. Nur die #IfWin-Direktive (falls vorhanden), die dem Ende des Skripts am nächsten ist, wird für alle via Hotkey-Befehl erstellte Hotkeys wirksam (es sei denn, dies wurde mit <a href="Hotkey.htm#IfWin">"Hotkey IfWin"</a> geändert).</p>
<p><a href="../Hotkeys.htm#alttab">Alt-Tab-Hotkeys</a> werden von #IfWin nicht beeinflusst: sie gelten für alle Fenster.</p>
<p>Das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a> wird von #IfWinActive/Exist gesetzt (aber nicht von IfWin<em>Not</em>Active/<em>Not</em>Exist). Zum Beispiel:</p>
<pre>#IfWinExist ahk_class Notepad
#n::WinActivate  <em>; Aktiviert das gefundene Fenster von #IfWin.</em></pre>
<p>Die <a href="../misc/EscapeChar.htm">Escapesequenzen</a> `s und `t können verwendet werden, wenn Leer- bzw. Tabulatorzeichen am Anfang und Ende eines #IfWin-Parameters notwendig sind.</p>
<p>Aus Performanzgründen überwacht #IfWin das angegebene Fenster nicht kontinuierlich, ob es aktiviert oder vorhanden ist. Erst wenn der Benutzer ein Hotkey oder Hotstring auslöst, sucht die Direktive nach einem passenden Fenster. Wenn die Direktive kein passendes Fenster findet, werden Tastendrücke oder Mausklicks des Benutzers unverändert an das aktive Fenster weitergegeben.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="_If.htm">#If <i>Ausdruck</i></a>, <a href="Hotkey.htm">Hotkey-Befehl</a>, <a href="../Hotkeys.htm">Hotkeys</a>, <a href="Hotstring.htm">Hotstring-Funktion</a>, <a href="../Hotstrings.htm">Hotstrings</a>, <a href="Suspend.htm">Suspend</a>, <a href="WinActive.htm">WinActive()</a>, <a href="WinExist.htm">WinExist()</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Erstellt zwei Hotkeys und einen Hotstring, die nur funktionieren, wenn Notepad aktiv ist, und einen Hotkey, der für alle Fenster außer Notepad funktioniert.</p>
<pre>#IfWinActive ahk_class Notepad
^!a::MsgBox Sie haben STRG+ALT+A gedrückt, während Notepad aktiv war.  <em>; Dieser Hotkey wird ignoriert, wenn er in einem anderen Fenster gedrückt wird.</em>
#c::MsgBox Sie haben WIN+C gedrückt, während Notepad aktiv war.
::bzw::Dieser Ersatztext für "bzw" erscheint nur in Notepad.
#IfWinActive
#c::MsgBox Sie haben WIN+C in einem anderen Fenster als Notepad gedrückt.</pre>
</div>

</body>
</html>
