<!DOCTYPE HTML>
<html lang="de">
<head>
<title>PostMessage / SendMessage - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Die Befehle PostMessage und SendMessage senden eine Meldung an ein Fenster oder Steuerelement (SendMessage wartet zusätzlich auf eine Bestätigung)." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>PostMessage / SendMessage</h1>

<p>Sendet eine Meldung an ein Fenster oder Steuerelement (SendMessage wartet zusätzlich auf eine Bestätigung).</p>

<pre class="Syntax">
<span class="func">PostMessage</span>, MldNummer <span class="optional">, wParam, lParam, Steuerelement, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span>
<span class="func">SendMessage</span>, MldNummer <span class="optional">, wParam, lParam, Steuerelement, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText, Zeitlimit</span>
</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>MldNummer</dt>
  <dd><p>Die zu sendende Meldungsnummer. Kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein. Einige solcher Nummern finden Sie unter <a href="../misc/SendMessageList.htm">Windows-Meldungen</a>.</p></dd>

  <dt>wParam</dt>
  <dd><p>Wenn leer oder weggelassen, wird 0 gesendet. Andernfalls geben Sie die erste Komponente der Meldung an. Kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p></dd>

  <dt>lParam</dt>
  <dd><p>Wenn leer oder weggelassen, wird 0 gesendet. Andernfalls geben Sie die zweite Komponente der Meldung an. Kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p></dd>

  <dt>Steuerelement</dt>
  <dd><p>Wenn leer oder weggelassen, wird die Meldung direkt an das Zielfenster gesendet, nicht an eines seiner Steuerelemente. Andernfalls geben Sie entweder die ClassNN-Bezeichnung (Klassenname und Instanznummer des Steuerelements) oder den Text des Steuerelements an, die beide mit dem internen Tool "Window Spy" ermittelt werden können. Wenn Text verwendet wird, ist das Übereinstimmungsverhalten abhängig von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>.</p>
    <p>Um mit dem Fensterhandle (HWND) eines Steuerelements zu arbeiten, lassen Sie den <em>Steuerelement</em>-Parameter leer und übergeben Sie <code class="no-highlight">ahk_id %StrlmntHwnd%</code> als <em>FensterTitel</em>-Parameter (funktioniert auch bei versteckten Steuerelementen, selbst wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> ausgeschaltet ist). Die HWND-Nummer eines Steuerelements kann üblicherweise via <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a> oder <a href="DllCall.htm">DllCall()</a> abgerufen werden.</p>
    </dd>

  <dt>FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</dt>
  <dd>
    <p>Wenn jeder dieser Parameter leer ist oder weggelassen wird, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a> verwendet. Andernfalls geben Sie für <em>FensterTitel</em> einen <a href="../misc/WinTitle.htm">Fenstertitel oder andere Kriterien</a> zur Identifizierung des Zielfensters und/oder für <em>FensterText</em> eine Teilzeichenkette aus einem Textelement des Zielfensters an (Textelemente können mit dem internen Tool "Window Spy" in Erfahrung gebracht werden).</p>
    <p><em>AusnahmeTitel</em> und <em>AusnahmeText</em> können verwendet werden, um ein oder mehrere Fenster anhand ihres Titels oder Textes auszuschließen. Ihre Angabe ähnelt der von <em>FensterTitel</em> und <em>FensterText</em>, außer dass <em>AusnahmeTitel</em> keine anderen Kriterien als den Fenstertitel erkennt.</p>
    <p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Standardmäßig werden versteckte Fenster nicht erkannt und versteckte Textelemente erkannt, was mit <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> und <a href="DetectHiddenText.htm">DetectHiddenText</a> geändert werden kann. Standardmäßig muss ein Fenstertitel mit dem angegebenen <em>FensterTitel</em> oder <em>AusnahmeTitel</em> beginnen, um eine Übereinstimmung zu sein, was mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> geändert werden kann.</p>
  </dd>

  <dt>Zeitlimit <span class="ver">[AHK_L 42+]</span></dt>
  <dd><p>Wenn leer oder weggelassen, wird standardmäßig 5000 verwendet, was dem Standardverhalten in älteren Versionen von AutoHotkey entspricht, die diesen Parameter nicht unterstützen. Andernfalls geben Sie die maximale Wartezeit in Millisekunden an, die dem Zielfenster zur Verfügung steht, um die Meldung zu verarbeiten. Wenn die Meldung innerhalb dieser Zeit nicht verarbeitet wurde, wird der Befehl beendet und ErrorLevel auf das Wort FAIL gesetzt. Geben Sie 0 an, um unendlich lang zu warten. Eine negative Zahl bewirkt, dass SendMessage sofort das Zeitlimit überschreitet. Dieser Parameter kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p></dd>

</dl>

<h2 id="ErrorLevel">ErrorLevel</h2>
<p><span class="ver">[v1.1.04+]</span>: Diese Befehle sind in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p>PostMessage: <a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn ein Problem aufgetreten ist, z.B. wenn das Zielfenster oder Steuerelement nicht existiert. Andernfalls wird es auf 0 gesetzt.</p>
<p>SendMessage: <a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf FAIL gesetzt, wenn ein Problem aufgetreten ist oder der Befehl das Zeitlimit überschritten hat. Andernfalls wird es auf das numerische Ergebnis der Meldung gesetzt, das manchmal eine "Antwort" sein kann, abhängig von der Art der Meldung und ihrem Zielfenster.</p>
<p>Der gültige Wertebereich hängt vom Zielfenster und der aktuell zum Ausführen verwendeten AutoHotkey-Version ab. Wenn eine 32-Bit-Version von AutoHotkey verwendet wird oder wenn das Zielfenster 32-Bit ist, ist das Ergebnis ein vorzeichenloser 32-Bit-Integer zwischen 0 und 4294967295. Wenn eine 64-Bit-Version von AutoHotkey mit einem 64-Bit-Fenster verwendet wird, ist das Ergebnis ein vorzeichenfähiger 64-Bit-Integer zwischen -9223372036854775808 und 9223372036854775807.</p>
<p>Wenn das Ergebnis als vorzeichenfähiger 32-Bit-Integer (ein Wert von -2147483648 bis 2147483648) gedacht ist, kann es wie folgt auf 32-Bit gekürzt und in einen vorzeichenfähigen Wert umgewandelt werden:</p>
<pre>MldAntwort := ErrorLevel &lt;&lt; 32 &gt;&gt; 32</pre>
<p>Diese Umwandlung kann auch in einer 64-Bit-Version von AutoHotkey erforderlich sein, da die Ergebnisse von 32-Bit-Fenstern mit Nullen aufgefüllt werden. Zum Beispiel wird das Ergebnis -1 von einem 32-Bit-Fenster als 0xFFFFFFFF in jeder AutoHotkey-Version gesehen, während das Ergebnis -1 von einem 64-Bit-Fenster als 0xFFFFFFFF in einer 32-Bit-Version von AutoHotkey und als -1 in einer 64-Bit-Version von AutoHotkey gesehen wird.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Seien Sie vorsichtig bei der Verwendung dieser Befehle - das Senden einer Meldung an das falsche Fenster (oder das Senden einer ungültigen Meldung) kann dazu führen, dass die Zielanwendung falsch reagiert oder abstürzt. Die meisten Anwendungen sind nicht dafür ausgelegt, bestimmte Arten von Meldungen aus externen Quellen zu empfangen.</p>
<p>PostMessage platziert die Meldung in die Meldungswarteschlange des Zielfensters, ohne auf eine Bestätigung oder Antwort zu warten. SendMessage hingegen wartet, bis das Zielfenster die Meldung verarbeitet hat oder bis das Zeitlimit überschritten wurde.</p>
<p>Die <em>wParam</em>- und <em>lParam</em>-Parameter müssen Integer sein. Wenn AutoHotkey oder das Zielfenster 32-Bit ist, werden nur die unteren 32 Bits verwendet, d.h. der Wert muss zwischen -2147483648 und 4294967295 (0xFFFFFFFF) liegen. Wenn sowohl AutoHotkey als auch das Zielfenster 64-Bit sind, kann ein beliebiger <a href="../Variables.htm#cap">von AutoHotkey unterstützter</a> Integerwert verwendet werden. Wie bei allen Integerwerten in AutoHotkey kennzeichnet ein 0x-Präfix einen hexadezimalen Wert. Zum Beispiel ist 0xFF äquivalent zu 255.</p>
<p>Es ist möglich, eine Zeichenkette via <em>wParam</em> oder <em>lParam</em> zu senden, indem die Adresse einer Variable angegeben wird. Verwenden Sie dafür den <a href="../Variables.htm#amp">Adressoperator (&amp;)</a>. Zum Beispiel:</p>
<pre>SendMessage, 0x000C, 0, <strong>&amp;MeineVar</strong>, ClassNN, FensterTitel  <em>; 0x000C ist WM_SETTEXT</em></pre>
<p><span class="ver">[v1.0.43.06+]</span>: Eine Zeichenkette in <em>MeineVar</em>, die vom Empfänger der Meldung eingefügt wurde, wird korrekt erkannt, ohne dass zusätzliche Schritte erforderlich sind. Diese Erkennung funktioniert allerdings nur, wenn das erste Zeichen des Parameters ein Und-Zeichen (&amp;) ist; z.B. würde <code>&amp;MeineVar</code> oder <code>&amp;MeineVar+5</code> funktionieren, aber nicht <code>5+&amp;MeineVar</code>.</p>
<p>Es kann auch eine direkt geschriebene bzw. in Anführungszeichen gesetzte Zeichenkette gesendet werden (in diesem Fall muss der &amp;-Operator weggelassen werden):</p>
<pre>#Persistent
ListVars
WinWaitActive, ahk_class AutoHotkey
SendMessage, 0x000C, 0, "<strong>Neuer Titel</strong>"  <em>; 0x000C ist WM_SETTEXT</em></pre>
<p>Um eine Meldung an alle Fenster im Betriebssystem zu senden - auch an solche, die versteckt oder deaktiviert sind - fügen Sie <code class="no-highlight">ahk_id 0xFFFF</code> in <em>FensterTitel</em> ein (0xFFFF ist HWND_BROADCAST). Diese Technik sollte nur für Meldungen verwendet werden, die zum Broadcasten geeignet sind, wie zum Beispiel:</p>
<pre>SendMessage, 0x001A,,,, ahk_id 0xFFFF  <em>; 0x001A ist WM_SETTINGCHANGE</em></pre>
<p>Mit <a href="OnMessage.htm">OnMessage()</a> kann ein Skript eine Meldung abfangen.</p>
<p>Eine Erklärung zur Verwendung dieser Befehle finden Sie unter <a href="../misc/SendMessage.htm">PostMessage / SendMessage Tutorial</a>.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="../misc/SendMessageList.htm">Meldungsliste</a>, <a href="../misc/SendMessage.htm">PostMessage / SendMessage Tutorial</a>, <a href="OnMessage.htm">OnMessage()</a>, <a href="../misc/Winamp.htm">Winamp automatisieren</a>, <a href="DllCall.htm">DllCall()</a>, <a href="ControlSend.htm">ControlSend</a>, <a href="WinMenuSelectItem.htm">WinMenuSelectItem</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExMonitorPower">
<p><a class="ex_number" href="#ExMonitorPower"></a> Schaltet den Bildschirm via Hotkey aus. Ersetzen Sie in der SendMessage-Zeile die Zahl 2 mit -1, um den Bildschirm einzuschalten, oder ersetzen Sie sie mit 1, um den Energiesparmodus des Bildschirms zu aktivieren.</p>
<pre>#o:: <em>; WIN+O</em>
Sleep 1000  <em>; Dem Benutzer die Chance geben, die Tasten loszulassen (falls ihr Loslassen den Bildschirm wieder aufweckt).
; Bildschirm ausschalten:</em>
SendMessage, 0x0112, 0xF170, 2,, Program Manager  <em>; 0x0112 ist WM_SYSCOMMAND, 0xF170 ist SC_MONITORPOWER.</em>
return</pre>
</div>

<div class="ex" id="ExScreenSave">
<p><a class="ex_number" href="#ExScreenSave"></a> Startet den vom Benutzer eingestellten Bildschirmschoner.</p>
<pre>SendMessage, 0x0112, 0xF140, 0,, Program Manager  <em>; 0x0112 ist WM_SYSCOMMAND und 0xF140 ist SC_SCREENSAVE.</em></pre>
</div>

<div class="ex" id="ExVScrollUp">
<p><a class="ex_number" href="#ExVScrollUp"></a> Scrollt eine Zeile nach oben (bei einem Steuerelement mit vertikalem Scrollbalken).</p>
<pre>ControlGetFocus, Steuerelement, A
SendMessage, 0x0115, 0, 0, %Steuerelement%, A</pre>
</div>

<div class="ex" id="ExVScrollDown">
<p><a class="ex_number" href="#ExVScrollDown"></a> Scrollt eine Zeile nach unten (bei einem Steuerelement mit vertikalem Scrollbalken).</p>
<pre>ControlGetFocus, Steuerelement, A
SendMessage, 0x0115, 1, 0, %Steuerelement%, A</pre>
</div>

<div class="ex" id="ExSwitchKeybLang">
<p><a class="ex_number" href="#ExSwitchKeybLang"></a> Schaltet die Tastaturbelegung/Sprache des aktiven Fensters auf Englisch (US) um.</p>
<pre>PostMessage, 0x0050, 0, 0x4090409,, A  <em>; 0x0050 ist WM_INPUTLANGCHANGEREQUEST.</em></pre>
</div>

<div class="ex" id="ExWinamp">
<p><a class="ex_number" href="#ExWinamp"></a> Fragt Winamp, welche Titelnummer gerade aktiv ist (weitere Informationen finden Sie unter <a href="../misc/Winamp.htm">Winamp automatisieren</a>).</p>
<pre>SetTitleMatchMode, 2
SendMessage, 0x0400, 0, 120,, - Winamp
if (ErrorLevel != "FAIL")
{
    ErrorLevel++  <em>; Die Zählung von Winamp beginnt bei "0", also um 1 erhöhen.</em>
    MsgBox, Titel Nr. %ErrorLevel% ist aktiv oder wird gerade abgespielt.
}</pre>
</div>

<div class="ex" id="ExPID">
<p><a class="ex_number" href="#ExPID"></a> Ruft die Prozess-ID eines AHK-Skripts ab (eine Alternative zu <a href="WinGet.htm">WinGet PID</a>).</p>
<pre>SetTitleMatchMode, 2
DetectHiddenWindows, On
SendMessage, 0x0044, 0x405, 0, , BeliebigesSkript.ahk - AutoHotkey v
MsgBox %ErrorLevel% ist die Prozess-ID.</pre>
</div>

</body>
</html>
