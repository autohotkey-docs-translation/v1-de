<!DOCTYPE HTML>
<html lang="de">
<head>
<title>PixelSearch - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der PixelSearch-Befehl sucht in einem bestimmten Bildschirmbereich nach einem Pixel, das eine bestimmte Farbe hat." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>PixelSearch</h1>

<p>Sucht in einem bestimmten Bildschirmbereich nach einem Pixel, das eine bestimmte Farbe hat.</p>

<pre class="Syntax"><span class="func">PixelSearch</span>, AusgabeVarX, AusgabeVarY, X1, Y1, X2, Y2, FarbeID <span class="optional">, Variation, Modus</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVarX, AusgabeVarY</dt>
  <dd><p>Namen der Ausgabevariablen, in denen die X- und Y-Koordinate des ersten Pixels, das die Farbe <em>FarbeID</em> hat, gespeichert werden sollen (wenn das Pixel nicht gefunden wird, werden diese Variablen leer gemacht). Standardmäßig sind Koordinaten relativ zum aktiven Fenster, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
    <p>Einer oder beide dieser Parameter können leer gelassen werden - in diesem Fall kann mit ErrorLevel (siehe unten) festgestellt werden, ob eine Übereinstimmung gefunden wurde.</p></dd>

  <dt>X1, Y1</dt>
  <dd><p>Die X- und Y-Koordinate einer Ecke des rechteckigen Suchbereichs, die den Startpunkt der Suche kennzeichnet (können <a href="../Variables.htm#Expressions">Ausdrücke</a> sein). Standardmäßig sind Koordinaten relativ zum aktiven Fenster, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p></dd>

  <dt>X2, Y2</dt>
  <dd><p>Die X- und Y-Koordinate einer Ecke des rechteckigen Suchbereichs, die den Endpunkt der Suche kennzeichnet (können <a href="../Variables.htm#Expressions">Ausdrücke</a> sein). Standardmäßig sind Koordinaten relativ zum aktiven Fenster, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p></dd>

  <dt>FarbeID</dt>
  <dd><p>Die dezimale oder hexadezimale ID der Farbe, die gesucht werden soll, standardmäßig im Blau-Grün-Rot-Format (BGR). Kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein. Farb-IDs können mit dem Tool "Window Spy" (erreichbar über das Tray-Menü) oder via <a href="PixelGetColor.htm">PixelGetColor</a> ermittelt werden. Zum Beispiel: <code>0x9d6346</code>.</p></dd>

  <dt>Variation</dt>
  <dd><p>Wenn leer oder weggelassen, wird standardmäßig 0 verwendet. Andernfalls geben Sie eine Zahl im Bereich von 0 bis 255 an, um die erlaubte Anzahl von Variationsnuancen in beide Richtungen für die Intensität der Rot-, Grün- und Blauanteile der Farbe zu bestimmen (kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein). Wenn z.B. 2 angegeben ist und <em>FarbeID</em> 0x444444 ist, wird jede Farbe von 0x424242 bis 0x464646 als Übereinstimmung angesehen. Dieser Parameter hilft bei variierenden Pixelfarben. Wenn Sie 255 Variationsnuancen angeben, werden alle Farben übereinstimmen.</p></dd>

  <dt>Modus</dt>
  <dd><p>Wenn leer oder weggelassen, wird <em>FarbeID</em> als BGR-Wert interpretiert und der langsame Suchmodus verwendet. Andernfalls geben Sie eines oder mehrere der folgenden Wörter an. Mehrere Wörter müssen mit Leerzeichen voneinander getrennt werden (z.B. <code class="no-highlight">Fast RGB</code>).</p>
      <p id="fast"><strong>Fast:</strong> Eine schnellere Suchmethode, die die CPU-Belastung durch PixelSearch in den meisten Fällen drastisch reduziert. Obwohl Farbtiefen bis runter zu 8-Bit (256 Farben) unterstützt werden, ist der schnelle Modus bei 24-Bit- oder 32-Bit-Farben deutlich performanter. Wenn die Farbtiefe des Bildschirms 16-Bit oder niedriger ist, kann sich der <em>Variation</em>-Parameter im schnellen Modus etwas anders verhalten als im langsamen Modus. Außerdem durchsucht der schnelle Modus den Bereich zeilenweise, nicht spaltenweise. Daher kann es sein, dass bei mehreren Übereinstimmungen ein anderes Pixel gefunden wird als im langsamen Modus.</p>
      <p class="warning"><strong>Warnung:</strong> Der standardmäßig verwendete langsame Modus ist auf den meisten modernen Systemen wegen Inkompatibilität mit der Desktopgestaltung unbrauchbar und daher um ein Vielfaches langsamer.</p>
      <p><strong>RGB:</strong> <em>FarbeID</em> wird als RGB- statt BGR-Wert interpretiert. Mit anderen Worten, die Rot- und Blauanteile sind vertauscht.</p></dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, eine Ausnahme auszulösen, wenn während der Suche ein Problem auftritt. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 0 gesetzt, wenn die Farbe im angegebenen Bereich gefunden wurde, auf 1, wenn sie nicht gefunden wurde, oder auf 2, wenn der Befehl die Suche aufgrund eines Problems nicht durchführen konnte.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Der Suchbereich muss sichtbar sein, d.h. es ist nicht möglich, einen Bereich in einem Fenster zu durchsuchen, das hinter einem anderen Fenster verborgen ist. Dagegen werden Pixel unter dem Mauszeiger in der Regel erkannt. Eine Ausnahme bilden die Mauszeiger von Videospielen, die in den meisten Fällen alle darunter liegenden Pixel verdecken.</p>
<p>Die Suchrichtung hängt von der Anordnung der Parameter ab. Mit anderen Worten: Wenn <em>X1</em> größer als <em>X2</em> ist, wird die Suche von rechts nach links durchgeführt, beginnend bei Spalte <em>X1</em>. Entsprechend wird, wenn <em>Y1</em> größer als <em>Y2</em> ist, die Suche von unten nach oben durchgeführt. Vor <span class="ver">[v1.1.32]</span> setzt der schnelle Modus voraus, dass <em>X1</em> und <em>Y1</em> die linke obere Ecke sein muss.</p>
<p>Schneller Modus: PixelSearch startet bei den Koordinaten <em>X1</em> und <em>Y1</em> und sucht in der Zeile von <em>X1</em> bis <em>X2</em> nach einer Übereinstimmung. Wenn es keine Übereinstimmung findet, sucht es zeilenweise in Richtung <em>Y2</em> weiter, bis es das Pixel gefunden hat.</p>
<p>Langsamer Modus: PixelSearch startet bei den Koordinaten <em>X1</em> und <em>Y1</em> und sucht in der Spalte von <em>Y1</em> bis <em>Y2</em> nach einer Übereinstimmung. Wenn es keine Übereinstimmung findet, sucht es spaltenweise in Richtung <em>X2</em> weiter, bis es das Pixel gefunden hat.</p>
<p>Wenn der Suchbereich groß ist und die Suche mit hoher Frequenz wiederholt wird, kann es zu einer hohen CPU-Belastung kommen. Um dem entgegenzuwirken, sollte die Größe des Suchbereichs auf ein Minimum beschränkt werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="PixelGetColor.htm">PixelGetColor</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Sucht in einem bestimmten Bereich des aktiven Fensters nach einem Pixel und setzt <em>Px</em> und <em>Py</em> auf die X- und Y-Koordinate des ersten Pixels, das mit der angegebenen Farbe innerhalb von 3 Variationsnuancen übereinstimmt.</p>
<pre>PixelSearch, Px, Py, 200, 200, 300, 300, 0x9d6346, 3, Fast
if ErrorLevel
    MsgBox, Die Farbe konnte im angegebenen Bereich nicht gefunden werden.
else
    MsgBox, Eine Farbe innerhalb von 3 Variationsnuancen wurde auf X%Px% Y%Py% gefunden.</pre>
</div>

</body>
</html>
