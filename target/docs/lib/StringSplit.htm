<!DOCTYPE HTML>
<html lang="de">
<head>
<title>StringSplit - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der StringSplit-Befehl teilt eine Zeichenkette mittels bestimmter Trennzeichen in mehrere Teilzeichenketten auf." />
<meta name="ahk:equiv-v2" content="lib/StrSplit.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>StringSplit</h1>
<p>Teilt eine Zeichenkette mittels bestimmter Trennzeichen in mehrere Teilzeichenketten auf.</p>
<p class="warning"><span class="ver">[v1.1.13+]</span>: <strong>Veraltet:</strong> Dieser Befehl ist nicht für neue Skripte empfohlen. Verwenden Sie stattdessen die <a href="StrSplit.htm">StrSplit</a>-Funktion.</p>
<pre class="Syntax"><span class="func">StringSplit</span>, AusgabeArray, EingabeVar <span class="optional">, Trennzeichen, ZuEntfernendeZeichen</span></pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeArray</dt>
  <dd>
    <p>Name des <a href="../misc/Arrays.htm#pseudo">Pseudo-Arrays</a>, in dem jede aus <em>EingabeVar</em> extrahierte Teilzeichenkette gespeichert werden soll. Wenn zum Beispiel MeinArray angegeben ist, wird der Befehl die Anzahl der erzeugten Teilzeichenketten (andernfalls 0) in MeinArray0 speichern, die erste Teilzeichenkette in MeinArray1, die zweite in MeinArray2 usw.</p>
    <p>Um ein Pseudo-Array innerhalb einer <a href="../Functions.htm">Funktion</a> global statt lokal zu machen, <a href="../Functions.htm#Global">deklarieren</a> Sie MeinArray0 als globale Variable, bevor Sie diesen Befehl verwenden (für <a href="../Functions.htm#AssumeGlobal">Assume-Global</a>-Funktionen gilt das Gegenteil). Oft ist es auch notwendig, jedes Element dieses Pseudo-Arrays einzeln zu deklarieren, da ein <a href="../Functions.htm#ArrayConfusion">häufiger Anlass zu Verwirrung</a> vorliegt. Weitere Informationen finden Sie unter <a href="../Functions.htm#PseudoArrays">Funktionen</a>.</p>
  </dd>

  <dt>EingabeVar</dt>
  <dd>
    <p>Name der Eingabevariable, deren Inhalt geparst werden soll. Umschließen Sie den Namen nicht mit Prozentzeichen, es sei denn, Sie wollen den Inhalt der Variable als Namen verwenden.</p>
    <p class="note"><strong>Hinweis:</strong> <em>EingabeVar</em> darf keine Variable von <em>AusgabeArray</em> sein.</p>
  </dd>

  <dt>Trennzeichen</dt>
  <dd>
    <p>Wenn leer oder weggelassen, wird jedes Zeichen in <em>EingabeVar</em> als einzelne Teilzeichenkette behandelt.</p>
    <p>Andernfalls geben Sie ein oder mehrere Zeichen an (Groß-/Kleinschreibung-sensitiv), die jeweils zur Abgrenzung der Teilzeichenketten in <em>EingabeVar</em> verwendet werden. Da die Trennzeichen nicht als Teil der Teilzeichenketten betrachtet werden, werden sie nie in das <em>AusgabeArray</em> kopiert. Wenn sich zwischen zwei Trennzeichen in <em>EingabeVar</em> nichts befindet, wird das entsprechende Array-Element leer sein.</p>
    <p>Zum Beispiel: <code class="no-highlight">`,</code> (ein escapezeichenversehenes Komma) würde die Zeichenkette an jedem Komma teilen, während <code class="no-highlight">%A_Space%%A_Tab%</code> ein neues Array-Element an jedem Leer- oder Tabulatorzeichen in <em>EingabeVar</em> erstellen würde.</p>
    <p>Um eine Zeichenkette anstelle eines Zeichens als Trennung zu verwenden, verwenden Sie zunächst <a href="StrReplace.htm">StrReplace()</a> oder <a href="StringReplace.htm">StringReplace</a>, um alle Vorkommen der Zeichenkette mit einem einzelnen Zeichen zu ersetzen, das nie im Text vorkommt, wie zum Beispiel: <code class="no-highlight">¢¤¥¦§©ª«®µ¶</code>. Das folgende Beispiel zeigt, wie die Zeichenkette &lt;br&gt; als Trennung verwendet werden kann:</p>
<pre>StringReplace, NeueHTML, HTMLZkette, &lt;br&gt;, ``, All  <em>; Ersetzt jedes &lt;br&gt; mit einem umgekehrten Häkchen.</em>
StringSplit, MeinArray, NeueHTML, ``  <em>; Teilt die Zeichenkette jeweils bei einem umgekehrten Häkchen.</em></pre>
    <p>In <span class="ver">[v1.1.13+]</span> kann stattdessen <code>MeinArray := <a href="StrSplit.htm">StrSplit</a>(HTMLZkette, "&lt;br&gt;")</code> verwendet werden.</p>
  </dd>

  <dt>ZuEntfernendeZeichen</dt>
  <dd>
    <p>Wenn leer oder weggelassen, werden keine Zeichen entfernt. Andernfalls geben Sie eine Liste von Zeichen an (Groß-/Kleinschreibung-sensitiv), die am Anfang und Ende jedes Array-Elements entfernt werden sollen. Wenn <em>ZuEntfernendeZeichen</em> z.B. <code class="no-highlight">%A_Space%%A_Tab%</code> ist, werden Leer- und Tabulatorzeichen am Anfang und Ende (aber nicht in der Mitte) jedes abgerufenen Elements entfernt.</p>
    <p>Wenn <em>Trennzeichen</em> leer ist oder weggelassen wird, gibt <em>ZuEntfernendeZeichen</em> die Zeichen an, die das Array nicht enthalten soll.</p>
    <p>Im Gegensatz zum letzten Parameter der meisten anderen Befehle müssen Kommas in <em>ZuEntfernendeZeichen</em> mit einem Escapezeichen versehen werden (<code class="no-highlight">`,</code>).</p>
  </dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Wenn die Array-Elemente bereits existieren, wird der Befehl nur die Werte der ersten N Elemente ändern, wobei N die Anzahl der Teilzeichenketten in <em>EingabeVar</em> ist. Alle bereits existierenden Elemente nach N bleiben unverändert. Daher ist es am sichersten, das Null-Element (MeinArray0) zu verwenden, um zu ermitteln, wie viele Elemente tatsächlich mit diesem Befehl erzeugt wurden.</p>
<p>Leerraumzeichen wie Leer- und Tabulatorzeichen bleiben erhalten, es sei denn, diese Zeichen sind selbst Trennzeichen oder in <em>ZuEntfernendeZeichen</em> angegeben. Um Leer- und Tabulatorzeichen an beiden Enden einer Variable zu entfernen, machen Sie eine Selbstzuweisung, während <a href="AutoTrim.htm">AutoTrim</a> aktiv ist (Standardeinstellung). Zum Beispiel: <code>MeinArray1 = %MeinArray1%</code>.</p>
<p>Zum Splitten einer Zeichenkette im regulären CSV-Format (Comma Separated Values, dt. kommagetrennte Werte) können Sie eine <a href="LoopParse.htm">parsende Schleife</a> verwenden, da diese nativ mit CSV umgehen kann.</p>
<p>Um die Felder vor dem Splitten anders anzuordnen, verwenden Sie den <a href="Sort.htm">Sort</a>-Befehl.</p>
<p>Wenn die Teilzeichenketten nur temporär benötigt werden, ist es ratsam, eine <a href="LoopParse.htm">parsende Schleife</a> zu verwenden, insbesondere wenn <em>EingabeVar</em> sehr groß ist, da in diesem Fall viel Arbeitsspeicher gespart werden kann. Zum Beispiel:</p>
<pre>Farben := "rot,grün,blau"
Loop, Parse, Farben, `,
    MsgBox Farbe Nr. %A_Index% ist %A_LoopField%.</pre>

<h2 id="Related">Siehe auch</h2>
<p><a href="StrSplit.htm">StrSplit()</a>, <a href="LoopParse.htm">parsende Schleife</a>, <a href="../misc/Arrays.htm">Arrays</a>, <a href="Sort.htm">Sort</a>, <a href="SplitPath.htm">SplitPath</a>, <a href="IfInString.htm">IfInString</a>, <a href="StringGetPos.htm">StringGetPos</a>, <a href="StringMid.htm">StringMid</a>, <a href="StringTrimLeft.htm">StringTrimLeft</a>, <a href="StringTrimLeft.htm">StringTrimRight</a>, <a href="StringLen.htm">StringLen</a>, <a href="StringLower.htm">StringLower</a>, <a href="StringLower.htm">StringUpper</a>, <a href="StringReplace.htm">StringReplace</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExSpace">
<p><a class="ex_number" href="#ExSpace"></a> Splittet einen Satz in ein Array von Wörtern und meldet das vierte Wort.</p>
<pre>TestZkette := "Das ist ein Test."
StringSplit, wort_array, TestZkette, %A_Space%, .  <em>; Entfernt Punkte.</em>
MsgBox, Das vierte Wort ist %wort_array4%.</pre>
</div>

<div class="ex" id="ExComma">
<p><a class="ex_number" href="#ExComma"></a> Splittet eine kommagetrennte Liste von Farben in ein Array von Teilzeichenketten und geht diese einzeln durch.</p>
<pre>Farben := "rot,grün,blau"
StringSplit, FarbenArray, Farben, `,
Loop, %FarbenArray0%
{
    diese_Farbe := FarbenArray%A_Index%
    MsgBox, Farbe Nr. %A_Index% ist %diese_Farbe%.
}</pre>
</div>

</body>
</html>
