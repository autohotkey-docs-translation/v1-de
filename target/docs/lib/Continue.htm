<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Continue - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Die Continue-Anweisung überspringt den Rest der aktuellen Wiederholung einer Schleifenanweisung und beginnt eine neue." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Continue</h1>
<p>Überspringt den Rest der aktuellen Wiederholung einer <a href="../Language.htm#loop-statement">Schleifenanweisung</a> und beginnt eine neue.</p>
<pre class="Syntax"><span class="func">Continue</span> <span class="optional">, LoopLabel</span></pre>

<h2 id="Parameters">Parameter</h2>
<dl>
  <dt>LoopLabel <span class="ver">[AHK_L 59+]</span></dt>
  <dd>Wenn weggelassen oder 1, gilt diese Anweisung für die innerste Schleife, von der die Anweisung umschlossen ist. Andernfalls geben Sie an, für welche Schleife diese Anweisung gelten soll; entweder der <a href="../misc/Labels.htm">Name eines Labels</a> oder die Nummer einer Verschachtelungsebene. <em>LoopLabel</em> muss ein konstanter Wert sein – Variablen und Ausdrücke werden nicht unterstützt. Wenn ein <a href="../misc/Labels.htm">Label</a> angegeben ist, muss es direkt auf eine <a href="../Language.htm#loop-statement">Schleifenanweisung</a> verweisen.</dd>
</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Continue ist dem Verhalten nach das gleiche wie, als würde das Skript die geschweifte Endklammer einer Schleife erreichen:</p>
<ol>
  <li><a href="../Variables.htm#Index">A_Index</a> wird um 1 erhöht.</li>
  <li>Der Rest des Schleifenkörpers wird übersprungen.</li>
  <li>Die Bedingung der Schleife (falls vorhanden) wird überprüft, ob sie erfüllt ist. Ist dies der Fall, beginnt eine neue Wiederholung, andernfalls endet die Schleife.</li>
</ol>
<p>Es ist ratsam, <a href="Break.htm">Break</a> und Continue anstelle von <a href="Goto.htm">Goto</a> zu verwenden, da sie in der Regel die Lesbarkeit und Wartbarkeit eines Skripts verbessern.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="Break.htm">Break</a>, <a href="Loop.htm">Loop</a>, <a href="Until.htm">Until</a>, <a href="While.htm">While-Schleife</a>, <a href="For.htm">For-Schleife</a>, <a href="Block.htm">Blöcke</a>, <a href="../misc/Labels.htm">Labels</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Zeigt 5 Mitteilungsfenster an, eines für jede Zahl von 6 bis 10. Die Continue-Anweisung in den ersten 5 Wiederholungen bewirkt, dass die MsgBox-Zeile darunter übersprungen wird.</p>
<pre>Loop, 10
{
    if (A_Index &lt;= 5)
        continue
    MsgBox %A_Index%
}</pre>
</div>

<div class="ex" id="ExContinueOuter">
<p><a class="ex_number" href="#ExContinueOuter"></a> Überspringt von einer inneren Schleife heraus den Durchlauf der äußeren Schleife.</p>
<pre>outer:
Loop 3
{
    x := A_Index
    Loop 3
    {
        if (x*A_Index = 4)
            continue outer  <em>; Äquivalent zu <b>continue 2</b> oder <b>goto continue_outer</b>.</em>
        MsgBox %x%,%A_Index%
    }
    continue_outer: <em>; Für goto.</em>
    ErrorLevel:=ErrorLevel <em>; Vor Revision 57 konnten Labels nicht auf das Ende eines Blocks verweisen.</em>
}</pre>
</div>

</body>
</html>
