<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Neue Features von AutoHotkey_L | AutoHotkey v1</title>
<meta name="description" content='Erfahren Sie mehr über die neuen Features des AutoHotkey_L-Entwicklungszweigs von AutoHotkey, jetzt bekannt als "AutoHotkey 1.1".' />
<meta name="ahk:equiv-v2" content="index.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<script src="static/content.js" type="text/javascript"></script>
<script src="static/ga4.js" type="text/javascript"></script>
</head>
<body><h1>Neue Features von AutoHotkey_L</h1>

<p>Dieses Dokument beschreibt Features, die zum AutoHotkey_L-Entwicklungszweig von AutoHotkey, jetzt bekannt als "AutoHotkey 1.1", hinzugefügt wurden.</p>
<p class="warning"><strong>Achtung:</strong> Dieses Dokument wurde in den letzten Jahren vernachlässigt. Es ist daher möglich, dass einige der neueren Änderungen nicht enthalten sind.</p>

<h2 id="flow">Kontrollfluss</h2>
<table class="info">
<tr>
  <th>Feature</th>
  <th abbr="Beschr">Beschreibung</th>
</tr>
<tr><td><a href="lib/Break.htm">Break <i>LoopLabel</i></a></td><td>Unterbricht von einer inneren Schleife heraus eine äußere Schleife.</td></tr>
<tr><td><a href="lib/Continue.htm">Continue <i>LoopLabel</i></a></td><td>Überspringt von einer inneren Schleife heraus den aktuellen Durchlauf der äußeren Schleife.</td></tr>
<tr><td><a href="lib/For.htm">For <i>x</i>,<i>y</i> in <i>z</i></a></td><td>Durchläuft den Inhalt eines Objekts.</td></tr>
<tr><td><a href="lib/Until.htm">Loop Until</a></td><td>Wiederholt Anweisungen, bis eine Bedingung wahr ist. Anwendbar auf jede Schleifenvariante.</td></tr>
<tr><td><a href="lib/Try.htm">Try</a>...<a href="lib/Catch.htm">Catch</a>...<a href="lib/Finally.htm">Finally</a></td><td>Ermöglicht eine strukturierte Ausnahmebehandlung.</td></tr>
<tr><td><a href="lib/Throw.htm">Throw</a></td><td>Löst eine Ausnahme aus.</td></tr>
</table>

<h2 id="commands">Befehle</h2>
<table class="info">
<tr>
  <th>Feature</th>
  <th abbr="Beschr">Beschreibung</th>
</tr>
<tr><td><a href="lib/FileEncoding.htm">FileEncoding</a></td><td>Bestimmt die Standardkodierung für <a href="lib/FileRead.htm">FileRead</a>, <a href="lib/FileReadLine.htm">FileReadLine</a>, <a href="lib/LoopReadFile.htm">Loop Read</a>, <a href="lib/FileAppend.htm">FileAppend</a> und <a href="lib/FileOpen.htm">FileOpen()</a>.<br><i>Siehe auch:</i> <a href="#enc">Textkodierungen</a></td></tr>
<tr><td><a href="lib/Gui.htm">Gui</a></td><td>Siehe <a href="#GUI_Enhancements">GUI-Erweiterungen</a> weiter unten.</td></tr>
<tr><td><a href="lib/IniRead.htm">IniRead</a>/<a href="lib/IniWrite.htm">Write</a>/<a href="lib/IniDelete.htm">Delete</a></td><td>Liest, schreibt oder löscht ganze Sektionen, oder ruft eine Liste aller Sektionsnamen ab.</td></tr>
<tr><td><a href="lib/Menu.htm#MenuIcon">Menu, Icon</a></td><td>Setzt oder entfernt das Symbol eines Menüpunkts.</td></tr>
<tr><td><a href="lib/Run.htm">Run</a></td><td><a href="Compat.htm#Run">Verbesserungen</a> hinsichtlich dessen, wie Parameter geparst werden.</td></tr>
<tr><td><a href="lib/Send.htm#Unicode">SendInput {U+nnnn}</a></td><td>Sendet ein Unicode-Zeichen. Unicode-Zeichen können direkt in Unicode-Builds verwendet werden.</td></tr>
<tr><td><a href="lib/SendLevel.htm">SendLevel</a></td><td>Bestimmt, welche künstlichen Tastatur- oder Mausereignisse von Hotkeys und Hotstrings ignoriert werden.</td></tr>
<tr><td><a href="lib/SetFormat.htm">SetFormat, IntegerFast, h|H</a></td><td>Bestimmt, ob das Hexadezimalformat klein- oder großgeschrieben wird.</td></tr>
<tr><td><a href="lib/SetRegView.htm">SetRegView, RegAnsicht</a></td><td>Ermöglicht Registry-Befehlen in einem 32-Bit-Skript den Zugriff auf die 64-Bit-Registry-Ansicht und umgekehrt.</td></tr>
<tr><td><a href="lib/Transform.htm#HTML">Transform, HTML</a></td><td>Führt Codepage- oder HTML-Umwandlungen durch.</td></tr>
<tr><td><a href="lib/WinGet.htm#ProcessPath">WinGet, ..., ProcessPath</a></td><td>Ruft den kompletten Pfad und Namen des Prozesses eines Fensters ab.</td></tr>
</table>

<h2 id="directives">Direktiven</h2>
<table class="info">
<tr>
  <th>Feature</th>
  <th abbr="Beschr">Beschreibung</th>
</tr>
<tr><td><a href="lib/_If.htm">#If <i>Ausdruck</i></a></td><td>Vergleichbar mit <a href="lib/_IfWinActive.htm">#IfWinActive</a>, aber für beliebige Ausdrücke.</td></tr>
<tr><td><a href="lib/_IfTimeout.htm">#IfTimeout</a></td><td>Bestimmt die maximale Zeit, die zur Auswertung eines einzelnen #If-Ausdrucks aufgebracht wird.</td></tr>
<tr><td><a href="lib/_MenuMaskKey.htm">#MenuMaskKey</a></td><td>Ändert die Taste, mit der Win- oder Alt-Taste-Oben-Ereignisse maskiert werden.</td></tr>
<tr><td><a href="lib/_Include.htm">#Include &lt;Bibl&gt;</a></td><td>Bindet eine Skriptdatei aus einem Funktionsbibliotheksordner ein.</td></tr>
<tr><td><a href="lib/_InputLevel.htm">#InputLevel</a></td><td>Bestimmt, welche künstlichen Tastatur- oder Mausereignisse von Hotkeys und Hotstrings ignoriert werden.</td></tr>
<tr><td><a href="lib/_Warn.htm">#Warn</a></td><td>Aktiviert oder deaktiviert bestimmte Warnungen, die auf mögliche Fehler vonseiten des Programmierers hinweisen.</td></tr>
</table>

<h2 id="functions">Funktionen</h2>
<table class="info">
<tr>
  <th>Feature</th>
  <th abbr="Beschr">Beschreibung</th>
</tr>
<tr><td><a href="lib/ComObjActive.htm">ComObjActive</a></td><td>Ruft ein registriertes COM-Objekt ab.</td></tr>
<tr><td><a href="lib/ComObjArray.htm">ComObjArray</a></td><td>Erstellt ein SafeArray, das für COM verwendet werden kann.</td></tr>
<tr><td><a href="lib/ComObjConnect.htm">ComObjConnect</a></td><td>Verbindet die Ereignisquellen eines COM-Objekts mit Funktionen, die ein bestimmtes Präfix haben.</td></tr>
<tr><td><a href="lib/ComObjCreate.htm">ComObjCreate</a></td><td>Erstellt ein COM-Objekt.</td></tr>
<tr><td><a href="lib/ComObjActive.htm#ComObject">ComObject</a></td><td>Wrappt einen Wert und Typ zur Übergabe als Parameter oder Rückgabewert.</td></tr>
<tr><td><a href="lib/ComObjActive.htm#ComObjEnwrapUnwrap">ComObjEnwrap/Unwrap</a></td><td>Wrappt/entwrappt ein COM-Objekt.</td></tr>
<tr><td><a href="lib/ComObjError.htm">ComObjError</a></td><td>Aktiviert oder deaktiviert COM-spezifische Fehlermeldungen.</td></tr>
<tr><td><a href="lib/ComObjFlags.htm">ComObjFlags</a></td><td>Ermittelt oder ändert Flags, die das Verhalten eines COM-Wrapper-Objekts kontrollieren.</td></tr>
<tr><td><a href="lib/ComObjGet.htm">ComObjGet</a></td><td>Gibt eine Referenz zu einem Objekt zurück, das von einer COM-Komponente bereitgestellt wird.</td></tr>
<tr><td><a href="lib/ComObjActive.htm#ComObjMissing">ComObjMissing</a></td><td>Erstellt ein Objekt für "fehlende Parameter" zur Übergabe an eine COM-Methode.</td></tr>
<tr><td><a href="lib/ComObjActive.htm#ComObjParameter">ComObjParameter</a></td><td>Wrappt einen Wert und Typ zur Übergabe als Parameter.</td></tr>
<tr><td><a href="lib/ComObjQuery.htm">ComObjQuery</a></td><td>Fragt ein COM-Objekt nach einem Interface oder Service ab.</td></tr>
<tr><td><a href="lib/ComObjType.htm">ComObjType</a></td><td>Ruft Typinformationen eines COM-Objekts ab.</td></tr>
<tr><td><a href="lib/ComObjValue.htm">ComObjValue</a></td><td>Ruft den Wert oder Pointer ab, der in einem COM-Wrapper-Objekt hinterlegt ist.</td></tr>
<tr><td><a href="lib/Throw.htm#Exception">Exception</a></td><td>Erstellt ein Exception-Objekt für <a href="lib/Throw.htm">Throw</a> (und ermöglicht eingeschränkten Zugriff auf die Aufrufliste).</td></tr>
<tr><td><a href="lib/FileOpen.htm">FileOpen</a></td><td>Ermöglicht eine objektorientierte Datei-Ein-/Ausgabe.</td></tr>
<tr><td><a href="lib/Func.htm#Func">Func</a></td><td>Ruft eine <a href="Objects.htm#Function_References">Funktionsreferenz</a> ab.</td></tr>
<tr><td><a href="lib/GetKey.htm">GetKeyName/VK/SC</a></td><td>Ruft den Namen/Text, virtuellen Tastencode oder Scancode einer Taste ab.</td></tr>
<tr><td><a href="lib/InStr.htm">InStr</a></td><td>Sucht nach einem bestimmten <em>Vorkommen</em> einer Zeichenkette, beginnend von links oder rechts.</td></tr>
<tr><td><a href="lib/IsByRef.htm">IsByRef</a></td><td>Ermittelt, ob für einen bestimmten ByRef-Parameter eine Variable bereitgestellt wurde.</td></tr>
<tr><td><a href="Objects.htm">IsObject</a></td><td>Ermittelt, ob ein Wert ein Objekt ist.</td></tr>
<tr><td><a href="lib/StrPut.htm">StrPut</a> / <a href="lib/StrGet.htm">StrGet</a></td><td>Kopiert eine Zeichenkette auf eine oder von einer Speicheradresse (optional mit Codepage-Umwandlung).</td></tr>
<tr><td><a href="lib/Trim.htm">Trim</a></td><td>Entfernt bestimmte Zeichen vom Anfang und/oder Ende einer Zeichenkette.</td></tr>
<tr><td><a href="misc/RegExCallout.htm">RegEx (?C<i>Num</i>:<i>Func</i>)</a></td><td>Ruft bei der Auswertung eines RegEx-Suchmusters eine Funktion auf.</td></tr>
<tr><td><a href="#Function_Libraries">Funktionsbibliotheken</a></td><td>Neue "lokale Bibliothek" und <code>#Include &lt;BiblName&gt;</code>.</td></tr>
<tr><td><a href="Functions.htm#Variadic">Variadische Funktionen</a></td><td>Funktionen können mithilfe eines Arrays eine beliebige Anzahl von Parametern akzeptieren.</td></tr>
<tr><td><a href="#Static">Statische Initialisierer</a></td><td>Statische Variablen können nun mit einem beliebigen Ausdruck initialisiert werden.</td></tr>
</table>

<h2 id="objects">Objekte</h2>
<table class="info">
<tr>
  <th>Feature</th>
  <th abbr="Beschr">Beschreibung</th>
</tr>
<tr><td><a href="Objects.htm">Allgemein</a></td><td>Eine allgemeine Abhandlung über das Verhalten und die Nutzung von Objekten.</td></tr>
<tr><td><a href="Objects.htm#Arrays">Objekt</a></td><td>Assoziative Arrays, die mit anderen Funktionalitäten erweiterbar sind.</td></tr>
<tr><td><a href="lib/Enumerator.htm">Enumerator</a></td><td>Ermöglicht das Enumerieren einer Sammlung von Elementen.</td></tr>
<tr><td><a href="lib/File.htm">File</a></td><td>Ermöglicht eine Schnittstelle für den Zugriff auf eine Datei. <a href="lib/FileOpen.htm">FileOpen()</a> gibt ein Objekt dieses Typs zurück.</td></tr>
<tr><td><a href="lib/Func.htm">Func</a></td><td>Repräsentiert eine benutzerdefinierte oder interne Funktion, die vom Skript aufgerufen werden kann.</td></tr>
<tr><td>ComObject</td><td>Siehe ComObj-Funktionen oben.</td></tr>
</table>

<h2 id="vars">Variablen</h2>
<table class="info">
<tr>
  <th>Feature</th>
  <th abbr="Beschr">Beschreibung</th>
</tr>
<tr><td>A_Is64bitOS</td><td>Enthält 1 (true), wenn das System 64-Bit ist, oder 0 (false), wenn es 32-Bit ist.</td></tr>
<tr><td>A_IsUnicode</td><td>In Unicode-Builds enthält diese Variable eine 1 (<i>True</i>). In ANSI-Builds wird sie nicht gesetzt, was faktisch <i>False</i> bedeutet.</td></tr>
<tr><td>A_FileEncoding</td><td>Enthält die Standardkodierung für verschiedene Befehle; siehe <a href="lib/FileEncoding.htm">FileEncoding</a>.</td></tr>
<tr><td>A_OSVersion</td><td>Unterstützt Windows 7 und Windows 8; siehe <a href="Variables.htm#OSVersion">A_OSVersion</a>.</td></tr>
<tr><td>A_PriorKey</td><td>Der Name der Taste, die vor dem Drücken oder Loslassen der letzten Taste gedrückt wurde ... <a href="Variables.htm#PriorKey">(Mehr)</a></td></tr>
<tr><td>A_PtrSize</td><td>Enthält die Größe eines Pointers in Bytes. Entweder 4 (32-Bit) oder 8 (64-Bit).</td></tr>
<tr><td>A_RegView</td><td>Die aktuell gesetzte Registry-Ansicht von <a href="lib/SetRegView.htm">SetRegView</a>.</td></tr>
<tr><td>A_ScriptHwnd</td><td>Die HWND-Nummer (eindeutige ID) des <a href="Program.htm#main-window">versteckten Hauptfensters des Skripts</a>.</td></tr>
</table>

<h2 id="types">Datentypen</h2>
<table class="info">
<tr>
  <th>Feature</th>
  <th abbr="Beschr">Beschreibung</th>
</tr>
<tr><td><a href="lib/DllCall.htm#ptr">Ptr</a></td><td>Äquivalent zu <i>Int</i> in 32-Bit-Builds und <i>Int64</i> in 64-Bit-Builds. Wird unterstützt von <a href="lib/DllCall.htm">DllCall()</a>, <a href="lib/NumPut.htm">NumPut()</a> und <a href="lib/NumGet.htm">NumGet()</a>.</td></tr>
<tr><td><a href="lib/DllCall.htm#astr">AStr</a>, <a href="lib/DllCall.htm#astr">WStr</a></td><td>Wird nur von <a href="lib/DllCall.htm">DllCall()</a> unterstützt; siehe <a href="Compat.htm">Skriptkompatibilität</a>.</td></tr>
</table>

<h2 id="unicode">Unicode</h2>
<table class="info">
<tr>
  <th>Feature</th>
  <th abbr="Beschr">Beschreibung</th>
</tr>
<tr><td><a href="Compat.htm">Kompatibilität</a></td><td>Wie man mit Unicode in DllCall() usw. umgeht.</td></tr>
<tr><td><a href="Scripts.htm#cp">Skriptdateien</a></td><td>Die Nutzung von Unicode in Skriptdateien.</td></tr>
<tr><td><a href="lib/Send.htm#Unicode">SendInput</a></td><td>Die Nutzung von Unicode in Verbindung mit SendInput.</td></tr>
</table>

<h2 id="other">Sonstiges</h2>
<table class="info">
<tr>
  <th>Feature</th>
  <th abbr="Beschr">Beschreibung</th>
</tr>
<tr><td><a href="misc/WinTitle.htm#ahk_exe">ahk_exe</a></td><td>Fenster können über den Namen oder Pfad des übergeordneten Prozesses (EXE-Datei) identifiziert werden.</td></tr>
<tr><td><a href="Scripts.htm#idebug">Debugging</a></td><td>Interaktive Debugging-Features (zeilenweise Ausführung usw.).</td></tr>
<tr><td><a href="#Error_Handling">Fehlerbehandlung</a></td><td>Try/Catch/Throw und erhöhter Nutzwert für A_LastError.</td></tr>
<tr><td><a href="#GUI_Enhancements">GUI-Verbesserungen</a></td><td>Zahlreiche Verbesserungen am Gui-Befehl und ähnlichem.</td></tr>
<tr><td><a href="#icons">Symbolunterstützung</a></td><td>Ressourcenidentifikatoren und verbesserte Unterstützung für verschiedene Symbolgrößen.</td></tr>
<tr><td><a href="Compat.htm">Sonstige Änderungen</a></td><td>Änderungen bzgl. der Skriptkompatibilität.</td></tr>
<tr><td><a href="AHKL_ChangeLog.htm">Versionsverlauf</a></td><td>Verlauf der AutoHotkey_L-Revisionen.</td></tr>

</table>


<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Viele Befehle unterstützen <a href="lib/Try.htm">Try</a>/<a href="lib/Catch.htm">Catch</a> statt ErrorLevel für die Fehlerbehandlung. Zum Beispiel:</p>
<pre class="NoIndent">try
{
    FileCopy, Datei1.txt, C:\Ordner
    FileDelete, C:\Ordner\Alt.txt
}
catch
    MsgBox Es ist ein Fehler aufgetreten!</pre>
<p>Darüber hinaus setzen die folgenden Befehle nun <a href="Variables.htm#LastError">A_LastError</a>, um das Debuggen zu unterstützen: FileAppend, FileRead, FileReadLine, FileDelete, FileCopy, FileMove, FileGetAttrib/Time/Size/Version, FileSetAttrib/Time, FileCreateDir, RegRead, RegWrite, RegDelete.</p>

<h2 id="Function_Libraries">Funktionsbibliotheken</h2>
<p>Neben der Benutzerbibliothek in <code class="no-highlight">%A_MyDocuments%\AutoHotkey\Lib</code> und der Standardbibliothek im AutoHotkey-Verzeichnis können nun Funktionen auch aus der "lokalen Bibliothek" <code class="no-highlight">%A_ScriptDir%\Lib</code> automatisch inkludiert werden. Weitere Informationen finden Sie unter <a href="Functions.htm#lib">Funktionsbibliotheken</a>.</p>
<p><a href="lib/_Include.htm">#Include &lt;BiblName&gt;</a> Inkludiert explizit eine Bibliotheksdatei, die sich in einer der Funktionsbibliotheken befinden kann.</p>

<h2 id="GUI_Enhancements">GUI-Verbesserungen</h2>
<p>Folgende Verbesserungen wurden am <a href="lib/Gui.htm">Gui</a>-Befehl und ähnlichem vorgenommen:</p>
<ul>
  <li>Um ein GUI-Fenster anzusteuern, kann <a href="lib/Gui.htm#MultiWin">ein Name oder eine HWND-Nummer</a> anstelle einer Nummer zwischen 1 und 99 verwendet werden.</li>
  <li><a href="lib/Gui.htm#New">Gui, New</a> erstellt ein neues anonymes GUI-Fenster.</li>
  <li>Es können beliebig viele benannte oder anonyme GUI-Fenster erstellt werden.</li>
  <li>Neue GUI-Optionen: <a href="lib/Gui.htm#GuiHwndOutputVar">+Hwnd<em>AusgabeVar</em></a>, <a href="lib/Gui.htm#Parent">+Parent<em>GUI</em></a></li>
  <li>Einem GUI-Fenster kann ein beliebiges Fenster übergeordnet werden: <a href="lib/Gui.htm#Owner">+Owner<em>%HWND%</em></a>.</li>
  <li><a href="lib/Gui.htm#fontq">Gui, Font</a> kann die Kantenglättung des Textes einstellen.</li>
  <li><a href="lib/GuiControls.htm#ActiveX">ActiveX-Steuerelemente</a> wie z.B. "Internet Explorer WebBrowser" werden unterstützt.</li>
  <li><a href="lib/GuiControlGet.htm#Name">GuiControlGet, <em>AusgabeVar</em>, Name</a> ermittelt den Namen der Variable, die einem GUI-Steuerelement zugeordnet wurde.</li>
  <li>Keyboard Accelerators wie <kbd>Ctrl</kbd>+<kbd>O</kbd> werden automatisch unterstützt, wenn sie in <a href="lib/Gui.htm#Menu">Gui-Menüs</a> verwendet werden.</li>
  <li>Die <a href="lib/Gui.htm#fontq">Textdarstellungsqualität</a> kann mithilfe des Font-Unterbefehls eingestellt werden.</li>
</ul>

<h2 id="Static">Statische Variablen</h2>
<p>Statische Variablen können nun mit einem beliebigen Ausdruck initialisiert werden. Zum Beispiel:</p>
<pre>Sleep 500
MsgBox % "Seit dem Start des Skripts sind " Time() "ms vergangen."
Time() {
    static Tick := A_TickCount
    return A_TickCount - Tick
}</pre>

<h2 id="enc">Textkodierungen</h2>
<p><a href="lib/FileRead.htm">FileRead</a>, <a href="lib/FileReadLine.htm">FileReadLine</a>, <a href="lib/LoopReadFile.htm">Loop Read</a> und <a href="lib/FileAppend.htm">FileAppend</a> unterstützen den Großteil der von Windows unterstützten Textkodierungen, nicht nur die Standard-ANSI-Codepage des Systems. <a href="lib/FileEncoding.htm">FileEncoding</a> kann verwendet werden, um die Standardkodierung zu bestimmen. FileRead und FileAppend können diese Standardkodierung wie folgt überschreiben:</p>
<pre class="Syntax">
<span class="func">FileRead</span>, AusgabeVar, *P<i>nnn</i> DateiName
<span class="func">FileAppend</span> <span class="optional">, Text, DateiName, Kodierung</span>
</pre>
<p>Während <i>nnn</i> ein numerischer <a href="https://learn.microsoft.com/windows/win32/intl/code-page-identifiers">Codepageidentifikator</a> sein muss, folgt <i>Kodierung</i> dem gleichen Format wie <a href="lib/FileEncoding.htm">FileEncoding</a>.</p>
<p><b>Siehe auch:</b> <a href="Compat.htm#FileRead">Skriptkompatibilität</a></p>

<h2 id="Variadic">Variadische Funktionen und Funktionsaufrufe</h2>
<p><a href="Functions.htm#Variadic">Variadische Funktionen</a> können mithilfe eines Arrays eine variable Anzahl von Parametern akzeptieren, während <a href="Functions.htm#VariadicCall">variadische Funktionsaufrufe</a> verwendet werden können, um eine variable Anzahl von Parametern an einer Funktion zu übergeben.</p>


<h2 id="icons">Verbesserte Unterstützung von Symbolen</h2>

<h3 id="Unusual_Sizes">Ungewöhnliche Größen</h3>
<p>Es können beliebig große Symbolressourcen, die vom Betriebssystem unterstützt werden, aus einer EXE-Datei extrahiert werden. Wenn mehrere Symbolressourcen mit unterschiedlichen Größen in einer Symbolgruppe vorhanden sind, wird automatisch die am besten geeignete Größe verwendet. Vor Revision 17 wurde eine beliebige Symbolressource vom System ausgewählt, die zunächst auf die systeminterne Standardgröße eines großen Symbols skaliert und anschließend wieder auf die gewünschte Größe skaliert wurde.</p>

<h3 id="Resource_Identifiers">Ressourcenidentifikatoren</h3>
<p>Negative Symbolnummern können verwendet werden, um eine Gruppensymbolressource innerhalb einer EXE-Datei zu identifizieren. Das folgende Beispiel zeigt, wie das <a href="Program.htm#tray-icon">Tray-Symbol</a> mit dem Symbol ersetzt werden kann, das standardmäßig für die .ahk-Dateien verwendet wird:</p>
<pre>Menu, Tray, Icon, %A_AhkPath%, -160</pre>

</body></html>
